{"version":3,"file":"uds.js","mappings":"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","sources":["webpack://ecubuspro/./node_modules/lodash/lodash.js","webpack://ecubuspro/./src/main/timer/build/Release/precision_timer.node","webpack://ecubuspro/./src/main/worker/secureAccess/build/Release/sa.node","webpack://ecubuspro/./node_modules/workerpool/src/Pool.js","webpack://ecubuspro/./node_modules/workerpool/src/Promise.js","webpack://ecubuspro/./node_modules/workerpool/src/WorkerHandler.js","webpack://ecubuspro/./node_modules/workerpool/src/debug-port-allocator.js","webpack://ecubuspro/./node_modules/workerpool/src/environment.js","webpack://ecubuspro/./node_modules/workerpool/src/generated/embeddedWorker.js","webpack://ecubuspro/./node_modules/workerpool/src/index.js","webpack://ecubuspro/./node_modules/workerpool/src/transfer.js","webpack://ecubuspro/./node_modules/workerpool/src/validateOptions.js","webpack://ecubuspro/./node_modules/workerpool/src/worker.js","webpack://ecubuspro/external node-commonjs \"child_process\"","webpack://ecubuspro/external node-commonjs \"os\"","webpack://ecubuspro/external node-commonjs \"path\"","webpack://ecubuspro/external node-commonjs \"worker_threads\"","webpack://ecubuspro/webpack/bootstrap","webpack://ecubuspro/webpack/runtime/compat get default export","webpack://ecubuspro/webpack/runtime/define property getters","webpack://ecubuspro/webpack/runtime/hasOwnProperty shorthand","webpack://ecubuspro/webpack/runtime/make namespace object","webpack://ecubuspro/webpack/runtime/node module decorator","webpack://ecubuspro/webpack/runtime/publicPath","webpack://ecubuspro/./node_modules/emittery/maps.js","webpack://ecubuspro/./node_modules/emittery/index.js","webpack://ecubuspro/external node-commonjs \"crypto\"","webpack://ecubuspro/./node_modules/uuid/dist/esm-node/native.js","webpack://ecubuspro/./node_modules/uuid/dist/esm-node/rng.js","webpack://ecubuspro/./node_modules/uuid/dist/esm-node/stringify.js","webpack://ecubuspro/./node_modules/uuid/dist/esm-node/v4.js","webpack://ecubuspro/./src/main/share/uds.ts","webpack://ecubuspro/./src/main/share/can.ts","webpack://ecubuspro/./src/main/worker/secureAccess/index.ts","webpack://ecubuspro/./src/main/share/lin.ts","webpack://ecubuspro/external node-commonjs \"node:assert\"","webpack://ecubuspro/./src/renderer/src/database/ldf/calc.ts","webpack://ecubuspro/./src/renderer/src/database/dbc/calc.ts","webpack://ecubuspro/./src/main/util.ts","webpack://ecubuspro/./src/main/timer/timer.ts","webpack://ecubuspro/external node-commonjs \"node:test\"","webpack://ecubuspro/external node-commonjs \"node:worker_threads\"","webpack://ecubuspro/./src/main/share/someip/index.ts","webpack://ecubuspro/./src/main/worker/someip.ts","webpack://ecubuspro/./src/main/share/sysVar.ts","webpack://ecubuspro/./src/main/worker/uds.ts","webpack://ecubuspro/./src/main/var/index.ts"],"sourcesContent":["/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.21';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function',\n      INVALID_TEMPL_VAR_ERROR_TEXT = 'Invalid `variable` option passed into `_.template`';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading whitespace. */\n  var reTrimStart = /^\\s+/;\n\n  /** Used to match a single whitespace character. */\n  var reWhitespace = /\\s/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /**\n   * Used to validate the `validate` option in `_.template` variable.\n   *\n   * Forbids characters which could potentially change the meaning of the function argument definition:\n   * - \"(),\" (modification of function parameters)\n   * - \"=\" (default value)\n   * - \"[]{}\" (destructuring of function parameters)\n   * - \"/\" (beginning of a comment)\n   * - whitespace\n   */\n  var reForbiddenIdentifierChars = /[()=,{}\\[\\]\\/\\s]/;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n      rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      // Use `util.types` for Node.js 10+.\n      var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n      if (types) {\n        return types;\n      }\n\n      // Legacy `process.binding('util')` for Node.js < 10.\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.trim`.\n   *\n   * @private\n   * @param {string} string The string to trim.\n   * @returns {string} Returns the trimmed string.\n   */\n  function baseTrim(string) {\n    return string\n      ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n      : string;\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the last non-whitespace character.\n   */\n  function trimmedEndIndex(string) {\n    var index = string.length;\n\n    while (index-- && reWhitespace.test(string.charAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array and iteratees accept only\n     * one argument. The heuristic for whether a section qualifies for shortcut\n     * fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n     * following template settings to use alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      if (isSet(value)) {\n        value.forEach(function(subValue) {\n          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n        });\n      } else if (isMap(value)) {\n        value.forEach(function(subValue, key) {\n          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n        });\n      }\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        stack || (stack = new Stack);\n        if (isObject(srcValue)) {\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = safeGet(object, key),\n          srcValue = safeGet(source, key),\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || isFunction(objValue)) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      if (iteratees.length) {\n        iteratees = arrayMap(iteratees, function(iteratee) {\n          if (isArray(iteratee)) {\n            return function(value) {\n              return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);\n            }\n          }\n          return iteratee;\n        });\n      } else {\n        iteratees = [identity];\n      }\n\n      var index = -1;\n      iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n          return object;\n        }\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      var low = 0,\n          high = array == null ? 0 : array.length;\n      if (high === 0) {\n        return 0;\n      }\n\n      value = iteratee(value);\n      var valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value)) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n        if (precision && nativeIsFinite(number)) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] === undefined\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n     * of source objects to the destination object for all destination properties\n     * that resolve to `undefined`.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n     * objects into destination objects that are passed thru.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n     * objects.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {string} key The key of the property to inspect.\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n     */\n    function customOmitClone(value) {\n      return isPlainObject(value) ? undefined : value;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Check that cyclic values are equal.\n      var arrStacked = stack.get(array);\n      var othStacked = stack.get(other);\n      if (arrStacked && othStacked) {\n        return arrStacked == other && othStacked == array;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Check that cyclic values are equal.\n      var objStacked = stack.get(object);\n      var othStacked = stack.get(other);\n      if (objStacked && othStacked) {\n        return objStacked == other && othStacked == object;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n      if (object == null) {\n        return [];\n      }\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return new Ctor;\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return new Ctor;\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      var type = typeof value;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n\n      return !!length &&\n        (type == 'number' ||\n          (type != 'symbol' && reIsUint.test(value))) &&\n            (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the property to get.\n     * @returns {*} Returns the property value.\n     */\n    function safeGet(object, key) {\n      if (key === 'constructor' && typeof object[key] === 'function') {\n        return;\n      }\n\n      if (key == '__proto__') {\n        return;\n      }\n\n      return object[key];\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (string.charCodeAt(0) === 46 /* . */) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, subString) {\n        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     *\n     * // Combining several predicates using `_.overEvery` or `_.overSome`.\n     * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n     * // => objects for ['fred', 'barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 30 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            timeWaiting = wait - timeSinceLastCall;\n\n        return maxing\n          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n          : timeWaiting;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            clearTimeout(timerId);\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = baseTrim(value);\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return value\n        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n        : (value === 0 ? value : 0);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(object, sources) {\n      object = Object(object);\n\n      var index = -1;\n      var length = sources.length;\n      var guard = length > 2 ? sources[2] : undefined;\n\n      if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n        length = 1;\n      }\n\n      while (++index < length) {\n        var source = sources[index];\n        var props = keysIn(source);\n        var propsIndex = -1;\n        var propsLength = props.length;\n\n        while (++propsIndex < propsLength) {\n          var key = props[propsIndex];\n          var value = object[key];\n\n          if (value === undefined ||\n              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n            object[key] = source[key];\n          }\n        }\n      }\n\n      return object;\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, customDefaultsMerge);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = position == null\n        ? 0\n        : baseClamp(toInteger(position), 0, string.length);\n\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      // The sourceURL gets injected into the source that's eval-ed, so be careful\n      // to normalize all kinds of whitespace, so e.g. newlines (and unicode versions of it) can't sneak in\n      // and escape the comment, thus injecting code that gets evaled.\n      var sourceURL = '//# sourceURL=' +\n        (hasOwnProperty.call(options, 'sourceURL')\n          ? (options.sourceURL + '').replace(/\\s/g, ' ')\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = hasOwnProperty.call(options, 'variable') && options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Throw an error if a forbidden character was found in `variable`, to prevent\n      // potential command injection attacks.\n      else if (reForbiddenIdentifierChars.test(variable)) {\n        throw new Error(INVALID_TEMPL_VAR_ERROR_TEXT);\n      }\n\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return baseTrim(string);\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.slice(0, trimmedEndIndex(string) + 1);\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * **Note:** Multiple values can be checked by combining several matchers\n     * using `_.overSome`\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     *\n     * // Checking for several possible values\n     * _.filter(objects, _.overSome([_.matches({ 'a': 1 }), _.matches({ 'a': 4 })]));\n     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * **Note:** Multiple values can be checked by combining several matchers\n     * using `_.overSome`\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     *\n     * // Checking for several possible values\n     * _.filter(objects, _.overSome([_.matchesProperty('a', 1), _.matchesProperty('a', 4)]));\n     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * Following shorthands are possible for providing predicates.\n     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.\n     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * Following shorthands are possible for providing predicates.\n     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.\n     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     *\n     * var matchesFunc = _.overSome([{ 'a': 1 }, { 'a': 2 }])\n     * var matchesPropertyFunc = _.overSome([['a', 1], ['a', 2]])\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = (this.__filtered__ && !index)\n          ? new LazyWrapper(this)\n          : this.clone();\n\n        if (result.__filtered__) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = lodashFunc.name + '';\n        if (!hasOwnProperty.call(realNames, key)) {\n          realNames[key] = [];\n        }\n        realNames[key].push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n","\ntry {\n  process.dlopen(module, require(\"path\").join(__dirname, __webpack_public_path__, \"precision_timer.node\"));\n} catch (error) {\n  throw new Error('node-loader:\\n' + error);\n}\n","\ntry {\n  process.dlopen(module, require(\"path\").join(__dirname, __webpack_public_path__, \"sa.node\"));\n} catch (error) {\n  throw new Error('node-loader:\\n' + error);\n}\n","var {Promise} = require('./Promise');\nvar WorkerHandler = require('./WorkerHandler');\nvar environment = require('./environment');\nvar DebugPortAllocator = require('./debug-port-allocator');\nvar DEBUG_PORT_ALLOCATOR = new DebugPortAllocator();\n/**\n * A pool to manage workers, which can be created using the function workerpool.pool.\n *\n * @param {String} [script]   Optional worker script\n * @param {import('./types.js').WorkerPoolOptions} [options]  See docs\n * @constructor\n */\nfunction Pool(script, options) {\n  if (typeof script === 'string') {\n    /** @readonly */\n    this.script = script || null;\n  }\n  else {\n    this.script = null;\n    options = script;\n  }\n\n  /** @private */\n  this.workers = [];  // queue with all workers\n  /** @private */\n  this.tasks = [];    // queue with tasks awaiting execution\n\n  options = options || {};\n\n  /** @readonly */\n  this.forkArgs = Object.freeze(options.forkArgs || []);\n  /** @readonly */\n  this.forkOpts = Object.freeze(options.forkOpts || {});\n  /** @readonly */\n  this.workerOpts = Object.freeze(options.workerOpts || {});\n  /** @readonly */\n  this.workerThreadOpts = Object.freeze(options.workerThreadOpts || {})\n  /** @private */\n  this.debugPortStart = (options.debugPortStart || 43210);\n  /** @readonly @deprecated */\n  this.nodeWorker = options.nodeWorker;\n  /** @readonly\n   * @type {'auto' | 'web' | 'process' | 'thread'}\n   */\n  this.workerType = options.workerType || options.nodeWorker || 'auto'\n  /** @readonly */\n  this.maxQueueSize = options.maxQueueSize || Infinity;\n  /** @readonly */\n  this.workerTerminateTimeout = options.workerTerminateTimeout || 1000;\n\n  /** @readonly */\n  this.onCreateWorker = options.onCreateWorker || (() => null);\n  /** @readonly */\n  this.onTerminateWorker = options.onTerminateWorker || (() => null);\n\n  /** @readonly */\n  this.emitStdStreams = options.emitStdStreams || false\n\n  // configuration\n  if (options && 'maxWorkers' in options) {\n    validateMaxWorkers(options.maxWorkers);\n    /** @readonly */\n    this.maxWorkers = options.maxWorkers;\n  }\n  else {\n    this.maxWorkers = Math.max((environment.cpus || 4) - 1, 1);\n  }\n\n  if (options && 'minWorkers' in options) {\n    if(options.minWorkers === 'max') {\n      /** @readonly */\n      this.minWorkers = this.maxWorkers;\n    } else {\n      validateMinWorkers(options.minWorkers);\n      this.minWorkers = options.minWorkers;\n      this.maxWorkers = Math.max(this.minWorkers, this.maxWorkers);     // in case minWorkers is higher than maxWorkers\n    }\n    this._ensureMinWorkers();\n  }\n\n  /** @private */\n  this._boundNext = this._next.bind(this);\n\n\n  if (this.workerType === 'thread') {\n    WorkerHandler.ensureWorkerThreads();\n  }\n}\n\n\n/**\n * Execute a function on a worker.\n *\n * Example usage:\n *\n *   var pool = new Pool()\n *\n *   // call a function available on the worker\n *   pool.exec('fibonacci', [6])\n *\n *   // offload a function\n *   function add(a, b) {\n *     return a + b\n *   };\n *   pool.exec(add, [2, 4])\n *       .then(function (result) {\n *         console.log(result); // outputs 6\n *       })\n *       .catch(function(error) {\n *         console.log(error);\n *       });\n * @template { (...args: any[]) => any } T\n * @param {String | T} method  Function name or function.\n *                                    If `method` is a string, the corresponding\n *                                    method on the worker will be executed\n *                                    If `method` is a Function, the function\n *                                    will be stringified and executed via the\n *                                    workers built-in function `run(fn, args)`.\n * @param {Parameters<T> | null} [params]  Function arguments applied when calling the function\n * @param {import('./types.js').ExecOptions} [options]  Options\n * @return {Promise<ReturnType<T>>}\n */\nPool.prototype.exec = function (method, params, options) {\n  // validate type of arguments\n  if (params && !Array.isArray(params)) {\n    throw new TypeError('Array expected as argument \"params\"');\n  }\n\n  if (typeof method === 'string') {\n    var resolver = Promise.defer();\n\n    if (this.tasks.length >= this.maxQueueSize) {\n      throw new Error('Max queue size of ' + this.maxQueueSize + ' reached');\n    }\n\n    // add a new task to the queue\n    var tasks = this.tasks;\n    var task = {\n      method:  method,\n      params:  params,\n      resolver: resolver,\n      timeout: null,\n      options: options\n    };\n    tasks.push(task);\n\n    // replace the timeout method of the Promise with our own,\n    // which starts the timer as soon as the task is actually started\n    var originalTimeout = resolver.promise.timeout;\n    resolver.promise.timeout = function timeout (delay) {\n      if (tasks.indexOf(task) !== -1) {\n        // task is still queued -> start the timer later on\n        task.timeout = delay;\n        return resolver.promise;\n      }\n      else {\n        // task is already being executed -> start timer immediately\n        return originalTimeout.call(resolver.promise, delay);\n      }\n    };\n\n    // trigger task execution\n    this._next();\n\n    return resolver.promise;\n  }\n  else if (typeof method === 'function') {\n    // send stringified function and function arguments to worker\n    return this.exec('run', [String(method), params], options);\n  }\n  else {\n    throw new TypeError('Function or string expected as argument \"method\"');\n  }\n};\n\n/**\n * Create a proxy for current worker. Returns an object containing all\n * methods available on the worker. All methods return promises resolving the methods result.\n * @template { { [k: string]: (...args: any[]) => any } } T\n * @return {Promise<import('./types.js').Proxy<T>, Error>} Returns a promise which resolves with a proxy object\n */\nPool.prototype.proxy = function () {\n  if (arguments.length > 0) {\n    throw new Error('No arguments expected');\n  }\n\n  var pool = this;\n  return this.exec('methods')\n      .then(function (methods) {\n        var proxy = {};\n\n        methods.forEach(function (method) {\n          proxy[method] = function () {\n            return pool.exec(method, Array.prototype.slice.call(arguments));\n          }\n        });\n\n        return proxy;\n      });\n};\n\n/**\n * Creates new array with the results of calling a provided callback function\n * on every element in this array.\n * @param {Array} array\n * @param {function} callback  Function taking two arguments:\n *                             `callback(currentValue, index)`\n * @return {Promise.<Array>} Returns a promise which resolves  with an Array\n *                           containing the results of the callback function\n *                           executed for each of the array elements.\n */\n/* TODO: implement map\nPool.prototype.map = function (array, callback) {\n};\n*/\n\n/**\n * Grab the first task from the queue, find a free worker, and assign the\n * worker to the task.\n * @private\n */\nPool.prototype._next = function () {\n  if (this.tasks.length > 0) {\n    // there are tasks in the queue\n\n    // find an available worker\n    var worker = this._getWorker();\n    if (worker) {\n      // get the first task from the queue\n      var me = this;\n      var task = this.tasks.shift();\n\n      // check if the task is still pending (and not cancelled -> promise rejected)\n      if (task.resolver.promise.pending) {\n        // send the request to the worker\n        var promise = worker.exec(task.method, task.params, task.resolver, task.options)\n          .then(me._boundNext)\n          .catch(function () {\n            // if the worker crashed and terminated, remove it from the pool\n            if (worker.terminated) {\n              return me._removeWorker(worker);\n            }\n          }).then(function() {\n            me._next(); // trigger next task in the queue\n          });\n\n        // start queued timer now\n        if (typeof task.timeout === 'number') {\n          promise.timeout(task.timeout);\n        }\n      } else {\n        // The task taken was already complete (either rejected or resolved), so just trigger next task in the queue\n        me._next();\n      }\n    }\n  }\n};\n\n/**\n * Get an available worker. If no worker is available and the maximum number\n * of workers isn't yet reached, a new worker will be created and returned.\n * If no worker is available and the maximum number of workers is reached,\n * null will be returned.\n *\n * @return {WorkerHandler | null} worker\n * @private\n */\nPool.prototype._getWorker = function() {\n  // find a non-busy worker\n  var workers = this.workers;\n  for (var i = 0; i < workers.length; i++) {\n    var worker = workers[i];\n    if (worker.busy() === false) {\n      return worker;\n    }\n  }\n\n  if (workers.length < this.maxWorkers) {\n    // create a new worker\n    worker = this._createWorkerHandler();\n    workers.push(worker);\n    return worker;\n  }\n\n  return null;\n};\n\n/**\n * Remove a worker from the pool.\n * Attempts to terminate worker if not already terminated, and ensures the minimum\n * pool size is met.\n * @param {WorkerHandler} worker\n * @return {Promise<WorkerHandler>}\n * @private\n */\nPool.prototype._removeWorker = function(worker) {\n  var me = this;\n\n  DEBUG_PORT_ALLOCATOR.releasePort(worker.debugPort);\n  // _removeWorker will call this, but we need it to be removed synchronously\n  this._removeWorkerFromList(worker);\n  // If minWorkers set, spin up new workers to replace the crashed ones\n  this._ensureMinWorkers();\n  // terminate the worker (if not already terminated)\n  return new Promise(function(resolve, reject) {\n    worker.terminate(false, function(err) {\n      me.onTerminateWorker({\n        forkArgs: worker.forkArgs,\n        forkOpts: worker.forkOpts,\n        workerThreadOpts: worker.workerThreadOpts,\n        script: worker.script\n      });\n      if (err) {\n        reject(err);\n      } else {\n        resolve(worker);\n      }\n    });\n  });\n};\n\n/**\n * Remove a worker from the pool list.\n * @param {WorkerHandler} worker\n * @private\n */\nPool.prototype._removeWorkerFromList = function(worker) {\n  // remove from the list with workers\n  var index = this.workers.indexOf(worker);\n  if (index !== -1) {\n    this.workers.splice(index, 1);\n  }\n};\n\n/**\n * Close all active workers. Tasks currently being executed will be finished first.\n * @param {boolean} [force=false]   If false (default), the workers are terminated\n *                                  after finishing all tasks currently in\n *                                  progress. If true, the workers will be\n *                                  terminated immediately.\n * @param {number} [timeout]        If provided and non-zero, worker termination promise will be rejected\n *                                  after timeout if worker process has not been terminated.\n * @return {Promise.<void, Error>}\n */\nPool.prototype.terminate = function (force, timeout) {\n  var me = this;\n\n  // cancel any pending tasks\n  this.tasks.forEach(function (task) {\n    task.resolver.reject(new Error('Pool terminated'));\n  });\n  this.tasks.length = 0;\n\n  var f = function (worker) {\n    DEBUG_PORT_ALLOCATOR.releasePort(worker.debugPort);\n    this._removeWorkerFromList(worker);\n  };\n  var removeWorker = f.bind(this);\n\n  var promises = [];\n  var workers = this.workers.slice();\n  workers.forEach(function (worker) {\n    var termPromise = worker.terminateAndNotify(force, timeout)\n      .then(removeWorker)\n      .always(function() {\n        me.onTerminateWorker({\n          forkArgs: worker.forkArgs,\n          forkOpts: worker.forkOpts,\n          workerThreadOpts: worker.workerThreadOpts,\n          script: worker.script\n        });\n      });\n    promises.push(termPromise);\n  });\n  return Promise.all(promises);\n};\n\n/**\n * Retrieve statistics on tasks and workers.\n * @return {{totalWorkers: number, busyWorkers: number, idleWorkers: number, pendingTasks: number, activeTasks: number}} Returns an object with statistics\n */\nPool.prototype.stats = function () {\n  var totalWorkers = this.workers.length;\n  var busyWorkers = this.workers.filter(function (worker) {\n    return worker.busy();\n  }).length;\n\n  return {\n    totalWorkers:  totalWorkers,\n    busyWorkers:   busyWorkers,\n    idleWorkers:   totalWorkers - busyWorkers,\n\n    pendingTasks:  this.tasks.length,\n    activeTasks:   busyWorkers\n  };\n};\n\n/**\n * Ensures that a minimum of minWorkers is up and running\n * @private\n */\nPool.prototype._ensureMinWorkers = function() {\n  if (this.minWorkers) {\n    for(var i = this.workers.length; i < this.minWorkers; i++) {\n      this.workers.push(this._createWorkerHandler());\n    }\n  }\n};\n\n/**\n * Helper function to create a new WorkerHandler and pass all options.\n * @return {WorkerHandler}\n * @private\n */\nPool.prototype._createWorkerHandler = function () {\n  const overriddenParams = this.onCreateWorker({\n    forkArgs: this.forkArgs,\n    forkOpts: this.forkOpts,\n    workerOpts: this.workerOpts,\n    workerThreadOpts: this.workerThreadOpts,\n    script: this.script\n  }) || {};\n\n  return new WorkerHandler(overriddenParams.script || this.script, {\n    forkArgs: overriddenParams.forkArgs || this.forkArgs,\n    forkOpts: overriddenParams.forkOpts || this.forkOpts,\n    workerOpts: overriddenParams.workerOpts || this.workerOpts,\n    workerThreadOpts: overriddenParams.workerThreadOpts || this.workerThreadOpts,\n    debugPort: DEBUG_PORT_ALLOCATOR.nextAvailableStartingAt(this.debugPortStart),\n    workerType: this.workerType,\n    workerTerminateTimeout: this.workerTerminateTimeout,\n    emitStdStreams: this.emitStdStreams,\n  });\n}\n\n/**\n * Ensure that the maxWorkers option is an integer >= 1\n * @param {*} maxWorkers\n * @returns {boolean} returns true maxWorkers has a valid value\n */\nfunction validateMaxWorkers(maxWorkers) {\n  if (!isNumber(maxWorkers) || !isInteger(maxWorkers) || maxWorkers < 1) {\n    throw new TypeError('Option maxWorkers must be an integer number >= 1');\n  }\n}\n\n/**\n * Ensure that the minWorkers option is an integer >= 0\n * @param {*} minWorkers\n * @returns {boolean} returns true when minWorkers has a valid value\n */\nfunction validateMinWorkers(minWorkers) {\n  if (!isNumber(minWorkers) || !isInteger(minWorkers) || minWorkers < 0) {\n    throw new TypeError('Option minWorkers must be an integer number >= 0');\n  }\n}\n\n/**\n * Test whether a variable is a number\n * @param {*} value\n * @returns {boolean} returns true when value is a number\n */\nfunction isNumber(value) {\n  return typeof value === 'number';\n}\n\n/**\n * Test whether a number is an integer\n * @param {number} value\n * @returns {boolean} Returns true if value is an integer\n */\nfunction isInteger(value) {\n  return Math.round(value) == value;\n}\n\nmodule.exports = Pool;\n","'use strict';\n\n/**\n * Promise\n *\n * Inspired by https://gist.github.com/RubaXa/8501359 from RubaXa <trash@rubaxa.org>\n * @template T\n * @template [E=Error]\n * @param {Function} handler   Called as handler(resolve: Function, reject: Function)\n * @param {Promise} [parent]   Parent promise for propagation of cancel and timeout\n */\nfunction Promise(handler, parent) {\n  var me = this;\n\n  if (!(this instanceof Promise)) {\n    throw new SyntaxError('Constructor must be called with the new operator');\n  }\n\n  if (typeof handler !== 'function') {\n    throw new SyntaxError('Function parameter handler(resolve, reject) missing');\n  }\n\n  var _onSuccess = [];\n  var _onFail = [];\n\n  // status\n  /**\n   * @readonly\n   */\n  this.resolved = false;\n  /**\n   * @readonly\n   */\n  this.rejected = false;\n  /**\n   * @readonly\n   */\n  this.pending = true;\n\n  /**\n   * Process onSuccess and onFail callbacks: add them to the queue.\n   * Once the promise is resolved, the function _promise is replace.\n   * @param {Function} onSuccess\n   * @param {Function} onFail\n   * @private\n   */\n  var _process = function (onSuccess, onFail) {\n    _onSuccess.push(onSuccess);\n    _onFail.push(onFail);\n  };\n\n  /**\n   * Add an onSuccess callback and optionally an onFail callback to the Promise\n   * @template TT\n   * @template [TE=never]\n   * @param {(r: T) => TT | PromiseLike<TT>} onSuccess\n   * @param {(r: E) => TE | PromiseLike<TE>} [onFail]\n   * @returns {Promise<TT | TE, any>} promise\n   */\n  this.then = function (onSuccess, onFail) {\n    return new Promise(function (resolve, reject) {\n      var s = onSuccess ? _then(onSuccess, resolve, reject) : resolve;\n      var f = onFail    ? _then(onFail,    resolve, reject) : reject;\n\n      _process(s, f);\n    }, me);\n  };\n\n  /**\n   * Resolve the promise\n   * @param {*} result\n   * @type {Function}\n   */\n  var _resolve = function (result) {\n    // update status\n    me.resolved = true;\n    me.rejected = false;\n    me.pending = false;\n\n    _onSuccess.forEach(function (fn) {\n      fn(result);\n    });\n\n    _process = function (onSuccess, onFail) {\n      onSuccess(result);\n    };\n\n    _resolve = _reject = function () { };\n\n    return me;\n  };\n\n  /**\n   * Reject the promise\n   * @param {Error} error\n   * @type {Function}\n   */\n  var _reject = function (error) {\n    // update status\n    me.resolved = false;\n    me.rejected = true;\n    me.pending = false;\n\n    _onFail.forEach(function (fn) {\n      fn(error);\n    });\n\n    _process = function (onSuccess, onFail) {\n      onFail(error);\n    };\n\n    _resolve = _reject = function () { }\n\n    return me;\n  };\n\n  /**\n   * Cancel the promise. This will reject the promise with a CancellationError\n   * @returns {this} self\n   */\n  this.cancel = function () {\n    if (parent) {\n      parent.cancel();\n    }\n    else {\n      _reject(new CancellationError());\n    }\n\n    return me;\n  };\n\n  /**\n   * Set a timeout for the promise. If the promise is not resolved within\n   * the time, the promise will be cancelled and a TimeoutError is thrown.\n   * If the promise is resolved in time, the timeout is removed.\n   * @param {number} delay     Delay in milliseconds\n   * @returns {this} self\n   */\n  this.timeout = function (delay) {\n    if (parent) {\n      parent.timeout(delay);\n    }\n    else {\n      var timer = setTimeout(function () {\n        _reject(new TimeoutError('Promise timed out after ' + delay + ' ms'));\n      }, delay);\n\n      me.always(function () {\n        clearTimeout(timer);\n      });\n    }\n\n    return me;\n  };\n\n  // attach handler passing the resolve and reject functions\n  handler(function (result) {\n    _resolve(result);\n  }, function (error) {\n    _reject(error);\n  });\n}\n\n/**\n * Execute given callback, then call resolve/reject based on the returned result\n * @param {Function} callback\n * @param {Function} resolve\n * @param {Function} reject\n * @returns {Function}\n * @private\n */\nfunction _then(callback, resolve, reject) {\n  return function (result) {\n    try {\n      var res = callback(result);\n      if (res && typeof res.then === 'function' && typeof res['catch'] === 'function') {\n        // method returned a promise\n        res.then(resolve, reject);\n      }\n      else {\n        resolve(res);\n      }\n    }\n    catch (error) {\n      reject(error);\n    }\n  }\n}\n\n/**\n * Add an onFail callback to the Promise\n * @template TT\n * @param {(error: E) => TT | PromiseLike<TT>} onFail\n * @returns {Promise<T | TT>} promise\n */\nPromise.prototype['catch'] = function (onFail) {\n  return this.then(null, onFail);\n};\n\n// TODO: add support for Promise.catch(Error, callback)\n// TODO: add support for Promise.catch(Error, Error, callback)\n\n/**\n * Execute given callback when the promise either resolves or rejects.\n * @template TT\n * @param {() => Promise<TT>} fn\n * @returns {Promise<TT>} promise\n */\nPromise.prototype.always = function (fn) {\n  return this.then(fn, fn);\n};\n\n/**\n * Create a promise which resolves when all provided promises are resolved,\n * and fails when any of the promises resolves.\n * @param {Promise[]} promises\n * @returns {Promise<any[], any>} promise\n */\nPromise.all = function (promises){\n  return new Promise(function (resolve, reject) {\n    var remaining = promises.length,\n        results = [];\n\n    if (remaining) {\n      promises.forEach(function (p, i) {\n        p.then(function (result) {\n          results[i] = result;\n          remaining--;\n          if (remaining == 0) {\n            resolve(results);\n          }\n        }, function (error) {\n          remaining = 0;\n          reject(error);\n        });\n      });\n    }\n    else {\n      resolve(results);\n    }\n  });\n};\n\n/**\n * Create a promise resolver\n * @returns {{promise: Promise, resolve: Function, reject: Function}} resolver\n */\nPromise.defer = function () {\n  var resolver = {};\n\n  resolver.promise = new Promise(function (resolve, reject) {\n    resolver.resolve = resolve;\n    resolver.reject = reject;\n  });\n\n  return resolver;\n};\n\n/**\n * Create a cancellation error\n * @param {String} [message]\n * @extends Error\n */\nfunction CancellationError(message) {\n  this.message = message || 'promise cancelled';\n  this.stack = (new Error()).stack;\n}\n\nCancellationError.prototype = new Error();\nCancellationError.prototype.constructor = Error;\nCancellationError.prototype.name = 'CancellationError';\n\nPromise.CancellationError = CancellationError;\n\n\n/**\n * Create a timeout error\n * @param {String} [message]\n * @extends Error\n */\nfunction TimeoutError(message) {\n  this.message = message || 'timeout exceeded';\n  this.stack = (new Error()).stack;\n}\n\nTimeoutError.prototype = new Error();\nTimeoutError.prototype.constructor = Error;\nTimeoutError.prototype.name = 'TimeoutError';\n\nPromise.TimeoutError = TimeoutError;\n\n\nexports.Promise = Promise;\n","'use strict';\n\nvar {Promise} = require('./Promise');\nvar environment = require('./environment');\nconst {validateOptions, forkOptsNames, workerThreadOptsNames, workerOptsNames} = require(\"./validateOptions\");\n\n/**\n * Special message sent by parent which causes a child process worker to terminate itself.\n * Not a \"message object\"; this string is the entire message.\n */\nvar TERMINATE_METHOD_ID = '__workerpool-terminate__';\n\nfunction ensureWorkerThreads() {\n  var WorkerThreads = tryRequireWorkerThreads()\n  if (!WorkerThreads) {\n    throw new Error('WorkerPool: workerType = \\'thread\\' is not supported, Node >= 11.7.0 required')\n  }\n\n  return WorkerThreads;\n}\n\n// check whether Worker is supported by the browser\nfunction ensureWebWorker() {\n  // Workaround for a bug in PhantomJS (Or QtWebkit): https://github.com/ariya/phantomjs/issues/14534\n  if (typeof Worker !== 'function' && (typeof Worker !== 'object' || typeof Worker.prototype.constructor !== 'function')) {\n    throw new Error('WorkerPool: Web Workers not supported');\n  }\n}\n\nfunction tryRequireWorkerThreads() {\n  try {\n    return require('worker_threads');\n  } catch(error) {\n    if (typeof error === 'object' && error !== null && error.code === 'MODULE_NOT_FOUND') {\n      // no worker_threads available (old version of node.js)\n      return null;\n    } else {\n      throw error;\n    }\n  }\n}\n\n// get the default worker script\nfunction getDefaultWorker() {\n  if (environment.platform === 'browser') {\n    // test whether the browser supports all features that we need\n    if (typeof Blob === 'undefined') {\n      throw new Error('Blob not supported by the browser');\n    }\n    if (!window.URL || typeof window.URL.createObjectURL !== 'function') {\n      throw new Error('URL.createObjectURL not supported by the browser');\n    }\n\n    // use embedded worker.js\n    var blob = new Blob([require('./generated/embeddedWorker')], {type: 'text/javascript'});\n    return window.URL.createObjectURL(blob);\n  }\n  else {\n    // use external worker.js in current directory\n    return __dirname + '/worker.js';\n  }\n}\n\nfunction setupWorker(script, options) {\n  if (options.workerType === 'web') { // browser only\n    ensureWebWorker();\n    return setupBrowserWorker(script, options.workerOpts, Worker);\n  } else if (options.workerType === 'thread') { // node.js only\n    WorkerThreads = ensureWorkerThreads();\n    return setupWorkerThreadWorker(script, WorkerThreads, options);\n  } else if (options.workerType === 'process' || !options.workerType) { // node.js only\n    return setupProcessWorker(script, resolveForkOptions(options), require('child_process'));\n  } else { // options.workerType === 'auto' or undefined\n    if (environment.platform === 'browser') {\n      ensureWebWorker();\n      return setupBrowserWorker(script, options.workerOpts, Worker);\n    }\n    else { // environment.platform === 'node'\n      var WorkerThreads = tryRequireWorkerThreads();\n      if (WorkerThreads) {\n        return setupWorkerThreadWorker(script, WorkerThreads, options);\n      } else {\n        return setupProcessWorker(script, resolveForkOptions(options), require('child_process'));\n      }\n    }\n  }\n}\n\nfunction setupBrowserWorker(script, workerOpts, Worker) {\n  // validate the options right before creating the worker (not when creating the pool)\n  validateOptions(workerOpts, workerOptsNames, 'workerOpts')\n\n  // create the web worker\n  var worker = new Worker(script, workerOpts);\n\n  worker.isBrowserWorker = true;\n  // add node.js API to the web worker\n  worker.on = function (event, callback) {\n    this.addEventListener(event, function (message) {\n      callback(message.data);\n    });\n  };\n  worker.send = function (message, transfer) {\n    this.postMessage(message, transfer);\n  };\n  return worker;\n}\n\nfunction setupWorkerThreadWorker(script, WorkerThreads, options) {\n  // validate the options right before creating the worker thread (not when creating the pool)\n  validateOptions(options?.workerThreadOpts, workerThreadOptsNames, 'workerThreadOpts')\n\n  var worker = new WorkerThreads.Worker(script, {\n    stdout: options?.emitStdStreams ?? false, // pipe worker.STDOUT to process.STDOUT if not requested\n    stderr: options?.emitStdStreams ?? false,  // pipe worker.STDERR to process.STDERR if not requested\n    ...options?.workerThreadOpts\n  });\n  worker.isWorkerThread = true;\n  worker.send = function(message, transfer) {\n    this.postMessage(message, transfer);\n  };\n\n  worker.kill = function() {\n    this.terminate();\n    return true;\n  };\n\n  worker.disconnect = function() {\n    this.terminate();\n  };\n\n  if (options?.emitStdStreams) {\n    worker.stdout.on('data', (data) => worker.emit(\"stdout\", data))\n    worker.stderr.on('data', (data) => worker.emit(\"stderr\", data))\n  }\n\n  return worker;\n}\n\nfunction setupProcessWorker(script, options, child_process) {\n  // validate the options right before creating the child process (not when creating the pool)\n  validateOptions(options.forkOpts, forkOptsNames, 'forkOpts')\n\n  // no WorkerThreads, fallback to sub-process based workers\n  var worker = child_process.fork(\n    script,\n    options.forkArgs,\n    options.forkOpts\n  );\n\n  // ignore transfer argument since it is not supported by process\n  var send = worker.send;\n  worker.send = function (message) {\n    return send.call(worker, message);\n  };\n\n  if (options.emitStdStreams) {\n    worker.stdout.on('data', (data) => worker.emit(\"stdout\", data))\n    worker.stderr.on('data', (data) => worker.emit(\"stderr\", data))\n  }\n\n  worker.isChildProcess = true;\n  return worker;\n}\n\n// add debug flags to child processes if the node inspector is active\nfunction resolveForkOptions(opts) {\n  opts = opts || {};\n\n  var processExecArgv = process.execArgv.join(' ');\n  var inspectorActive = processExecArgv.indexOf('--inspect') !== -1;\n  var debugBrk = processExecArgv.indexOf('--debug-brk') !== -1;\n\n  var execArgv = [];\n  if (inspectorActive) {\n    execArgv.push('--inspect=' + opts.debugPort);\n\n    if (debugBrk) {\n      execArgv.push('--debug-brk');\n    }\n  }\n\n  process.execArgv.forEach(function(arg) {\n    if (arg.indexOf('--max-old-space-size') > -1) {\n      execArgv.push(arg)\n    }\n  })\n\n  return Object.assign({}, opts, {\n    forkArgs: opts.forkArgs,\n    forkOpts: Object.assign({}, opts.forkOpts, {\n      execArgv: (opts.forkOpts && opts.forkOpts.execArgv || [])\n      .concat(execArgv),\n      stdio: opts.emitStdStreams ? \"pipe\": undefined\n    })\n  });\n}\n\n/**\n * Converts a serialized error to Error\n * @param {Object} obj Error that has been serialized and parsed to object\n * @return {Error} The equivalent Error.\n */\nfunction objectToError (obj) {\n  var temp = new Error('')\n  var props = Object.keys(obj)\n\n  for (var i = 0; i < props.length; i++) {\n    temp[props[i]] = obj[props[i]]\n  }\n\n  return temp\n}\n\nfunction handleEmittedStdPayload(handler, payload) {\n  // TODO: refactor if parallel task execution gets added\n  if (Object.keys(handler.processing).length !== 1) {\n    return;\n  }\n  var task = Object.values(handler.processing)[0]\n  if (task.options && typeof task.options.on === 'function') {\n    task.options.on(payload);\n  }\n}\n\n/**\n * A WorkerHandler controls a single worker. This worker can be a child process\n * on node.js or a WebWorker in a browser environment.\n * @param {String} [script] If no script is provided, a default worker with a\n *                          function run will be created.\n * @param {import('./types.js').WorkerPoolOptions} [_options] See docs\n * @constructor\n */\nfunction WorkerHandler(script, _options) {\n  var me = this;\n  var options = _options || {};\n\n  this.script = script || getDefaultWorker();\n  this.worker = setupWorker(this.script, options);\n  this.debugPort = options.debugPort;\n  this.forkOpts = options.forkOpts;\n  this.forkArgs = options.forkArgs;\n  this.workerOpts = options.workerOpts;\n  this.workerThreadOpts = options.workerThreadOpts\n  this.workerTerminateTimeout = options.workerTerminateTimeout;\n\n  // The ready message is only sent if the worker.add method is called (And the default script is not used)\n  if (!script) {\n    this.worker.ready = true;\n  }\n\n  // queue for requests that are received before the worker is ready\n  this.requestQueue = [];\n\n  this.worker.on(\"stdout\", function (data) {\n    handleEmittedStdPayload(me, {\"stdout\": data.toString()})\n  })\n  this.worker.on(\"stderr\", function (data) {\n    handleEmittedStdPayload(me, {\"stderr\": data.toString()})\n  })\n\n  this.worker.on('message', function (response) {\n    if (me.terminated) {\n      return;\n    }\n    if (typeof response === 'string' && response === 'ready') {\n      me.worker.ready = true;\n      dispatchQueuedRequests();\n    } else {\n      // find the task from the processing queue, and run the tasks callback\n      var id = response.id;\n      var task = me.processing[id];\n      if (task !== undefined) {\n       \n        if (response.isEvent) {\n          if (task.options && typeof task.options.on === 'function') {\n            this.lastTask=task;\n            task.options.on(response.payload);\n          }\n        } else {\n          // remove the task from the queue\n          delete me.processing[id];\n\n          // test if we need to terminate\n          if (me.terminating === true) {\n            // complete worker termination if all tasks are finished\n            me.terminate();\n          }\n\n          // resolve the task's promise\n          if (response.error) {\n            task.resolver.reject(objectToError(response.error));\n          }\n          else {\n            task.resolver.resolve(response.result);\n          }\n        }\n      }else if(this.lastTask){\n        if (response.isEvent) {\n          if (this.lastTask.options && typeof this.lastTask.options.on === 'function') {\n            this.lastTask.options.on(response.payload);\n          }\n        }\n      }else if(this.globalOn){\n        if (response.isEvent) {\n          if (this.globalOn) {\n            this.globalOn(response.payload);\n          }\n        }\n      }\n    }\n  });\n\n  // reject all running tasks on worker error\n  function onError(error) {\n    me.terminated = true;\n\n    for (var id in me.processing) {\n      if (me.processing[id] !== undefined) {\n        me.processing[id].resolver.reject(error);\n      }\n    }\n    me.processing = Object.create(null);\n  }\n\n  // send all queued requests to worker\n  function dispatchQueuedRequests()\n  {\n    for(const request of me.requestQueue.splice(0)) {\n      me.worker.send(request.message, request.transfer);\n    }\n  }\n\n  var worker = this.worker;\n  // listen for worker messages error and exit\n  this.worker.on('error', onError);\n  this.worker.on('exit', function (exitCode, signalCode) {\n    var message = 'Workerpool Worker terminated Unexpectedly\\n';\n\n    message += '    exitCode: `' + exitCode + '`\\n';\n    message += '    signalCode: `' + signalCode + '`\\n';\n\n    message += '    workerpool.script: `' +  me.script + '`\\n';\n    message += '    spawnArgs: `' +  worker.spawnargs + '`\\n';\n    message += '    spawnfile: `' + worker.spawnfile + '`\\n'\n\n    message += '    stdout: `' + worker.stdout + '`\\n'\n    message += '    stderr: `' + worker.stderr + '`\\n'\n\n    onError(new Error(message));\n  });\n\n  this.processing = Object.create(null); // queue with tasks currently in progress\n\n  this.terminating = false;\n  this.terminated = false;\n  this.cleaning = false;\n  this.terminationHandler = null;\n  this.lastId = 0;\n}\n\n/**\n * Get a list with methods available on the worker.\n * @return {Promise.<String[], Error>} methods\n */\nWorkerHandler.prototype.methods = function () {\n  return this.exec('methods');\n};\n\n/**\n * Execute a method with given parameters on the worker\n * @param {String} method\n * @param {Array} [params]\n * @param {{resolve: Function, reject: Function}} [resolver]\n * @param {import('./types.js').ExecOptions}  [options]\n * @return {Promise.<*, Error>} result\n */\nWorkerHandler.prototype.exec = function(method, params, resolver, options) {\n  if (!resolver) {\n    resolver = Promise.defer();\n  }\n\n  // generate a unique id for the task\n  var id = ++this.lastId;\n\n  // register a new task as being in progress\n  this.processing[id] = {\n    id: id,\n    resolver: resolver,\n    options: options\n  };\n\n  // build a JSON-RPC request\n  var request = {\n    message: {\n      id: id,\n      method: method,\n      params: params\n    },\n    transfer: options && options.transfer\n  };\n\n  if (this.terminated) {\n    resolver.reject(new Error('Worker is terminated'));\n  } else if (this.worker.ready) {\n    // send the request to the worker\n    this.worker.send(request.message, request.transfer);\n  } else {\n    this.requestQueue.push(request);\n  }\n\n  // on cancellation, force the worker to terminate\n  var me = this;\n  return resolver.promise.catch(function (error) {\n    if (error instanceof Promise.CancellationError || error instanceof Promise.TimeoutError) {\n      // remove this task from the queue. It is already rejected (hence this\n      // catch event), and else it will be rejected again when terminating\n      delete me.processing[id];\n\n      // terminate worker\n      return me.terminateAndNotify(true)\n        .then(function() {\n          throw error;\n        }, function(err) {\n          throw err;\n        });\n    } else {\n      throw error;\n    }\n  })\n};\n\n/**\n * Test whether the worker is processing any tasks or cleaning up before termination.\n * @return {boolean} Returns true if the worker is busy\n */\nWorkerHandler.prototype.busy = function () {\n  return this.cleaning || Object.keys(this.processing).length > 0;\n};\n\n/**\n * Terminate the worker.\n * @param {boolean} [force=false]   If false (default), the worker is terminated\n *                                  after finishing all tasks currently in\n *                                  progress. If true, the worker will be\n *                                  terminated immediately.\n * @param {function} [callback=null] If provided, will be called when process terminates.\n */\nWorkerHandler.prototype.terminate = function (force, callback) {\n  var me = this;\n  if (force) {\n    // cancel all tasks in progress\n    for (var id in this.processing) {\n      if (this.processing[id] !== undefined) {\n        this.processing[id].resolver.reject(new Error('Worker terminated'));\n      }\n    }\n    this.processing = Object.create(null);\n  }\n\n  if (typeof callback === 'function') {\n    this.terminationHandler = callback;\n  }\n  if (!this.busy()) {\n    // all tasks are finished. kill the worker\n    var cleanup = function(err) {\n      me.terminated = true;\n      me.cleaning = false;\n      if (me.worker != null && me.worker.removeAllListeners) {\n        // removeAllListeners is only available for child_process\n        me.worker.removeAllListeners('message');\n      }\n      me.worker = null;\n      me.terminating = false;\n      if (me.terminationHandler) {\n        me.terminationHandler(err, me);\n      } else if (err) {\n        throw err;\n      }\n    }\n\n    if (this.worker) {\n      if (typeof this.worker.kill === 'function') {\n        if (this.worker.killed) {\n          cleanup(new Error('worker already killed!'));\n          return;\n        }\n\n        // child process and worker threads\n        var cleanExitTimeout = setTimeout(function() {\n          if (me.worker) {\n            me.worker.kill();\n          }\n        }, this.workerTerminateTimeout);\n\n        this.worker.once('exit', function() {\n          clearTimeout(cleanExitTimeout);\n          if (me.worker) {\n            me.worker.killed = true;\n          }\n          cleanup();\n        });\n\n        if (this.worker.ready) {\n          this.worker.send(TERMINATE_METHOD_ID);\n        } else {\n          this.requestQueue.push({ message: TERMINATE_METHOD_ID });\n        }\n\n        // mark that the worker is cleaning up resources\n        // to prevent new tasks from being executed\n        this.cleaning = true;\n        return;\n      }\n      else if (typeof this.worker.terminate === 'function') {\n        this.worker.terminate(); // web worker\n        this.worker.killed = true;\n      }\n      else {\n        throw new Error('Failed to terminate worker');\n      }\n    }\n    cleanup();\n  }\n  else {\n    // we can't terminate immediately, there are still tasks being executed\n    this.terminating = true;\n  }\n};\n\n/**\n * Terminate the worker, returning a Promise that resolves when the termination has been done.\n * @param {boolean} [force=false]   If false (default), the worker is terminated\n *                                  after finishing all tasks currently in\n *                                  progress. If true, the worker will be\n *                                  terminated immediately.\n * @param {number} [timeout]        If provided and non-zero, worker termination promise will be rejected\n *                                  after timeout if worker process has not been terminated.\n * @return {Promise.<WorkerHandler, Error>}\n */\nWorkerHandler.prototype.terminateAndNotify = function (force, timeout) {\n  var resolver = Promise.defer();\n  if (timeout) {\n    resolver.promise.timeout(timeout);\n  }\n  this.terminate(force, function(err, worker) {\n    if (err) {\n      resolver.reject(err);\n    } else {\n      resolver.resolve(worker);\n    }\n  });\n  return resolver.promise;\n};\n\nmodule.exports = WorkerHandler;\nmodule.exports._tryRequireWorkerThreads = tryRequireWorkerThreads;\nmodule.exports._setupProcessWorker = setupProcessWorker;\nmodule.exports._setupBrowserWorker = setupBrowserWorker;\nmodule.exports._setupWorkerThreadWorker = setupWorkerThreadWorker;\nmodule.exports.ensureWorkerThreads = ensureWorkerThreads;\n","'use strict';\n\nvar MAX_PORTS = 65535;\nmodule.exports = DebugPortAllocator;\nfunction DebugPortAllocator() {\n  this.ports = Object.create(null);\n  this.length = 0;\n}\n\nDebugPortAllocator.prototype.nextAvailableStartingAt = function(starting) {\n  while (this.ports[starting] === true) {\n    starting++;\n  }\n\n  if (starting >= MAX_PORTS) {\n    throw new Error('WorkerPool debug port limit reached: ' + starting + '>= ' + MAX_PORTS );\n  }\n\n  this.ports[starting] = true;\n  this.length++;\n  return starting;\n};\n\nDebugPortAllocator.prototype.releasePort = function(port) {\n  delete this.ports[port];\n  this.length--;\n};\n\n","\n// source: https://github.com/flexdinesh/browser-or-node\n// source: https://github.com/mozilla/pdf.js/blob/7ea0e40e588864cd938d1836ec61f1928d3877d3/src/shared/util.js#L24\nvar isNode = function (nodeProcess) {\n  return (\n    typeof nodeProcess !== 'undefined' &&\n    nodeProcess.versions != null &&\n    nodeProcess.versions.node != null &&\n    nodeProcess + '' === '[object process]'\n  );\n}\nmodule.exports.isNode = isNode\n\n// determines the JavaScript platform: browser or node\nmodule.exports.platform = typeof process !== 'undefined' && isNode(process)\n  ? 'node'\n  : 'browser';\n\n// determines whether the code is running in main thread or not\n// note that in node.js we have to check both worker_thread and child_process\nvar worker_threads = module.exports.platform === 'node' && require('worker_threads');\nmodule.exports.isMainThread = module.exports.platform === 'node'\n  ? ((!worker_threads || worker_threads.isMainThread) && !process.connected)\n  : typeof Window !== 'undefined';\n\n// determines the number of cpus available\nmodule.exports.cpus = module.exports.platform === 'browser'\n  ? self.navigator.hardwareConcurrency\n  : require('os').cpus().length;\n\n","/**\n * embeddedWorker.js contains an embedded version of worker.js.\n * This file is automatically generated,\n * changes made in this file will be overwritten.\n */\nmodule.exports = \"!function(e,n){\\\"object\\\"==typeof exports&&\\\"undefined\\\"!=typeof module?module.exports=n():\\\"function\\\"==typeof define&&define.amd?define(n):(e=\\\"undefined\\\"!=typeof globalThis?globalThis:e||self).worker=n()}(this,(function(){\\\"use strict\\\";function e(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,\\\"default\\\")?e.default:e}var n={};var t=function(e,n){this.message=e,this.transfer=n};return function(e){var n=t,r={exit:function(){}};if(\\\"undefined\\\"!=typeof self&&\\\"function\\\"==typeof postMessage&&\\\"function\\\"==typeof addEventListener)r.on=function(e,n){addEventListener(e,(function(e){n(e.data)}))},r.send=function(e){postMessage(e)};else{if(\\\"undefined\\\"==typeof process)throw new Error(\\\"Script must be executed as a worker\\\");var o;try{o=require(\\\"worker_threads\\\")}catch(e){if(\\\"object\\\"!=typeof e||null===e||\\\"MODULE_NOT_FOUND\\\"!==e.code)throw e}if(o&&null!==o.parentPort){var i=o.parentPort;r.send=i.postMessage.bind(i),r.on=i.on.bind(i),r.exit=process.exit.bind(process)}else r.on=process.on.bind(process),r.send=function(e){process.send(e)},r.on(\\\"disconnect\\\",(function(){process.exit(1)})),r.exit=process.exit.bind(process)}function s(e){return Object.getOwnPropertyNames(e).reduce((function(n,t){return Object.defineProperty(n,t,{value:e[t],enumerable:!0})}),{})}function d(e){return e&&\\\"function\\\"==typeof e.then&&\\\"function\\\"==typeof e.catch}r.methods={},r.methods.run=function(e,n){var t=new Function(\\\"return (\\\"+e+\\\").apply(null, arguments);\\\");return t.apply(t,n)},r.methods.methods=function(){return Object.keys(r.methods)},r.terminationHandler=void 0,r.cleanupAndExit=function(e){var n=function(){r.exit(e)};if(!r.terminationHandler)return n();var t=r.terminationHandler(e);d(t)?t.then(n,n):n()};var u=null;r.on(\\\"message\\\",(function(e){if(\\\"__workerpool-terminate__\\\"===e)return r.cleanupAndExit(0);try{var t=r.methods[e.method];if(!t)throw new Error('Unknown method \\\"'+e.method+'\\\"');u=e.id;var o=t.apply(t,e.params);d(o)?o.then((function(t){t instanceof n?r.send({id:e.id,result:t.message,error:null},t.transfer):r.send({id:e.id,result:t,error:null}),u=null})).catch((function(n){r.send({id:e.id,result:null,error:s(n)}),u=null})):(o instanceof n?r.send({id:e.id,result:o.message,error:null},o.transfer):r.send({id:e.id,result:o,error:null}),u=null)}catch(n){r.send({id:e.id,result:null,error:s(n)})}})),r.register=function(e,n){if(e)for(var t in e)e.hasOwnProperty(t)&&(r.methods[t]=e[t]);n&&(r.terminationHandler=n.onTerminate),r.send(\\\"ready\\\")},r.emit=function(e){if(u){if(e instanceof n)return void r.send({id:u,isEvent:!0,payload:e.message},e.transfer);r.send({id:u,isEvent:!0,payload:e})}},e.add=r.register,e.emit=r.emit}(n),e(n)}));\\n//# sourceMappingURL=worker.min.js.map\\n\";\n","const {platform, isMainThread, cpus} = require('./environment');\n\n/** @typedef {import(\"./Pool\")} Pool */\n/** @typedef {import(\"./types.js\").WorkerPoolOptions} WorkerPoolOptions */\n/** @typedef {import(\"./types.js\").WorkerRegisterOptions} WorkerRegisterOptions */\n\n/**\n * @template { { [k: string]: (...args: any[]) => any } } T\n * @typedef {import('./types.js').Proxy<T>} Proxy<T>\n */\n\n/**\n * @overload\n * Create a new worker pool\n * @param {WorkerPoolOptions} [script]\n * @returns {Pool} pool\n */\n/**\n * @overload\n * Create a new worker pool\n * @param {string} [script]\n * @param {WorkerPoolOptions} [options]\n * @returns {Pool} pool\n */\nfunction pool(script, options) {\n  var Pool = require('./Pool');\n\n  return new Pool(script, options);\n};\nexports.pool = pool;\n\n/**\n * Create a worker and optionally register a set of methods to the worker.\n * @param {{ [k: string]: (...args: any[]) => any }} [methods]\n * @param {WorkerRegisterOptions} [options]\n */\nfunction worker(methods, options) {\n  var worker = require('./worker');\n  worker.add(methods, options);\n};\nexports.worker = worker;\n\n/**\n * Sends an event to the parent worker pool.\n * @param {any} payload \n */\nfunction workerEmit(payload) {\n  var worker = require('./worker');\n  worker.emit(payload);\n};\nexports.workerEmit = workerEmit;\n\nconst {Promise} = require('./Promise');\nexports.Promise = Promise;\n\nexports.Transfer = require('./transfer');\n\nexports.platform = platform;\nexports.isMainThread = isMainThread;\nexports.cpus = cpus;\n","/**\n * The helper class for transferring data from the worker to the main thread.\n *\n * @param {Object} message The object to deliver to the main thread.\n * @param {Object[]} transfer An array of transferable Objects to transfer ownership of.\n */\nfunction Transfer(message, transfer) {\n  this.message = message;\n  this.transfer = transfer;\n}\n\nmodule.exports = Transfer;\n","/**\n * Validate that the object only contains known option names\n * - Throws an error when unknown options are detected\n * - Throws an error when some of the allowed options are attached\n * @param {Object | undefined} options\n * @param {string[]} allowedOptionNames\n * @param {string} objectName\n * @retrun {Object} Returns the original options\n */\nexports.validateOptions = function validateOptions(options, allowedOptionNames, objectName) {\n  if (!options) {\n    return\n  }\n\n  var optionNames = options ?  Object.keys(options) : []\n\n  // check for unknown properties\n  var unknownOptionName = optionNames.find(optionName => !allowedOptionNames.includes(optionName))\n  if (unknownOptionName) {\n    throw new Error('Object \"' + objectName + '\" contains an unknown option \"' + unknownOptionName + '\"')\n  }\n\n  // check for inherited properties which are not present on the object itself\n  var illegalOptionName = allowedOptionNames.find(allowedOptionName => {\n    return Object.prototype[allowedOptionName] && !optionNames.includes(allowedOptionName)\n  })\n  if (illegalOptionName) {\n    throw new Error('Object \"' + objectName + '\" contains an inherited option \"' + illegalOptionName + '\" which is ' +\n      'not defined in the object itself but in its prototype. Only plain objects are allowed. ' +\n      'Please remove the option from the prototype or override it with a value \"undefined\".')\n  }\n\n  return options\n}\n\n// source: https://developer.mozilla.org/en-US/docs/Web/API/Worker/Worker\nexports.workerOptsNames = [\n  'credentials', 'name', 'type' ]\n\n// source: https://nodejs.org/api/child_process.html#child_processforkmodulepath-args-options\nexports.forkOptsNames = [\n  'cwd', 'detached', 'env', 'execPath', 'execArgv', 'gid', 'serialization',\n  'signal', 'killSignal', 'silent', 'stdio', 'uid', 'windowsVerbatimArguments',\n  'timeout'\n]\n\n// source: https://nodejs.org/api/worker_threads.html#new-workerfilename-options\nexports.workerThreadOptsNames = [\n  'argv', 'env', 'eval', 'execArgv', 'stdin', 'stdout', 'stderr', 'workerData',\n  'trackUnmanagedFds', 'transferList', 'resourceLimits', 'name'\n]\n","/**\n * worker must be started as a child process or a web worker.\n * It listens for RPC messages from the parent process.\n */\nvar Transfer = require('./transfer');\n\n/**\n * Special message sent by parent which causes the worker to terminate itself.\n * Not a \"message object\"; this string is the entire message.\n */\nvar TERMINATE_METHOD_ID = '__workerpool-terminate__';\n\n// var nodeOSPlatform = require('./environment').nodeOSPlatform;\n\n// create a worker API for sending and receiving messages which works both on\n// node.js and in the browser\nvar worker = {\n  exit: function() {}\n};\nif (typeof self !== 'undefined' && typeof postMessage === 'function' && typeof addEventListener === 'function') {\n  // worker in the browser\n  worker.on = function (event, callback) {\n    addEventListener(event, function (message) {\n      callback(message.data);\n    })\n  };\n  worker.send = function (message) {\n    postMessage(message);\n  };\n}\nelse if (typeof process !== 'undefined') {\n  // node.js\n\n  var WorkerThreads;\n  try {\n    WorkerThreads = require('worker_threads');\n  } catch(error) {\n    if (typeof error === 'object' && error !== null && error.code === 'MODULE_NOT_FOUND') {\n      // no worker_threads, fallback to sub-process based workers\n    } else {\n      throw error;\n    }\n  }\n\n  if (WorkerThreads &&\n    /* if there is a parentPort, we are in a WorkerThread */\n    WorkerThreads.parentPort !== null) {\n    var parentPort  = WorkerThreads.parentPort;\n    worker.send = parentPort.postMessage.bind(parentPort);\n    worker.on = parentPort.on.bind(parentPort);\n    worker.exit = process.exit.bind(process);\n  } else {\n    worker.on = process.on.bind(process);\n    // ignore transfer argument since it is not supported by process\n    worker.send = function (message) {\n      process.send(message);\n    };\n    // register disconnect handler only for subprocess worker to exit when parent is killed unexpectedly\n    worker.on('disconnect', function () {\n      process.exit(1);\n    });\n    worker.exit = process.exit.bind(process);\n  }\n}\nelse {\n  throw new Error('Script must be executed as a worker');\n}\n\nfunction convertError(error) {\n  return Object.getOwnPropertyNames(error).reduce(function(product, name) {\n    return Object.defineProperty(product, name, {\n\tvalue: error[name],\n\tenumerable: true\n    });\n  }, {});\n}\n\n/**\n * Test whether a value is a Promise via duck typing.\n * @param {*} value\n * @returns {boolean} Returns true when given value is an object\n *                    having functions `then` and `catch`.\n */\nfunction isPromise(value) {\n  return value && (typeof value.then === 'function') && (typeof value.catch === 'function');\n}\n\n// functions available externally\nworker.methods = {};\n\n/**\n * Execute a function with provided arguments\n * @param {String} fn     Stringified function\n * @param {Array} [args]  Function arguments\n * @returns {*}\n */\nworker.methods.run = function run(fn, args) {\n  var f = new Function('return (' + fn + ').apply(null, arguments);');\n  return f.apply(f, args);\n};\n\n/**\n * Get a list with methods available on this worker\n * @return {String[]} methods\n */\nworker.methods.methods = function methods() {\n  return Object.keys(worker.methods);\n};\n\n/**\n * Custom handler for when the worker is terminated.\n */\nworker.terminationHandler = undefined;\n\n/**\n * Cleanup and exit the worker.\n * @param {Number} code \n * @returns \n */\nworker.cleanupAndExit = function(code) {\n  var _exit = function() {\n    worker.exit(code);\n  }\n\n  if(!worker.terminationHandler) {\n    return _exit();\n  }\n\n  var result = worker.terminationHandler(code);\n  if (isPromise(result)) {\n    result.then(_exit, _exit);\n  } else {\n    _exit();\n  }\n}\n\nvar currentRequestId = null;\n\nworker.on('message', function (request) {\n  if (request === TERMINATE_METHOD_ID) {\n    return worker.cleanupAndExit(0);\n  }\n  try {\n    var method = worker.methods[request.method];\n\n    if (method) {\n      currentRequestId = request.id;\n      \n      // execute the function\n      var result = method.apply(method, request.params);\n\n      if (isPromise(result)) {\n        // promise returned, resolve this and then return\n        result\n            .then(function (result) {\n              if (result instanceof Transfer) {\n                worker.send({\n                  id: request.id,\n                  result: result.message,\n                  error: null\n                }, result.transfer);\n              } else {\n                worker.send({\n                  id: request.id,\n                  result: result,\n                  error: null\n                });\n              }\n              currentRequestId = null;\n            })\n            .catch(function (err) {\n              worker.send({\n                id: request.id,\n                result: null,\n                error: convertError(err)\n              });\n              currentRequestId = null;\n            });\n      }\n      else {\n        // immediate result\n        if (result instanceof Transfer) {\n          worker.send({\n            id: request.id,\n            result: result.message,\n            error: null\n          }, result.transfer);\n        } else {\n          worker.send({\n            id: request.id,\n            result: result,\n            error: null\n          });\n        }\n\n        currentRequestId = null;\n      }\n    }\n    else {\n      throw new Error('Unknown method \"' + request.method + '\"');\n    }\n  }\n  catch (err) {\n    worker.send({\n      id: request.id,\n      result: null,\n      error: convertError(err)\n    });\n  }\n});\n\n/**\n * Register methods to the worker\n * @param {Object} [methods]\n * @param {import('./types.js').WorkerRegisterOptions} [options]\n */\nworker.register = function (methods, options) {\n\n  if (methods) {\n    for (var name in methods) {\n      if (methods.hasOwnProperty(name)) {\n        worker.methods[name] = methods[name];\n      }\n    }\n  }\n\n  if (options) {\n    worker.terminationHandler = options.onTerminate;\n  }\n\n  worker.send('ready');\n};\n\nworker.emit = function (payload) {\n  {\n    if (payload instanceof Transfer) {\n      worker.send({\n        id: currentRequestId,\n        isEvent: true,\n        payload: payload.message\n      }, payload.transfer);\n      return;\n    }\n\n    worker.send({\n      id: currentRequestId,\n      isEvent: true,\n      payload\n    });\n  }\n};\n\nif (typeof exports !== 'undefined') {\n  exports.add = worker.register;\n  exports.emit = worker.emit;\n}\n","module.exports = require(\"child_process\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"worker_threads\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"\";","export const anyMap = new WeakMap();\nexport const eventsMap = new WeakMap();\nexport const producersMap = new WeakMap();\n","import {anyMap, producersMap, eventsMap} from './maps.js';\n\nconst anyProducer = Symbol('anyProducer');\nconst resolvedPromise = Promise.resolve();\n\n// Define symbols for \"meta\" events.\nconst listenerAdded = Symbol('listenerAdded');\nconst listenerRemoved = Symbol('listenerRemoved');\n\nlet canEmitMetaEvents = false;\nlet isGlobalDebugEnabled = false;\n\nconst isEventKeyType = key => typeof key === 'string' || typeof key === 'symbol' || typeof key === 'number';\n\nfunction assertEventName(eventName) {\n\tif (!isEventKeyType(eventName)) {\n\t\tthrow new TypeError('`eventName` must be a string, symbol, or number');\n\t}\n}\n\nfunction assertListener(listener) {\n\tif (typeof listener !== 'function') {\n\t\tthrow new TypeError('listener must be a function');\n\t}\n}\n\nfunction getListeners(instance, eventName) {\n\tconst events = eventsMap.get(instance);\n\tif (!events.has(eventName)) {\n\t\treturn;\n\t}\n\n\treturn events.get(eventName);\n}\n\nfunction getEventProducers(instance, eventName) {\n\tconst key = isEventKeyType(eventName) ? eventName : anyProducer;\n\tconst producers = producersMap.get(instance);\n\tif (!producers.has(key)) {\n\t\treturn;\n\t}\n\n\treturn producers.get(key);\n}\n\nfunction enqueueProducers(instance, eventName, eventData) {\n\tconst producers = producersMap.get(instance);\n\tif (producers.has(eventName)) {\n\t\tfor (const producer of producers.get(eventName)) {\n\t\t\tproducer.enqueue(eventData);\n\t\t}\n\t}\n\n\tif (producers.has(anyProducer)) {\n\t\tconst item = Promise.all([eventName, eventData]);\n\t\tfor (const producer of producers.get(anyProducer)) {\n\t\t\tproducer.enqueue(item);\n\t\t}\n\t}\n}\n\nfunction iterator(instance, eventNames) {\n\teventNames = Array.isArray(eventNames) ? eventNames : [eventNames];\n\n\tlet isFinished = false;\n\tlet flush = () => {};\n\tlet queue = [];\n\n\tconst producer = {\n\t\tenqueue(item) {\n\t\t\tqueue.push(item);\n\t\t\tflush();\n\t\t},\n\t\tfinish() {\n\t\t\tisFinished = true;\n\t\t\tflush();\n\t\t},\n\t};\n\n\tfor (const eventName of eventNames) {\n\t\tlet set = getEventProducers(instance, eventName);\n\t\tif (!set) {\n\t\t\tset = new Set();\n\t\t\tconst producers = producersMap.get(instance);\n\t\t\tproducers.set(eventName, set);\n\t\t}\n\n\t\tset.add(producer);\n\t}\n\n\treturn {\n\t\tasync next() {\n\t\t\tif (!queue) {\n\t\t\t\treturn {done: true};\n\t\t\t}\n\n\t\t\tif (queue.length === 0) {\n\t\t\t\tif (isFinished) {\n\t\t\t\t\tqueue = undefined;\n\t\t\t\t\treturn this.next();\n\t\t\t\t}\n\n\t\t\t\tawait new Promise(resolve => {\n\t\t\t\t\tflush = resolve;\n\t\t\t\t});\n\n\t\t\t\treturn this.next();\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdone: false,\n\t\t\t\tvalue: await queue.shift(),\n\t\t\t};\n\t\t},\n\n\t\tasync return(value) {\n\t\t\tqueue = undefined;\n\n\t\t\tfor (const eventName of eventNames) {\n\t\t\t\tconst set = getEventProducers(instance, eventName);\n\t\t\t\tif (set) {\n\t\t\t\t\tset.delete(producer);\n\t\t\t\t\tif (set.size === 0) {\n\t\t\t\t\t\tconst producers = producersMap.get(instance);\n\t\t\t\t\t\tproducers.delete(eventName);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tflush();\n\n\t\t\treturn arguments.length > 0\n\t\t\t\t? {done: true, value: await value}\n\t\t\t\t: {done: true};\n\t\t},\n\n\t\t[Symbol.asyncIterator]() {\n\t\t\treturn this;\n\t\t},\n\t};\n}\n\nfunction defaultMethodNamesOrAssert(methodNames) {\n\tif (methodNames === undefined) {\n\t\treturn allEmitteryMethods;\n\t}\n\n\tif (!Array.isArray(methodNames)) {\n\t\tthrow new TypeError('`methodNames` must be an array of strings');\n\t}\n\n\tfor (const methodName of methodNames) {\n\t\tif (!allEmitteryMethods.includes(methodName)) {\n\t\t\tif (typeof methodName !== 'string') {\n\t\t\t\tthrow new TypeError('`methodNames` element must be a string');\n\t\t\t}\n\n\t\t\tthrow new Error(`${methodName} is not Emittery method`);\n\t\t}\n\t}\n\n\treturn methodNames;\n}\n\nconst isMetaEvent = eventName => eventName === listenerAdded || eventName === listenerRemoved;\n\nfunction emitMetaEvent(emitter, eventName, eventData) {\n\tif (!isMetaEvent(eventName)) {\n\t\treturn;\n\t}\n\n\ttry {\n\t\tcanEmitMetaEvents = true;\n\t\temitter.emit(eventName, eventData);\n\t} finally {\n\t\tcanEmitMetaEvents = false;\n\t}\n}\n\nexport default class Emittery {\n\tstatic mixin(emitteryPropertyName, methodNames) {\n\t\tmethodNames = defaultMethodNamesOrAssert(methodNames);\n\t\treturn target => {\n\t\t\tif (typeof target !== 'function') {\n\t\t\t\tthrow new TypeError('`target` must be function');\n\t\t\t}\n\n\t\t\tfor (const methodName of methodNames) {\n\t\t\t\tif (target.prototype[methodName] !== undefined) {\n\t\t\t\t\tthrow new Error(`The property \\`${methodName}\\` already exists on \\`target\\``);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction getEmitteryProperty() {\n\t\t\t\tObject.defineProperty(this, emitteryPropertyName, {\n\t\t\t\t\tenumerable: false,\n\t\t\t\t\tvalue: new Emittery(),\n\t\t\t\t});\n\t\t\t\treturn this[emitteryPropertyName];\n\t\t\t}\n\n\t\t\tObject.defineProperty(target.prototype, emitteryPropertyName, {\n\t\t\t\tenumerable: false,\n\t\t\t\tget: getEmitteryProperty,\n\t\t\t});\n\n\t\t\tconst emitteryMethodCaller = methodName => function (...args) {\n\t\t\t\treturn this[emitteryPropertyName][methodName](...args);\n\t\t\t};\n\n\t\t\tfor (const methodName of methodNames) {\n\t\t\t\tObject.defineProperty(target.prototype, methodName, {\n\t\t\t\t\tenumerable: false,\n\t\t\t\t\tvalue: emitteryMethodCaller(methodName),\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn target;\n\t\t};\n\t}\n\n\tstatic get isDebugEnabled() {\n\t\t// In a browser environment, `globalThis.process` can potentially reference a DOM Element with a `#process` ID,\n\t\t// so instead of just type checking `globalThis.process`, we need to make sure that `globalThis.process.env` exists.\n\t\t// eslint-disable-next-line n/prefer-global/process\n\t\tif (typeof globalThis.process?.env !== 'object') {\n\t\t\treturn isGlobalDebugEnabled;\n\t\t}\n\n\t\t// eslint-disable-next-line n/prefer-global/process\n\t\tconst {env} = globalThis.process ?? {env: {}};\n\t\treturn env.DEBUG === 'emittery' || env.DEBUG === '*' || isGlobalDebugEnabled;\n\t}\n\n\tstatic set isDebugEnabled(newValue) {\n\t\tisGlobalDebugEnabled = newValue;\n\t}\n\n\tconstructor(options = {}) {\n\t\tanyMap.set(this, new Set());\n\t\teventsMap.set(this, new Map());\n\t\tproducersMap.set(this, new Map());\n\n\t\tproducersMap.get(this).set(anyProducer, new Set());\n\n\t\tthis.debug = options.debug ?? {};\n\n\t\tif (this.debug.enabled === undefined) {\n\t\t\tthis.debug.enabled = false;\n\t\t}\n\n\t\tif (!this.debug.logger) {\n\t\t\tthis.debug.logger = (type, debugName, eventName, eventData) => {\n\t\t\t\ttry {\n\t\t\t\t\t// TODO: Use https://github.com/sindresorhus/safe-stringify when the package is more mature. Just copy-paste the code.\n\t\t\t\t\teventData = JSON.stringify(eventData);\n\t\t\t\t} catch {\n\t\t\t\t\teventData = `Object with the following keys failed to stringify: ${Object.keys(eventData).join(',')}`;\n\t\t\t\t}\n\n\t\t\t\tif (typeof eventName === 'symbol' || typeof eventName === 'number') {\n\t\t\t\t\teventName = eventName.toString();\n\t\t\t\t}\n\n\t\t\t\tconst currentTime = new Date();\n\t\t\t\tconst logTime = `${currentTime.getHours()}:${currentTime.getMinutes()}:${currentTime.getSeconds()}.${currentTime.getMilliseconds()}`;\n\t\t\t\tconsole.log(`[${logTime}][emittery:${type}][${debugName}] Event Name: ${eventName}\\n\\tdata: ${eventData}`);\n\t\t\t};\n\t\t}\n\t}\n\n\tlogIfDebugEnabled(type, eventName, eventData) {\n\t\tif (Emittery.isDebugEnabled || this.debug.enabled) {\n\t\t\tthis.debug.logger(type, this.debug.name, eventName, eventData);\n\t\t}\n\t}\n\n\ton(eventNames, listener, {signal} = {}) {\n\t\tassertListener(listener);\n\n\t\teventNames = Array.isArray(eventNames) ? eventNames : [eventNames];\n\t\tfor (const eventName of eventNames) {\n\t\t\tassertEventName(eventName);\n\t\t\tlet set = getListeners(this, eventName);\n\t\t\tif (!set) {\n\t\t\t\tset = new Set();\n\t\t\t\tconst events = eventsMap.get(this);\n\t\t\t\tevents.set(eventName, set);\n\t\t\t}\n\n\t\t\tset.add(listener);\n\n\t\t\tthis.logIfDebugEnabled('subscribe', eventName, undefined);\n\n\t\t\tif (!isMetaEvent(eventName)) {\n\t\t\t\temitMetaEvent(this, listenerAdded, {eventName, listener});\n\t\t\t}\n\t\t}\n\n\t\tconst off = () => {\n\t\t\tthis.off(eventNames, listener);\n\t\t\tsignal?.removeEventListener('abort', off);\n\t\t};\n\n\t\tsignal?.addEventListener('abort', off, {once: true});\n\n\t\tif (signal?.aborted) {\n\t\t\toff();\n\t\t}\n\n\t\treturn off;\n\t}\n\n\toff(eventNames, listener) {\n\t\tassertListener(listener);\n\n\t\teventNames = Array.isArray(eventNames) ? eventNames : [eventNames];\n\t\tfor (const eventName of eventNames) {\n\t\t\tassertEventName(eventName);\n\t\t\tconst set = getListeners(this, eventName);\n\t\t\tif (set) {\n\t\t\t\tset.delete(listener);\n\t\t\t\tif (set.size === 0) {\n\t\t\t\t\tconst events = eventsMap.get(this);\n\t\t\t\t\tevents.delete(eventName);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.logIfDebugEnabled('unsubscribe', eventName, undefined);\n\n\t\t\tif (!isMetaEvent(eventName)) {\n\t\t\t\temitMetaEvent(this, listenerRemoved, {eventName, listener});\n\t\t\t}\n\t\t}\n\t}\n\n\tonce(eventNames, predicate) {\n\t\tif (predicate !== undefined && typeof predicate !== 'function') {\n\t\t\tthrow new TypeError('predicate must be a function');\n\t\t}\n\n\t\tlet off_;\n\n\t\tconst promise = new Promise(resolve => {\n\t\t\toff_ = this.on(eventNames, data => {\n\t\t\t\tif (predicate && !predicate(data)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\toff_();\n\t\t\t\tresolve(data);\n\t\t\t});\n\t\t});\n\n\t\tpromise.off = off_;\n\t\treturn promise;\n\t}\n\n\tevents(eventNames) {\n\t\teventNames = Array.isArray(eventNames) ? eventNames : [eventNames];\n\t\tfor (const eventName of eventNames) {\n\t\t\tassertEventName(eventName);\n\t\t}\n\n\t\treturn iterator(this, eventNames);\n\t}\n\n\tasync emit(eventName, eventData) {\n\t\tassertEventName(eventName);\n\n\t\tif (isMetaEvent(eventName) && !canEmitMetaEvents) {\n\t\t\tthrow new TypeError('`eventName` cannot be meta event `listenerAdded` or `listenerRemoved`');\n\t\t}\n\n\t\tthis.logIfDebugEnabled('emit', eventName, eventData);\n\n\t\tenqueueProducers(this, eventName, eventData);\n\n\t\tconst listeners = getListeners(this, eventName) ?? new Set();\n\t\tconst anyListeners = anyMap.get(this);\n\t\tconst staticListeners = [...listeners];\n\t\tconst staticAnyListeners = isMetaEvent(eventName) ? [] : [...anyListeners];\n\n\t\tawait resolvedPromise;\n\t\tawait Promise.all([\n\t\t\t...staticListeners.map(async listener => {\n\t\t\t\tif (listeners.has(listener)) {\n\t\t\t\t\treturn listener(eventData);\n\t\t\t\t}\n\t\t\t}),\n\t\t\t...staticAnyListeners.map(async listener => {\n\t\t\t\tif (anyListeners.has(listener)) {\n\t\t\t\t\treturn listener(eventName, eventData);\n\t\t\t\t}\n\t\t\t}),\n\t\t]);\n\t}\n\n\tasync emitSerial(eventName, eventData) {\n\t\tassertEventName(eventName);\n\n\t\tif (isMetaEvent(eventName) && !canEmitMetaEvents) {\n\t\t\tthrow new TypeError('`eventName` cannot be meta event `listenerAdded` or `listenerRemoved`');\n\t\t}\n\n\t\tthis.logIfDebugEnabled('emitSerial', eventName, eventData);\n\n\t\tconst listeners = getListeners(this, eventName) ?? new Set();\n\t\tconst anyListeners = anyMap.get(this);\n\t\tconst staticListeners = [...listeners];\n\t\tconst staticAnyListeners = [...anyListeners];\n\n\t\tawait resolvedPromise;\n\t\t/* eslint-disable no-await-in-loop */\n\t\tfor (const listener of staticListeners) {\n\t\t\tif (listeners.has(listener)) {\n\t\t\t\tawait listener(eventData);\n\t\t\t}\n\t\t}\n\n\t\tfor (const listener of staticAnyListeners) {\n\t\t\tif (anyListeners.has(listener)) {\n\t\t\t\tawait listener(eventName, eventData);\n\t\t\t}\n\t\t}\n\t\t/* eslint-enable no-await-in-loop */\n\t}\n\n\tonAny(listener, {signal} = {}) {\n\t\tassertListener(listener);\n\n\t\tthis.logIfDebugEnabled('subscribeAny', undefined, undefined);\n\n\t\tanyMap.get(this).add(listener);\n\t\temitMetaEvent(this, listenerAdded, {listener});\n\n\t\tconst offAny = () => {\n\t\t\tthis.offAny(listener);\n\t\t\tsignal?.removeEventListener('abort', offAny);\n\t\t};\n\n\t\tsignal?.addEventListener('abort', offAny, {once: true});\n\n\t\tif (signal?.aborted) {\n\t\t\toffAny();\n\t\t}\n\n\t\treturn offAny;\n\t}\n\n\tanyEvent() {\n\t\treturn iterator(this);\n\t}\n\n\toffAny(listener) {\n\t\tassertListener(listener);\n\n\t\tthis.logIfDebugEnabled('unsubscribeAny', undefined, undefined);\n\n\t\temitMetaEvent(this, listenerRemoved, {listener});\n\t\tanyMap.get(this).delete(listener);\n\t}\n\n\tclearListeners(eventNames) {\n\t\teventNames = Array.isArray(eventNames) ? eventNames : [eventNames];\n\n\t\tfor (const eventName of eventNames) {\n\t\t\tthis.logIfDebugEnabled('clear', eventName, undefined);\n\n\t\t\tif (isEventKeyType(eventName)) {\n\t\t\t\tconst set = getListeners(this, eventName);\n\t\t\t\tif (set) {\n\t\t\t\t\tset.clear();\n\t\t\t\t}\n\n\t\t\t\tconst producers = getEventProducers(this, eventName);\n\t\t\t\tif (producers) {\n\t\t\t\t\tfor (const producer of producers) {\n\t\t\t\t\t\tproducer.finish();\n\t\t\t\t\t}\n\n\t\t\t\t\tproducers.clear();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tanyMap.get(this).clear();\n\n\t\t\t\tfor (const [eventName, listeners] of eventsMap.get(this).entries()) {\n\t\t\t\t\tlisteners.clear();\n\t\t\t\t\teventsMap.get(this).delete(eventName);\n\t\t\t\t}\n\n\t\t\t\tfor (const [eventName, producers] of producersMap.get(this).entries()) {\n\t\t\t\t\tfor (const producer of producers) {\n\t\t\t\t\t\tproducer.finish();\n\t\t\t\t\t}\n\n\t\t\t\t\tproducers.clear();\n\t\t\t\t\tproducersMap.get(this).delete(eventName);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tlistenerCount(eventNames) {\n\t\teventNames = Array.isArray(eventNames) ? eventNames : [eventNames];\n\t\tlet count = 0;\n\n\t\tfor (const eventName of eventNames) {\n\t\t\tif (isEventKeyType(eventName)) {\n\t\t\t\tcount += anyMap.get(this).size\n\t\t\t\t\t+ (getListeners(this, eventName)?.size ?? 0)\n\t\t\t\t\t+ (getEventProducers(this, eventName)?.size ?? 0)\n\t\t\t\t\t+ (getEventProducers(this)?.size ?? 0);\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (eventName !== undefined) {\n\t\t\t\tassertEventName(eventName);\n\t\t\t}\n\n\t\t\tcount += anyMap.get(this).size;\n\n\t\t\tfor (const value of eventsMap.get(this).values()) {\n\t\t\t\tcount += value.size;\n\t\t\t}\n\n\t\t\tfor (const value of producersMap.get(this).values()) {\n\t\t\t\tcount += value.size;\n\t\t\t}\n\t\t}\n\n\t\treturn count;\n\t}\n\n\tbindMethods(target, methodNames) {\n\t\tif (typeof target !== 'object' || target === null) {\n\t\t\tthrow new TypeError('`target` must be an object');\n\t\t}\n\n\t\tmethodNames = defaultMethodNamesOrAssert(methodNames);\n\n\t\tfor (const methodName of methodNames) {\n\t\t\tif (target[methodName] !== undefined) {\n\t\t\t\tthrow new Error(`The property \\`${methodName}\\` already exists on \\`target\\``);\n\t\t\t}\n\n\t\t\tObject.defineProperty(target, methodName, {\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: this[methodName].bind(this),\n\t\t\t});\n\t\t}\n\t}\n}\n\nconst allEmitteryMethods = Object.getOwnPropertyNames(Emittery.prototype).filter(v => v !== 'constructor');\n\nObject.defineProperty(Emittery, 'listenerAdded', {\n\tvalue: listenerAdded,\n\twritable: false,\n\tenumerable: true,\n\tconfigurable: false,\n});\nObject.defineProperty(Emittery, 'listenerRemoved', {\n\tvalue: listenerRemoved,\n\twritable: false,\n\tenumerable: true,\n\tconfigurable: false,\n});\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"crypto\");","import crypto from 'crypto';\nexport default {\n  randomUUID: crypto.randomUUID\n};","import crypto from 'crypto';\nconst rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate\n\nlet poolPtr = rnds8Pool.length;\nexport default function rng() {\n  if (poolPtr > rnds8Pool.length - 16) {\n    crypto.randomFillSync(rnds8Pool);\n    poolPtr = 0;\n  }\n\n  return rnds8Pool.slice(poolPtr, poolPtr += 16);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","// import { Param, param2raw, ServiceItem } from '../views/Uds/service'\r\nimport { v4 } from 'uuid'\r\nimport { CAN_ADDR_FORMAT, CAN_ID_TYPE, CanAddr, CanBaseInfo, CanVendor } from './can'\r\nimport { EthBaseInfo, EthAddr, EntityAddr } from './doip'\r\nimport { LinAddr, LinBaseInfo } from './lin'\r\nimport { SomeipInfo } from './someip'\r\n\r\nexport type DataType = 'NUM' | 'ARRAY' | 'ASCII' | 'UNICODE' | 'FLOAT' | 'DOUBLE' | 'FILE'\r\nexport type HardwareType = 'can' | 'lin' | 'eth' | 'pwm' | 'someip'\r\n//serviceDetail所有的key作为serviceId\r\n\r\n/**\r\n * @category UDS\r\n */\r\nexport interface ServiceItem {\r\n  id: string\r\n  name: string\r\n  serviceId: ServiceId\r\n  subfunc?: string\r\n  suppress?: boolean\r\n  autoSubfunc?: boolean\r\n  desc?: string\r\n  params: Param[]\r\n  respParams: Param[]\r\n  isNegativeResponse?: boolean\r\n  nrc?: number\r\n  generateConfigs?: Record<string, string>\r\n}\r\n// 使用泛型简化定义\r\n\r\nexport interface Param {\r\n  id: string\r\n  name: string\r\n  longName?: string\r\n  desc?: string\r\n  type: DataType\r\n  value: Buffer\r\n  phyValue: any\r\n  bitLen: number\r\n  bitPos?: number\r\n  meta?: {\r\n    type: string\r\n  }\r\n  deletable?: boolean\r\n  editable?: boolean\r\n}\r\n/**\r\n * @category UDS\r\n */\r\nexport type ServiceId =\r\n  | '0x10'\r\n  | '0x11'\r\n  | '0x27'\r\n  | '0x28'\r\n  | '0x29'\r\n  | '0x3E'\r\n  | '0x83'\r\n  | '0x84'\r\n  | '0x85'\r\n  | '0x22'\r\n  | '0x23'\r\n  | '0x24'\r\n  | '0x2A'\r\n  | '0x2C'\r\n  | '0x2E'\r\n  | '0x3D'\r\n  | '0x14'\r\n  | '0x87'\r\n  | '0x19'\r\n  | '0x2F'\r\n  | '0x31'\r\n  | '0x34'\r\n  | '0x35'\r\n  | '0x36'\r\n  | '0x37'\r\n  | '0x38'\r\n  | 'Job'\r\n\r\nexport type ServiceDetailItem = {\r\n  name: string\r\n  hasSubFunction: boolean\r\n  fixedParam?: boolean\r\n  desc?: string\r\n  buildInScript?: string\r\n  defaultParams: {\r\n    param: Param\r\n    enum?: { name: string; value: string }[]\r\n  }[]\r\n  defaultRespParams: {\r\n    param: Param\r\n    enum?: { name: string; value: string }[]\r\n  }[]\r\n}\r\nexport type ServiceDetial = Record<ServiceId, ServiceDetailItem>\r\nexport function splitStr2(str: string) {\r\n  const result: string[] = []\r\n  for (let i = 0; i < str.length; i += 2) {\r\n    result.push(str.substring(i, i + 2))\r\n  }\r\n  return result.join(' ')\r\n}\r\n\r\nexport function checkServiceId(serviceId: ServiceId | undefined, need: ('job' | 'uds')[]) {\r\n  if (!serviceId) return false\r\n\r\n  if (need.includes('job')) {\r\n    if (!serviceId.startsWith('0x')) {\r\n      return true\r\n    }\r\n  }\r\n  if (need.includes('uds')) {\r\n    if (serviceId.startsWith('0x')) {\r\n      return true\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nexport function param2str(param: Param): string {\r\n  return param.phyValue.toString()\r\n}\r\nexport function param2raw(param: Param): Buffer {\r\n  return Buffer.from(param.value)\r\n}\r\nconst maxSIze = 65536\r\nfunction reallocBuffer(buffer: Buffer, len: number) {\r\n  const newBuffer = Buffer.alloc(len)\r\n  buffer.copy(newBuffer, 0, 0, buffer.length)\r\n  return newBuffer\r\n}\r\nexport function getParamBuffer(params: Param[]) {\r\n  let allLen = 0\r\n  let buffer = Buffer.alloc(maxSIze)\r\n  for (const p of params) {\r\n    const t = param2raw(p)\r\n    const len = Math.ceil(p.bitLen / 8)\r\n    if (allLen + len > maxSIze) {\r\n      buffer = reallocBuffer(buffer, (allLen + len) * 2)\r\n    }\r\n    t.copy(buffer, allLen)\r\n    allLen += len\r\n  }\r\n\r\n  return buffer.subarray(0, allLen)\r\n}\r\n\r\nexport function getTxPdu(service: ServiceItem) {\r\n  return Buffer.concat([Buffer.from([Number(service.serviceId)]), getParamBuffer(service.params)])\r\n}\r\n\r\nexport function getRxPdu(service: ServiceItem) {\r\n  const buffer = Buffer.alloc(maxSIze)\r\n\r\n  if (service.isNegativeResponse) {\r\n    buffer[0] = 0x7f\r\n    buffer[1] = Number(service.serviceId)\r\n    buffer[2] = service.nrc || 0x00\r\n    return buffer.subarray(0, 3)\r\n  }\r\n  return Buffer.concat([\r\n    Buffer.from([Number(service.serviceId) + 0x40]),\r\n    getParamBuffer(service.respParams)\r\n  ])\r\n}\r\nexport function applyBuffer(service: ServiceItem, data: Buffer, isReq: boolean) {\r\n  if (!data || data.length === 0) {\r\n    return\r\n  }\r\n  if (data[0] == 0x7f) {\r\n    if (!isReq) {\r\n      //Negative response\r\n      if (data[1] != Number(service.serviceId)) {\r\n        throw new Error(\r\n          `serviceId not match, expect ${service.serviceId} but got 0x${data[1].toString(16)}`\r\n        )\r\n      }\r\n      service.isNegativeResponse = true\r\n      service.nrc = data[2]\r\n    }\r\n    return\r\n  }\r\n  let sid = data[0]\r\n  if (!isReq) {\r\n    sid -= 0x40\r\n  }\r\n\r\n  if (sid != Number(service.serviceId)) {\r\n    throw new Error(\r\n      `serviceId not match, expect ${service.serviceId} but got 0x${sid.toString(16)}`\r\n    )\r\n  }\r\n  const params = isReq ? service.params : service.respParams\r\n  /* remove left param */\r\n  if (params.length > 0) {\r\n    const lastParam = params[params.length - 1]\r\n    if (lastParam.name == '__left') {\r\n      params.pop()\r\n    }\r\n  }\r\n  let len = 1\r\n  for (const param of params) {\r\n    const paramLen = Math.ceil(param.bitLen / 8)\r\n    if (len < data.length) {\r\n      const subData = data.subarray(len, len + paramLen)\r\n      //如果 subData 的长度小于paramLen，就跳过\r\n      if (subData.length < paramLen) {\r\n        return\r\n      }\r\n      paramSetValRaw(param, subData)\r\n    }\r\n    len += paramLen\r\n  }\r\n  //append left to last param\r\n  if (len < data.length) {\r\n    const param: Param = {\r\n      id: v4(),\r\n      name: '__left',\r\n      type: 'ARRAY',\r\n      value: Buffer.alloc(0),\r\n      phyValue: '',\r\n      bitLen: (data.length - len) * 8\r\n    }\r\n    paramSetValRaw(param, data.subarray(len))\r\n    params.push(param)\r\n  }\r\n}\r\nexport function getTxPduStr(service: ServiceItem) {\r\n  const str: string[] = [\r\n    Buffer.from([Number(service.serviceId)])\r\n      .toString('hex')\r\n      .toUpperCase()\r\n  ]\r\n\r\n  for (let i = 0; i < service.params.length; i++) {\r\n    const pa = service.params[i]\r\n    const s = param2raw(pa)\r\n      .toString('hex')\r\n      .toUpperCase()\r\n      .padStart(pa.bitLen / 4, '0')\r\n\r\n    str.push(splitStr2(s))\r\n  }\r\n  return str\r\n}\r\nexport function getRxPduStr(service: ServiceItem) {\r\n  const str: string[] = [\r\n    Buffer.from([Number(service.serviceId) + 0x40])\r\n      .toString('hex')\r\n      .toUpperCase()\r\n  ]\r\n  if (service.suppress) {\r\n    return ['SUPPRESS']\r\n  }\r\n  for (let i = 0; i < service.respParams.length; i++) {\r\n    const pa = service.respParams[i]\r\n    const s = param2raw(pa)\r\n      .toString('hex')\r\n      .toUpperCase()\r\n      .padStart(pa.bitLen / 4, '0')\r\n    str.push(splitStr2(s))\r\n  }\r\n  /* convert to hex */\r\n  return str\r\n}\r\nexport function param2len(param: Param): number {\r\n  return Math.ceil(param.bitLen / 8)\r\n}\r\n\r\nexport function paramSetVal(param: Param, str: string | number) {\r\n  switch (param.type) {\r\n    case 'NUM':\r\n      {\r\n        const v = Number(str)\r\n        if (Number.isNaN(v)) {\r\n          throw new Error('value should be a number')\r\n        }\r\n        const byte = Math.floor(param.bitLen / 8)\r\n        const pow = Math.pow(2, byte * 8)\r\n        if (v >= 0 && v < pow) {\r\n          param.phyValue = v\r\n          //v to hex string, 空格隔开\r\n          param.value = Buffer.alloc(byte)\r\n          //bit-endian\r\n          for (let i = 0; i < byte; i++) {\r\n            param.value.writeUInt8((v >> (8 * i)) & 0xff, byte - i - 1)\r\n          }\r\n        } else {\r\n          throw new Error(`value should be in [0,${pow - 1}]`)\r\n        }\r\n      }\r\n      break\r\n    case 'ARRAY':\r\n      {\r\n        const byte = Math.floor(param.bitLen / 8)\r\n\r\n        if (!str) {\r\n          param.phyValue = ''\r\n          param.value = Buffer.alloc(0)\r\n          break\r\n        }\r\n\r\n        //regex check hex string like '00 F4 33 5a' 中间必须要有空格，每个最大2个字符串\r\n        if (!/^[0-9a-fA-F]{2}( [0-9a-fA-F]{2})*$/.test(str.toString())) {\r\n          throw new Error('value should be a 00 F4 33 5a')\r\n        }\r\n\r\n        const s = str.toString().split(' ')\r\n        if (s.length > byte) {\r\n          throw new Error(`value length ${s.length} should less than ${byte}`)\r\n        }\r\n        for (let i = 0; i < s.length; i++) {\r\n          const v = Number('0x' + s[i])\r\n          if (Number.isNaN(v)) {\r\n            throw new Error('value should be a 00 F4 33 5a')\r\n          }\r\n          if (v < 0 && v >= 256) {\r\n            throw new Error(`value[${i}] should be in [0,255]`)\r\n          }\r\n        }\r\n        param.phyValue = str.toString()\r\n        param.value = Buffer.from(s.map((item) => parseInt(item, 16)))\r\n      }\r\n      break\r\n    case 'FILE':\r\n    case 'ASCII': {\r\n      const byte = Math.floor(param.bitLen / 8)\r\n      if (str.toString().length > byte) {\r\n        throw new Error(`value length ${str.toString().length} should less than ${byte}`)\r\n      }\r\n      param.phyValue = str.toString()\r\n      //hex string 空格隔开\r\n      param.value = Buffer.from(str.toString(), 'ascii')\r\n\r\n      break\r\n    }\r\n    case 'UNICODE': {\r\n      const byte = Math.floor(param.bitLen / 8)\r\n      const tb = Buffer.from(str.toString(), 'utf-8')\r\n      if (tb.length > byte) {\r\n        throw new Error(`value length ${tb.length} should less than ${byte}`)\r\n      }\r\n      param.phyValue = str.toString()\r\n      //hex string 空格隔开\r\n      param.value = tb\r\n      // console.log(param.value)\r\n      break\r\n    }\r\n    case 'FLOAT':\r\n      {\r\n        const v = Number(str)\r\n        if (Number.isNaN(v)) {\r\n          throw new Error('value should be a number')\r\n        }\r\n        if (v === Infinity || v === -Infinity) {\r\n          throw new Error('value should not be Infinity')\r\n        }\r\n        const b = Buffer.alloc(4).fill(0)\r\n        b.writeFloatBE(v, 0)\r\n        param.phyValue = v\r\n        //v to hex string, 空格隔开\r\n        param.value = b\r\n      }\r\n      break\r\n    case 'DOUBLE': {\r\n      const v = Number(str)\r\n      if (Number.isNaN(v)) {\r\n        throw new Error('value should be a number')\r\n      }\r\n      if (v === Infinity || v === -Infinity) {\r\n        throw new Error('value should not be Infinity')\r\n      }\r\n      const d = Buffer.alloc(8).fill(0)\r\n      d.writeDoubleBE(v, 0)\r\n      param.phyValue = v\r\n      //v to hex string, 空格隔开\r\n      param.value = d\r\n      break\r\n    }\r\n    default:\r\n      break\r\n  }\r\n}\r\n\r\nexport function paramSetValRaw(param: Param, val: Buffer) {\r\n  const byte = Math.ceil(param.bitLen / 8)\r\n  if (val.length > byte) {\r\n    throw new Error(`value length ${val.length} should less than ${byte}`)\r\n  }\r\n\r\n  switch (param.type) {\r\n    case 'NUM': {\r\n      let v = 0\r\n      for (let i = 0; i < byte; i++) {\r\n        v = (v << 8) | val.readUInt8(i)\r\n      }\r\n      param.phyValue = v\r\n      param.value = val\r\n      break\r\n    }\r\n\r\n    case 'ARRAY': {\r\n      param.phyValue = splitStr2(val.toString('hex').padStart(byte * 2, '0'))\r\n      param.value = val\r\n      break\r\n    }\r\n\r\n    case 'ASCII': {\r\n      param.phyValue = val.toString('ascii')\r\n      param.value = val\r\n      break\r\n    }\r\n    case 'UNICODE': {\r\n      param.phyValue = val.toString('utf-8')\r\n      param.value = val\r\n      break\r\n    }\r\n    case 'FLOAT': {\r\n      param.phyValue = val.readFloatBE(0)\r\n      param.value = val\r\n      break\r\n    }\r\n    case 'DOUBLE': {\r\n      param.phyValue = val.readDoubleBE(0)\r\n      param.value = val\r\n      break\r\n    }\r\n    default:\r\n      break\r\n  }\r\n  param.value = val\r\n}\r\n\r\nexport function paramSetSize(param: Param, bitSize: number) {\r\n  const byte = Math.ceil(bitSize / 8)\r\n  const lastByte = Math.ceil(param.bitLen / 8)\r\n  const minLen = Math.min(byte, lastByte)\r\n  param.bitLen = bitSize\r\n  const newValue = Buffer.alloc(byte).fill(0)\r\n  //copy value to new buffer\r\n  param.value.copy(newValue, 0, 0, minLen)\r\n  param.value = newValue\r\n}\r\nexport interface SequenceItem {\r\n  enable: boolean\r\n  checkResp: boolean\r\n  retryNum: number\r\n  addressIndex: number\r\n  failBehavior: 'stop' | 'continue'\r\n  serviceId: string\r\n  delay: number\r\n}\r\n\r\nexport interface Sequence {\r\n  name: string\r\n  services: SequenceItem[]\r\n}\r\n\r\nexport interface Project {\r\n  device: string\r\n  scriptFileName: string\r\n}\r\n\r\nexport interface SubFunction {\r\n  name: string\r\n  subFunction: string\r\n}\r\nexport interface UdsInfo {\r\n  pTime: number\r\n  pExtTime: number\r\n  s3Time: number\r\n  testerPresentEnable: boolean\r\n  testerPresentSpecialService?: string\r\n  testerPresentAddrIndex?: number\r\n}\r\n\r\n/**\r\n * @category UDS\r\n */\r\nexport interface UdsAddress {\r\n  type: HardwareType\r\n  canAddr?: CanAddr\r\n  ethAddr?: EthAddr\r\n  linAddr?: LinAddr\r\n}\r\n\r\nexport function getUdsAddrName(item?: UdsAddress) {\r\n  if (item) {\r\n    if (item.type == 'can') {\r\n      return item.canAddr?.name || ''\r\n    } else if (item.type == 'eth') {\r\n      return item.ethAddr?.name || ''\r\n    } else if (item.type == 'lin') {\r\n      return item.linAddr?.name || ''\r\n    }\r\n  }\r\n  return ''\r\n}\r\nexport function getUdsDeviceName(item: UdsDevice) {\r\n  if (item.type == 'can') {\r\n    return item.canDevice?.name || ''\r\n  }\r\n  return ''\r\n}\r\n\r\nexport interface PwmDevice {\r\n  label: string\r\n  id: string\r\n  handle: any\r\n  serialNumber?: string\r\n  busy?: boolean\r\n}\r\n\r\nexport interface PwmBaseInfo {\r\n  id: string\r\n  device: PwmDevice\r\n  freq: number\r\n  initDuty: number\r\n  polarity: boolean\r\n  resetStatus: boolean\r\n  vendor: CanVendor\r\n  name: string\r\n  database?: string\r\n}\r\n\r\nexport interface UdsDevice {\r\n  type: HardwareType\r\n  canDevice?: CanBaseInfo\r\n  ethDevice?: EthBaseInfo\r\n  linDevice?: LinBaseInfo\r\n  pwmDevice?: PwmBaseInfo\r\n  someipDevice?: SomeipInfo\r\n}\r\n","import EventEmitter from 'events'\r\nimport { cloneDeep } from 'lodash'\r\n// import type { CanLOG } from '../log'\r\n\r\nexport interface CanBitrate {\r\n  freq: number\r\n  timeSeg1: number\r\n  timeSeg2: number\r\n  sjw: number\r\n  preScaler: number\r\n  clock?: string\r\n  zlgSpec?: string\r\n}\r\n\r\nexport type CanVendor =\r\n  | 'peak'\r\n  | 'simulate'\r\n  | 'zlg'\r\n  | 'kvaser'\r\n  | 'toomoss'\r\n  | 'vector'\r\n  | 'slcan'\r\n  | 'ecubus'\r\n  | 'candle'\r\nexport interface CanBaseInfo {\r\n  id: string\r\n  handle: any\r\n  name: string\r\n  vendor: CanVendor\r\n  canfd: boolean\r\n  bitrate: CanBitrate\r\n  bitratefd?: CanBitrate\r\n  silent?: boolean\r\n  database?: string\r\n  toomossRes?: boolean\r\n  zlgRes?: boolean\r\n  candleRes?: boolean\r\n  slcanDelay?: number\r\n}\r\n\r\n/**\r\n * Represents a CAN (Controller Area Network) message.\r\n *\r\n * @category CAN\r\n */\r\nexport interface CanMessage {\r\n  /**\r\n   * The name of the CAN message.\r\n   */\r\n  name?: string\r\n  /**\r\n   * The device associated with the CAN message.\r\n   */\r\n  device?: string\r\n\r\n  /**\r\n   * The direction of the CAN message, either 'IN' for incoming or 'OUT' for outgoing.\r\n   */\r\n  dir: 'IN' | 'OUT'\r\n\r\n  /**\r\n   * The data payload of the CAN message.\r\n   */\r\n  data: Buffer\r\n\r\n  /**\r\n   * The timestamp of when the CAN message was sent/recv.\r\n   */\r\n  ts?: number\r\n\r\n  /**\r\n   * The identifier of the CAN message.\r\n   */\r\n  id: number\r\n\r\n  /**\r\n   * The type of the CAN message.\r\n   */\r\n  msgType: CanMsgType\r\n\r\n  /**\r\n   * Indicates whether the CAN message is simulated.\r\n   * This property is optional.\r\n   */\r\n  isSimulate?: boolean\r\n  /**\r\n   * The database name of the CAN message.\r\n   */\r\n  database?: string\r\n  /**\r\n   * The children signals of the CAN message.\r\n   * internal use\r\n   */\r\n  children?: {\r\n    name: string\r\n    data: string\r\n  }[]\r\n}\r\n\r\n/**\r\n * Enumeration representing different CAN (Controller Area Network) ID types.\r\n *\r\n * @category CAN\r\n * @enum {string}\r\n * @readonly\r\n */\r\nexport enum CAN_ID_TYPE {\r\n  STANDARD = 'STANDARD',\r\n  EXTENDED = 'EXTENDED'\r\n}\r\n\r\n/**\r\n * Enumeration representing different CAN (Controller Area Network) address types.\r\n *\r\n * @category CAN\r\n * @enum {string}\r\n * @readonly\r\n */\r\nexport enum CAN_ADDR_TYPE {\r\n  PHYSICAL = 'PHYSICAL',\r\n  FUNCTIONAL = 'FUNCTIONAL'\r\n}\r\n\r\n/**\r\n * Enumeration representing different CAN (Controller Area Network) address formats.\r\n *\r\n * @category CAN\r\n * @enum {string}\r\n * @readonly\r\n */\r\nexport enum CAN_ADDR_FORMAT {\r\n  NORMAL = 'NORMAL',\r\n  FIXED_NORMAL = 'NORMAL_FIXED',\r\n  EXTENDED = 'EXTENDED',\r\n  MIXED = 'MIXED',\r\n  ENHANCED = 'ENHANCED'\r\n}\r\n\r\n/**\r\n * Represents a CAN (Controller Area Network) message type.\r\n * @category CAN\r\n\r\n */\r\nexport interface CanMsgType {\r\n  /**\r\n   * The type of CAN ID.\r\n   */\r\n  idType: CAN_ID_TYPE\r\n\r\n  /**\r\n   * Indicates if Bit Rate Switching (BRS) is enabled.\r\n   */\r\n  brs: boolean\r\n\r\n  /**\r\n   * Indicates if CAN FD (Flexible Data-rate) is used.\r\n   */\r\n  canfd: boolean\r\n\r\n  /**\r\n   * Indicates if the message is a remote frame.\r\n   */\r\n  remote: boolean\r\n\r\n  /**\r\n   * Optional unique identifier for the message.\r\n   */\r\n  uuid?: string\r\n}\r\n\r\nexport enum CAN_ERROR_ID {\r\n  CAN_BUS_ERROR,\r\n  CAN_READ_TIMEOUT,\r\n  CAN_BUS_BUSY,\r\n  CAN_BUS_CLOSED,\r\n  CAN_INTERNAL_ERROR,\r\n  CAN_PARAM_ERROR,\r\n  CAN_DRIVER_SILENT\r\n}\r\n\r\nconst canErrorMap: Record<CAN_ERROR_ID, string> = {\r\n  [CAN_ERROR_ID.CAN_BUS_ERROR]: 'bus error',\r\n  [CAN_ERROR_ID.CAN_READ_TIMEOUT]: 'read timeout',\r\n  [CAN_ERROR_ID.CAN_BUS_BUSY]: 'bus busy',\r\n  [CAN_ERROR_ID.CAN_INTERNAL_ERROR]: 'dll lib internal error',\r\n  [CAN_ERROR_ID.CAN_BUS_CLOSED]: 'bus closed',\r\n  [CAN_ERROR_ID.CAN_PARAM_ERROR]: 'param error',\r\n  [CAN_ERROR_ID.CAN_DRIVER_SILENT]: 'driver silent'\r\n}\r\n\r\nexport function getTsUs() {\r\n  const hrtime = process.hrtime()\r\n  const seconds = hrtime[0]\r\n  const nanoseconds = hrtime[1]\r\n  return seconds * 1000000 + Math.floor(nanoseconds / 1000)\r\n}\r\n\r\nexport interface CanInterAction {\r\n  trigger: {\r\n    type: 'manual' | 'periodic'\r\n    period?: number\r\n    onKey?: string\r\n  }\r\n  name: string\r\n  database?: string\r\n  id: string\r\n  channel: string\r\n  type: 'canfd' | 'can' | 'ecan' | 'ecanfd'\r\n  dlc: number\r\n  brs?: boolean\r\n  remote?: boolean\r\n  data: string[]\r\n}\r\nexport function formatError(error: Error) {\r\n  // Get error stack\r\n  const stack = error.stack || ''\r\n\r\n  // Get first stack line (usually contains error location)\r\n  const locationLine = stack.split('\\n')[1] || ''\r\n\r\n  // Extract file location info\r\n  const locationMatch = locationLine.match(/webpack:\\\\ecubuspro\\\\(.*):(\\d+):(\\d+)\\)$/)\r\n\r\n  let location = ''\r\n  if (locationMatch) {\r\n    const [, file, line, column] = locationMatch\r\n    //\r\n    // Convert webpack path to GitHub URL，#L${line}C${column}-L${line}C${column}\r\n    location = `https://github.com/ecubus/EcuBus-Pro/blob/master/${file}#L${line}C${column}`\r\n  } else {\r\n    // at listener (D:\\code\\ecubus-pro\\resources\\examples\\test_simple\\node.ts:5:11)\r\n    const newMatch = locationLine.match(/\\((.*):(\\d+):(\\d+)\\)/)\r\n    if (newMatch) {\r\n      const [, file, line, column] = newMatch\r\n      location = `file://${file}:${line}:${column}`\r\n    } else {\r\n      location = locationLine\r\n    }\r\n  }\r\n\r\n  // Return simplified error message\r\n  return `Error: ${error.message}, Pos: ${location}`\r\n}\r\n\r\nexport class CanError extends Error {\r\n  errorId: CAN_ERROR_ID\r\n  msgType: CanMsgType\r\n  data?: Buffer\r\n  constructor(errorId: CAN_ERROR_ID, msgType: CanMsgType, data?: Buffer, extMsg?: string) {\r\n    super(canErrorMap[errorId] + (extMsg ? `,${extMsg}` : ''))\r\n    this.errorId = errorId\r\n    this.msgType = msgType\r\n    this.data = data\r\n  }\r\n}\r\n\r\n/**\r\n * @category CAN\r\n */\r\nexport interface CanAddr extends CanMsgType {\r\n  name: string\r\n  addrFormat: CAN_ADDR_FORMAT\r\n  addrType: CAN_ADDR_TYPE\r\n  desc?: string\r\n  SA: string\r\n  TA: string\r\n  AE: string\r\n  canIdTx: string\r\n  canIdRx: string\r\n  nAs: number\r\n  nAr: number\r\n  nBs: number\r\n  nCr: number\r\n  nBr?: number\r\n  nCs?: number\r\n  stMin: number\r\n  bs: number\r\n  maxWTF: number\r\n  uuid?: string\r\n  dlc: number\r\n  padding: boolean\r\n  paddingValue: string\r\n}\r\n\r\nexport interface CanDevice {\r\n  label: string\r\n  id: string\r\n  handle: any\r\n  serialNumber?: string\r\n  busy?: boolean\r\n  candleRes?: boolean\r\n}\r\n\r\nexport interface CanEventMap {\r\n  sendTp: [\r\n    info: {\r\n      data: Buffer\r\n      ts: number\r\n      id: number\r\n      idType: CAN_ID_TYPE\r\n      canfd: boolean\r\n      brs: boolean\r\n      remote: boolean\r\n    }\r\n  ]\r\n  sendBase: [\r\n    info: {\r\n      data: Buffer\r\n      ts: number\r\n      id: number\r\n      idType: CAN_ID_TYPE\r\n      canfd: boolean\r\n      brs: boolean\r\n      remote: boolean\r\n    }\r\n  ]\r\n  recvTp: [\r\n    info: {\r\n      data: Buffer\r\n      ts: number\r\n      id: number\r\n      idType: string\r\n      canfd: boolean\r\n      brs: boolean\r\n      remote: boolean\r\n    }\r\n  ]\r\n  recvBase: [\r\n    info: {\r\n      data: Buffer\r\n      ts: number\r\n      id: number\r\n      idType: string\r\n      canfd: boolean\r\n      brs: boolean\r\n      remote: boolean\r\n    }\r\n  ]\r\n  errorTp: [\r\n    info: {\r\n      dir: 'send' | 'recv'\r\n      data: Buffer\r\n      ts: number\r\n      id: number\r\n      idType: string\r\n      canfd: boolean\r\n      brs: boolean\r\n      remote: boolean\r\n      msg: string\r\n    }\r\n  ]\r\n}\r\n\r\nexport function getLenByDlc(dlc: number, canFd: boolean) {\r\n  const map: Record<number, number> = {\r\n    0: 8,\r\n    1: 8,\r\n    2: 8,\r\n    3: 8,\r\n    4: 8,\r\n    5: 8,\r\n    6: 8,\r\n    7: 8,\r\n    8: 8,\r\n    9: 8,\r\n    10: 8,\r\n    11: 8,\r\n    12: 8,\r\n    13: 8,\r\n    14: 8,\r\n    15: 8\r\n  }\r\n  const mapFd: Record<number, number> = {\r\n    0: 8,\r\n    1: 8,\r\n    2: 8,\r\n    3: 8,\r\n    4: 8,\r\n    5: 8,\r\n    6: 8,\r\n    7: 8,\r\n    8: 8,\r\n    9: 12,\r\n    10: 16,\r\n    11: 20,\r\n    12: 24,\r\n    13: 32,\r\n    14: 48,\r\n    15: 64\r\n  }\r\n  if (canFd) {\r\n    return mapFd[dlc] || 0\r\n  } else {\r\n    return map[dlc] || 0\r\n  }\r\n}\r\nexport function getDlcByLen(len: number, canFd: boolean) {\r\n  const map: Record<number, number> = {\r\n    0: 0,\r\n    1: 1,\r\n    2: 2,\r\n    3: 3,\r\n    4: 4,\r\n    5: 5,\r\n    6: 6,\r\n    7: 7,\r\n    8: 8\r\n  }\r\n  const mapFd: Record<number, number> = {\r\n    0: 0,\r\n    1: 1,\r\n    2: 2,\r\n    3: 3,\r\n    4: 4,\r\n    5: 5,\r\n    6: 6,\r\n    7: 7,\r\n    8: 8,\r\n    12: 9,\r\n    16: 10,\r\n    20: 11,\r\n    24: 12,\r\n    32: 13,\r\n    48: 14,\r\n    64: 15\r\n  }\r\n\r\n  if (canFd) {\r\n    return mapFd[len] || 0\r\n  } else {\r\n    return map[len] || 0\r\n  }\r\n}\r\nexport function addrToId(addr: CanAddr): number {\r\n  let id = Number(addr.canIdTx)\r\n  if (addr.addrFormat == CAN_ADDR_FORMAT.FIXED_NORMAL) {\r\n    id = calcCanIdNormalFixed(Number(addr.SA), Number(addr.TA), addr.addrType)\r\n  } else if (addr.addrFormat == CAN_ADDR_FORMAT.MIXED) {\r\n    if (addr.idType == CAN_ID_TYPE.EXTENDED) {\r\n      id = calcCanIdMixed(Number(addr.SA), Number(addr.TA), addr.addrType)\r\n    }\r\n  }\r\n  return id\r\n}\r\nexport function addrToStr(addr: CanAddr): string {\r\n  const cAddr = cloneDeep(addr)\r\n  delete cAddr.uuid\r\n  const jsonString = JSON.stringify(cAddr, Object.keys(cAddr).sort())\r\n  return jsonString\r\n}\r\n\r\nexport function swapAddr(addr: CanAddr): CanAddr {\r\n  const cloneAddr = cloneDeep(addr)\r\n  const tmp = cloneAddr.SA\r\n  cloneAddr.SA = cloneAddr.TA\r\n  cloneAddr.TA = tmp\r\n  const tmpid = cloneAddr.canIdTx\r\n  cloneAddr.canIdTx = cloneAddr.canIdRx\r\n  cloneAddr.canIdRx = tmpid\r\n  return cloneAddr\r\n}\r\nexport function calcCanIdMixed(sa: number, ta: number, addrType: CAN_ADDR_TYPE) {\r\n  if (addrType === CAN_ADDR_TYPE.PHYSICAL) {\r\n    //29bit 110|0|0|206|N_TA|N_SA\r\n    return 0x18ce0000 | (ta << 8) | sa\r\n  } else {\r\n    //29bit 110|0|0|205|N_TA|N_SA\r\n    return 0x18cd0000 | (ta << 8) | sa\r\n  }\r\n}\r\n\r\nexport function calcCanIdNormalFixed(sa: number, ta: number, addrType: CAN_ADDR_TYPE) {\r\n  if (addrType === CAN_ADDR_TYPE.PHYSICAL) {\r\n    //29bit 110|0|0|218|N_TA|N_SA\r\n    return 0x18da0000 | (ta << 8) | sa\r\n  } else {\r\n    //29bit 110|0|0|219|N_TA|N_SA\r\n    return 0x18db0000 | (ta << 8) | sa\r\n  }\r\n}\r\n\r\n","// 条件导入sa.node，只在Windows平台导入\r\nlet saNode: any\r\nif (process.platform == 'win32') {\r\n  // eslint-disable-next-line @typescript-eslint/no-var-requires\r\n  saNode = require('./build/Release/sa.node')\r\n} else {\r\n  // 非Windows平台提供空实现\r\n  saNode = {\r\n    SeedKey: class {\r\n      constructor() {}\r\n      IsLoaded() {\r\n        return false\r\n      }\r\n      LoadDLL() {\r\n        throw new Error('SecureAccessDll is only available on Windows platform')\r\n      }\r\n      GenerateKeyExOpt() {\r\n        throw new Error('SecureAccessDll is only available on Windows platform')\r\n      }\r\n      GenerateKeyEx() {\r\n        throw new Error('SecureAccessDll is only available on Windows platform')\r\n      }\r\n    },\r\n    UINT8_ARRAY: class {\r\n      constructor() {}\r\n      setitem() {}\r\n      cast() {\r\n        return this\r\n      }\r\n    },\r\n    INT8_ARRAY: class {\r\n      constructor() {}\r\n      setitem() {}\r\n      cast() {\r\n        return this\r\n      }\r\n    },\r\n    UINT32_PTR: class {\r\n      constructor() {}\r\n      assign() {}\r\n      value() {\r\n        return 0\r\n      }\r\n      cast() {\r\n        return this\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @category UDS\r\n */\r\nexport default class SecureAccessDll {\r\n  _ref: any\r\n  constructor(dllPath: string) {\r\n    this._ref = new saNode.SeedKey()\r\n    // console.log(dllPath)\r\n    this.loadDll(dllPath)\r\n    if (!this._ref.IsLoaded()) {\r\n      throw new Error('Failed to load DLL')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Generates a key with extended options.\r\n   *\r\n   * @param ipSeedArray - A buffer containing the seed array, for c: = ipSeedArray + iSeedArraySize\r\n   * @param iSecurityLevel - The security level to be used.\r\n   * @param ipVariant - A buffer containing the variant. for c: = ipVariant, size decide by vendor self\r\n   * @param ipOptions - A buffer containing the options. for c: = ipOptions, size decide by vendor self\r\n   * @param key - A buffer containing the input key.for c: = iopKeyArray + iMaxKeyArraySize\r\n   * @returns A buffer containing the generated key. Return is Buffer, for c: = iopKeyArray, length = oActualKeyArraySize\r\n   * @throws Will throw an error if the key generation fails.\r\n   *\r\n   * @example\r\n   * ```typescript\r\n   *\r\n   * const dllPath=path.join(__dirname,'GenerateKeyExOpt.dll')\r\n   * const sa=new SecureAccessDll(dllPath)\r\n   *\r\n   * const seed=sa.GenerateKeyExOpt(Buffer.from([1,2,3,4,5]),1,Buffer.from([1,2,3,4,5]),Buffer.from([1,2,3,4,5]),Buffer.from([1,2,3,4,5]))\r\n   * ```\r\n   *\r\n   */\r\n  GenerateKeyExOpt(\r\n    ipSeedArray: Buffer,\r\n    iSecurityLevel: number,\r\n    ipVariant: Buffer,\r\n    ipOptions: Buffer,\r\n    key: Buffer\r\n  ): Buffer {\r\n    const seedArray = new saNode.UINT8_ARRAY(ipSeedArray.length)\r\n    for (let i = 0; i < ipSeedArray.length; i++) {\r\n      seedArray.setitem(i, ipSeedArray.readUInt8(i))\r\n    }\r\n    const variant = new saNode.INT8_ARRAY(ipVariant.length)\r\n    for (let i = 0; i < ipVariant.length; i++) {\r\n      variant.setitem(i, ipVariant.readInt8(i))\r\n    }\r\n    const options = new saNode.INT8_ARRAY(ipOptions.length)\r\n    for (let i = 0; i < ipOptions.length; i++) {\r\n      options.setitem(i, ipOptions.readInt8(i))\r\n    }\r\n    const KeyArray = new saNode.UINT8_ARRAY(key.length)\r\n    for (let i = 0; i < key.length; i++) {\r\n      KeyArray.setitem(i, key.readUInt8(i))\r\n    }\r\n    const KeySize = new saNode.UINT32_PTR()\r\n    KeySize.assign(key.length)\r\n    const ret = this._ref.GenerateKeyExOpt(\r\n      seedArray.cast(),\r\n      ipSeedArray.length,\r\n      iSecurityLevel,\r\n      variant.cast(),\r\n      options.cast(),\r\n      KeyArray.cast(),\r\n      key.length,\r\n      KeySize.cast()\r\n    )\r\n    if (ret == 0) {\r\n      const retBuf = Buffer.alloc(KeySize.value())\r\n      for (let i = 0; i < KeySize.value(); i++) {\r\n        retBuf[i] = KeyArray.getitem(i)\r\n      }\r\n      return retBuf\r\n    } else {\r\n      throw new Error(`GenerateKeyExOpt failed with error code ${ret}`)\r\n    }\r\n  }\r\n  /**\r\n   * Generates a key with extended options.\r\n   *\r\n   * @param ipSeedArray - A buffer containing the seed array, for c: = ipSeedArray + iSeedArraySize\r\n   * @param iSecurityLevel - The security level to be used.\r\n   * @param ipVariant - A buffer containing the variant. for c: = ipVariant, size decide by vendor self\r\n   * @param key - A buffer containing the input key.for c: = ioKeyArray + iKeyArraySize\r\n   * @returns A buffer containing the generated key. Return is Buffer, for c: = ioKeyArray, length = oSize\r\n   * @throws Will throw an error if the key generation fails.\r\n   *\r\n   * @example\r\n   * ```typescript\r\n   *\r\n   * const dllPath=path.join(__dirname,'GenerateKeyEx.dll')\r\n   * const sa=new SecureAccessDll(dllPath)\r\n   *\r\n   *const seed=sa.GenerateKeyEx(Buffer.from([1,2,3,4,5]),1,Buffer.from([1,2,3,4,5]),Buffer.from([1,2,3,4,5]))\r\n   * ```\r\n   *\r\n   */\r\n  GenerateKeyEx(\r\n    ipSeedArray: Buffer,\r\n    iSecurityLevel: number,\r\n    ipVariant: Buffer,\r\n    key: Buffer\r\n  ): Buffer {\r\n    const seedArray = new saNode.UINT8_ARRAY(ipSeedArray.length)\r\n    for (let i = 0; i < ipSeedArray.length; i++) {\r\n      seedArray.setitem(i, ipSeedArray.readUInt8(i))\r\n    }\r\n    const variant = new saNode.INT8_ARRAY(ipVariant.length)\r\n    for (let i = 0; i < ipVariant.length; i++) {\r\n      variant.setitem(i, ipVariant.readInt8(i))\r\n    }\r\n\r\n    const KeyArray = new saNode.UINT8_ARRAY(key.length)\r\n    for (let i = 0; i < key.length; i++) {\r\n      KeyArray.setitem(i, key.readUInt8(i))\r\n    }\r\n    const KeySize = new saNode.UINT32_PTR()\r\n    KeySize.assign(key.length)\r\n    const ret = this._ref.GenerateKeyEx(\r\n      seedArray.cast(),\r\n      ipSeedArray.length,\r\n      iSecurityLevel,\r\n      variant.cast(),\r\n      KeyArray.cast(),\r\n      key.length,\r\n      KeySize.cast()\r\n    )\r\n    if (ret == 0) {\r\n      const retBuf = Buffer.alloc(KeySize.value())\r\n      for (let i = 0; i < KeySize.value(); i++) {\r\n        retBuf[i] = KeyArray.getitem(i)\r\n      }\r\n      return retBuf\r\n    } else {\r\n      throw new Error(`GenerateKeyEx failed with error code ${ret}`)\r\n    }\r\n  }\r\n  private loadDll(dllPath: string) {\r\n    this._ref.LoadDLL(dllPath)\r\n  }\r\n}\r\n\r\n","import { EventEmitter } from 'stream'\r\nimport { CanVendor } from './can'\r\nimport type { Frame, LDF } from 'src/renderer/src/database/ldfParse'\r\nimport { cloneDeep, isEqual } from 'lodash'\r\n\r\n// export type LinVendor = 'peak'\r\nexport interface LinDevice {\r\n  label: string\r\n  id: string\r\n  handle: any\r\n  serialNumber?: string\r\n  busy?: boolean\r\n  toomossVolt?: number\r\n  lincablePowerEnable?: boolean\r\n}\r\n\r\nexport interface LinBaseInfo {\r\n  id: string\r\n  device: LinDevice\r\n  baudRate: number\r\n  mode: LinMode\r\n  vendor: CanVendor\r\n  name: string\r\n  database?: string\r\n}\r\n\r\n/**\r\n * @category LIN\r\n */\r\nexport enum LinDirection {\r\n  SEND = 'SEND',\r\n  RECV = 'RECV',\r\n  RECV_AUTO_LEN = 'RECV_AUTO_LEN'\r\n}\r\n\r\n/**\r\n * @category LIN\r\n */\r\nexport enum LinMode {\r\n  MASTER = 'MASTER',\r\n  SLAVE = 'SLAVE'\r\n}\r\n\r\n/**\r\n * @category LIN\r\n */\r\nexport enum LinChecksumType {\r\n  CLASSIC = 'CLASSIC',\r\n  ENHANCED = 'ENHANCED'\r\n}\r\n\r\nexport enum LIN_ERROR_ID {\r\n  LIN_BUS_ERROR,\r\n  LIN_READ_TIMEOUT,\r\n  LIN_BUS_BUSY,\r\n  LIN_BUS_CLOSED,\r\n  LIN_INTERNAL_ERROR,\r\n  LIN_PARAM_ERROR\r\n}\r\n\r\nconst linErrorMap: Record<LIN_ERROR_ID, string> = {\r\n  [LIN_ERROR_ID.LIN_BUS_ERROR]: 'bus error',\r\n  [LIN_ERROR_ID.LIN_READ_TIMEOUT]: 'read timeout',\r\n  [LIN_ERROR_ID.LIN_BUS_BUSY]: 'bus busy',\r\n  [LIN_ERROR_ID.LIN_INTERNAL_ERROR]: 'dll lib internal error',\r\n  [LIN_ERROR_ID.LIN_BUS_CLOSED]: 'bus closed',\r\n  [LIN_ERROR_ID.LIN_PARAM_ERROR]: 'param error'\r\n}\r\n\r\n/**\r\n * LinCable Error Inject Control. See {@link https://app.whyengineer.com/docs/um/hardware/lincable.html} for details.\r\n * @category LIN\r\n */\r\nexport interface LinCableErrorInject {\r\n  /**\r\n   * Break field length in bits\r\n   * @default 13\r\n   * @minimum 13\r\n   * @maximum 26\r\n   */\r\n  breakLength?: number\r\n\r\n  /**\r\n   * Break delimiter length in bits\r\n   * @default 1\r\n   * @minimum 0\r\n   * @maximum 14.6\r\n   */\r\n  breakDelLength?: number\r\n\r\n  /**\r\n   * Inter-byte space between sync byte field and identifier in bits\r\n   * @default 0\r\n   * @minimum 0\r\n   * @maximum 14\r\n   */\r\n  hInterLength?: number\r\n\r\n  /**\r\n   * Inter-byte spaces between data fields in bits. Array length must match data length.\r\n   * @default 0\r\n   * @minimum 0\r\n   * @maximum 4\r\n   */\r\n  dInterLength?: number[]\r\n\r\n  /**\r\n   * Custom sync byte value. Set to false to prevent master from sending sync.\r\n   * @default 0x55\r\n   */\r\n  syncVal?: number | false\r\n\r\n  /**\r\n   * Custom PID value. Set to false to prevent master from sending PID.\r\n   * @default getPID(frameId)\r\n   */\r\n  pid?: number | false\r\n\r\n  /**\r\n   * Fault injection configuration\r\n   */\r\n  errorInject?: {\r\n    /** Bit position to inject fault, starting from first break bit */\r\n    bit: number\r\n    /** Fault value: 1 for high, 0 for low */\r\n    value: 1 | 0\r\n  }\r\n\r\n  /**\r\n   * Override the checksum value\r\n   */\r\n  checkSum?: number\r\n}\r\n/**\r\n * @category LIN\r\n */\r\nexport interface LinMsg {\r\n  frameId: number\r\n  data: Buffer\r\n  direction: LinDirection\r\n  checksumType: LinChecksumType\r\n  checksum?: number\r\n  database?: string\r\n  device?: string\r\n  workNode?: string\r\n  name?: string\r\n  isEvent?: boolean\r\n  uuid?: string\r\n  ts?: number\r\n  /**\r\n   * The children signals of the CAN message.\r\n   * internal use\r\n   */\r\n  children?: {\r\n    name: string\r\n    data: string\r\n  }[]\r\n  /* advanced for ecubus lincable */\r\n  lincable?: LinCableErrorInject\r\n}\r\n\r\nexport class LinError extends Error {\r\n  errorId: LIN_ERROR_ID\r\n  msgType?: LinMsg\r\n\r\n  constructor(errorId: LIN_ERROR_ID, msg?: LinMsg, extMsg?: string) {\r\n    super(linErrorMap[errorId] + (extMsg ? `,${extMsg}` : ''))\r\n    this.errorId = errorId\r\n    this.msgType = msg\r\n  }\r\n}\r\nexport enum LIN_ADDR_TYPE {\r\n  PHYSICAL = 'PHYSICAL',\r\n  FUNCTIONAL = 'FUNCTIONAL'\r\n}\r\nexport enum LIN_SCH_TYPE {\r\n  DIAG_ONLY = 'DIAG_ONLY',\r\n  DIAG_INTERLEAVED = 'DIAG_INTERLEAVED'\r\n}\r\n\r\n/**\r\n * @category LIN\r\n */\r\nexport interface LinAddr {\r\n  name: string\r\n  addrType: LIN_ADDR_TYPE\r\n  nad: number\r\n  stMin: number\r\n  nAs: number\r\n  nCr: number\r\n  schType: LIN_SCH_TYPE\r\n}\r\n\r\nconst LinPidTable = [\r\n  0x80, 0xc1, 0x42, 0x03, 0xc4, 0x85, 0x06, 0x47, 0x08, 0x49, 0xca, 0x8b, 0x4c, 0x0d, 0x8e, 0xcf,\r\n  0x50, 0x11, 0x92, 0xd3, 0x14, 0x55, 0xd6, 0x97, 0xd8, 0x99, 0x1a, 0x5b, 0x9c, 0xdd, 0x5e, 0x1f,\r\n  0x20, 0x61, 0xe2, 0xa3, 0x64, 0x25, 0xa6, 0xe7, 0xa8, 0xe9, 0x6a, 0x2b, 0xec, 0xad, 0x2e, 0x6f,\r\n  0xf0, 0xb1, 0x32, 0x73, 0xb4, 0xf5, 0x76, 0x37, 0x78, 0x39, 0xba, 0xfb, 0x3c, 0x7d, 0xfe, 0xbf\r\n]\r\n\r\nexport function getPID(frameId: number) {\r\n  return LinPidTable[frameId]\r\n}\r\n\r\n/**\r\n * Calculate LIN frame checksum\r\n * @category LIN\r\n * @param data - Data bytes to calculate checksum for\r\n * @param checksumType - Type of checksum (CLASSIC for LIN 1.x or ENHANCED for LIN 2.x)\r\n * @param pid - Protected ID, required for enhanced checksum calculation\r\n * @returns Calculated checksum byte\r\n */\r\nexport function getCheckSum(data: Buffer, checksumType: LinChecksumType, pid?: number) {\r\n  let checksum = 0\r\n\r\n  if (checksumType === LinChecksumType.CLASSIC) {\r\n    // Classic checksum (LIN 1.x): sum all bytes with carry, then NOT\r\n    for (let i = 0; i < data.length; i++) {\r\n      checksum += data[i]\r\n      checksum = (checksum & 0xff) + (checksum >> 8)\r\n    }\r\n    checksum = ~checksum & 0xff\r\n  } else {\r\n    // Enhanced checksum (LIN 2.x): PID + data, sum with carry handling, then subtract from 0xFF\r\n    if (pid === undefined) throw new Error('pid required for enhanced checksum')\r\n    checksum = pid\r\n    for (let i = 0; i < data.length; i++) {\r\n      checksum += data[i]\r\n      checksum = (checksum & 0xff) + (checksum >> 8)\r\n    }\r\n    checksum = 0xff - checksum\r\n  }\r\n\r\n  return checksum\r\n}\r\n\r\nexport function getFrameData(db: LDF, frame: Frame): Buffer {\r\n  const data = Buffer.alloc(frame.frameSize)\r\n  for (const signal of frame.signals) {\r\n    const signalDef = cloneDeep(db.signals[signal.name])\r\n    if (!signalDef) continue\r\n\r\n    if (signalDef.singleType === 'ByteArray') {\r\n      // Handle byte array type signals\r\n      const initValues = (\r\n        signalDef.value != undefined ? signalDef.value : signalDef.initValue\r\n      ) as number[]\r\n      const bytesToCopy = Math.ceil(signalDef.signalSizeBits / 8)\r\n      initValues.reverse()\r\n      for (let i = 0; i < bytesToCopy && i < initValues.length; i++) {\r\n        const startBit = signal.offset + i * 8\r\n        const byteOffset = Math.floor(startBit / 8)\r\n        const bitOffset = startBit % 8\r\n\r\n        if (bitOffset === 0) {\r\n          // Aligned byte\r\n          data[byteOffset] = initValues[i]\r\n        } else {\r\n          // Unaligned byte\r\n          data[byteOffset] |= (initValues[i] << bitOffset) & 0xff\r\n          if (byteOffset + 1 < data.length) {\r\n            data[byteOffset + 1] = (initValues[i] >> (8 - bitOffset)) & 0xff\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      // Handle scalar type signals - process bit by bit\r\n      const value = (signalDef.value != undefined ? signalDef.value : signalDef.initValue) as number\r\n      let tempValue = value\r\n\r\n      for (let i = 0; i < signalDef.signalSizeBits; i++) {\r\n        const targetBit = signal.offset + i\r\n        const byteOffset = Math.floor(targetBit / 8)\r\n        const bitOffset = targetBit % 8\r\n\r\n        if (byteOffset < data.length) {\r\n          // Clear bit\r\n          data[byteOffset] &= ~(1 << bitOffset)\r\n          // Set bit if needed\r\n          if ((tempValue & 1) === 1) {\r\n            data[byteOffset] |= 1 << bitOffset\r\n          }\r\n          tempValue >>= 1\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return data\r\n}\r\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"node:assert\");","import { Frame, LDF, SignalEncodeType } from '../ldfParse'\r\n\r\nexport function getPhysicalValue(\r\n  rawValue: number,\r\n  encodingTypes: SignalEncodeType['encodingTypes'],\r\n  db: LDF\r\n): { numVal?: number; strVal?: string; usedEncode?: SignalEncodeType['encodingTypes'][0] } {\r\n  // 遍历所有编码类型\r\n  const result: {\r\n    numVal?: number\r\n    strVal?: string\r\n    usedEncode?: SignalEncodeType['encodingTypes'][0]\r\n  } = {\r\n    numVal: undefined,\r\n    strVal: undefined,\r\n    usedEncode: undefined\r\n  }\r\n  for (const encodingType of encodingTypes) {\r\n    switch (encodingType.type) {\r\n      case 'physicalValue': {\r\n        if (encodingType.physicalValue) {\r\n          const { minValue, maxValue, scale, offset } = encodingType.physicalValue\r\n          if (rawValue >= minValue && rawValue <= maxValue) {\r\n            const physValue = Number((scale * rawValue + offset).toFixed(3))\r\n            const tt = encodingType.physicalValue.textInfo\r\n              ? `${physValue}${encodingType.physicalValue.textInfo}`\r\n              : undefined\r\n            result.numVal = physValue\r\n            result.strVal = tt\r\n            result.usedEncode = encodingType\r\n          }\r\n        }\r\n        break\r\n      }\r\n      case 'logicalValue': {\r\n        if (encodingType.logicalValue && encodingType.logicalValue.signalValue === rawValue) {\r\n          result.strVal = encodingType.logicalValue.textInfo || ''\r\n          result.usedEncode = encodingType\r\n        }\r\n        break\r\n      }\r\n      case 'bcdValue': {\r\n        // BCD编码：每4位表示一个十进制数字\r\n\r\n        ;(result.numVal = rawValue\r\n          .toString()\r\n          .split('')\r\n          .map(Number)\r\n          .reduce((acc, digit) => (acc << 4) | digit, 0)),\r\n          (result.usedEncode = encodingType)\r\n\r\n        break\r\n      }\r\n      case 'asciiValue': {\r\n        // ASCII编码：直接转换为字符串\r\n        result.strVal = rawValue.toString()\r\n        result.usedEncode = encodingType\r\n        break\r\n      }\r\n    }\r\n  }\r\n  // 如果没有找到匹配的编码，返回原始值\r\n  return result\r\n}\r\n\r\nexport function getRawValue(\r\n  physValue: number | string,\r\n  encodingTypes: SignalEncodeType['encodingTypes'],\r\n  db: LDF\r\n): { value?: number; usedEncode?: SignalEncodeType['encodingTypes'][0] } {\r\n  // 遍历所有编码类型\r\n  for (const encodingType of encodingTypes) {\r\n    switch (encodingType.type) {\r\n      case 'physicalValue': {\r\n        if (encodingType.physicalValue && !Number.isNaN(Number(physValue))) {\r\n          const { minValue, maxValue, scale, offset } = encodingType.physicalValue\r\n          // 反向计算：raw = (phys - offset) / scale\r\n          const rawValue = (Number(physValue) - offset) / scale\r\n          // 检查计算出的raw值是否在有效范围内\r\n          if (rawValue >= minValue && rawValue <= maxValue) {\r\n            return { value: Math.round(rawValue), usedEncode: encodingType }\r\n          }\r\n        }\r\n        break\r\n      }\r\n      case 'logicalValue': {\r\n        if (encodingType.logicalValue) {\r\n          // 如果是字符串，检查是否匹配文本信息\r\n          if (typeof physValue === 'string' && encodingType.logicalValue.textInfo === physValue) {\r\n            return { value: encodingType.logicalValue.signalValue, usedEncode: encodingType }\r\n          }\r\n          // 如果是数字，检查是否匹配信号值\r\n          if (\r\n            typeof physValue === 'number' &&\r\n            encodingType.logicalValue.signalValue === physValue\r\n          ) {\r\n            return { value: encodingType.logicalValue.signalValue, usedEncode: encodingType }\r\n          }\r\n        }\r\n        break\r\n      }\r\n      case 'bcdValue': {\r\n        // BCD编码反向转换：将数字转换为BCD格式\r\n\r\n        return { value: parseInt(Number(physValue).toString(16), 10), usedEncode: encodingType }\r\n\r\n        break\r\n      }\r\n      case 'asciiValue': {\r\n        // ASCII编码反向转换：将字符串转换为数字\r\n        if (typeof physValue === 'string') {\r\n          return { value: parseInt(physValue, 10), usedEncode: encodingType }\r\n        }\r\n        break\r\n      }\r\n    }\r\n  }\r\n  // 如果没有找到匹配的编码，返回undefined\r\n  return {}\r\n}\r\n\r\nexport function writeMessageData(frame: Frame, data: Buffer, db: LDF) {\r\n  for (const signal of frame.signals) {\r\n    // Find signal definition\r\n    const signalDef = db.signals[signal.name]\r\n    if (!signalDef) continue\r\n\r\n    // Calculate signal value from raw data\r\n    let value: number | string = 0\r\n    const startBit = signal.offset\r\n    const length = signalDef.signalSizeBits\r\n\r\n    if (signalDef.singleType === 'ByteArray') {\r\n      // Handle byte array type signals\r\n      const startByte = Math.floor(startBit / 8)\r\n      const byteLength = Math.ceil(length / 8)\r\n      const bitOffset = startBit % 8\r\n\r\n      if (bitOffset === 0) {\r\n        // 如果是字节对齐的情况\r\n        const tempBuffer = Buffer.alloc(8)\r\n        for (let i = 0; i < byteLength && startByte + i < data.length; i++) {\r\n          tempBuffer[i] = data[startByte + i]\r\n        }\r\n\r\n        if (length <= 8) {\r\n          value = tempBuffer[0]\r\n        } else if (length <= 16) {\r\n          value = tempBuffer.readUInt16BE(0)\r\n        } else if (length <= 24) {\r\n          value = (tempBuffer.readUInt16BE(0) << 8) | tempBuffer[2]\r\n        } else if (length <= 32) {\r\n          value = tempBuffer.readUInt32BE(0)\r\n        } else {\r\n          // 超过32位用16进制字符串表示\r\n          value = tempBuffer.subarray(0, byteLength).toString('hex')\r\n          signalDef.value = Array.prototype.slice.call(tempBuffer.subarray(0, byteLength), 0)\r\n        }\r\n      } else {\r\n        // 非字节对齐的情况\r\n        let tempBuffer = Buffer.alloc(8)\r\n        for (let i = 0; i < byteLength && startByte + i < data.length; i++) {\r\n          const currentByte = data[startByte + i]\r\n          const nextByte = startByte + i + 1 < data.length ? data[startByte + i + 1] : 0\r\n\r\n          // 组合当前字节和下一个字节的bits\r\n          tempBuffer[i] = ((currentByte >> bitOffset) | (nextByte << (8 - bitOffset))) & 0xff\r\n        }\r\n        //截断\r\n        tempBuffer = tempBuffer.subarray(0, byteLength)\r\n        //反转\r\n        tempBuffer = tempBuffer.reverse()\r\n        if (length <= 8) {\r\n          value = tempBuffer[0]\r\n        } else if (length <= 16) {\r\n          value = tempBuffer.readUInt16BE(0)\r\n        } else if (length <= 24) {\r\n          value = (tempBuffer.readUInt16BE(0) << 8) | tempBuffer[2]\r\n        } else if (length <= 32) {\r\n          value = tempBuffer.readUInt32BE(0)\r\n        } else {\r\n          // 超过32位用16进制字符串表示\r\n          value = tempBuffer.subarray(0, byteLength).toString('hex')\r\n          signalDef.value = Array.prototype.slice.call(tempBuffer.subarray(0, byteLength), 0)\r\n        }\r\n      }\r\n\r\n      // 对于数字类型，需要清除多余的位\r\n      if (typeof value === 'number') {\r\n        const mask = (1 << length) - 1\r\n        value &= mask\r\n        signalDef.value = value\r\n      }\r\n      signalDef.physValue = value\r\n    } else {\r\n      // Handle scalar type signals - process bit by bit\r\n      let tempValue = 0\r\n\r\n      for (let i = 0; i < length; i++) {\r\n        const targetBit = startBit + i\r\n        const byteOffset = Math.floor(targetBit / 8)\r\n        const bitOffset = targetBit % 8\r\n\r\n        if (byteOffset < data.length) {\r\n          // 获取对应位的值\r\n          if ((data[byteOffset] & (1 << bitOffset)) !== 0) {\r\n            tempValue |= 1 << i\r\n          }\r\n        }\r\n      }\r\n      signalDef.value = tempValue\r\n      signalDef.physValue = tempValue\r\n      //check enum\r\n      for (const encodeKey of Object.keys(db.signalRep)) {\r\n        if (db.signalRep[encodeKey].includes(signalDef.signalName)) {\r\n          const encodeInfo = db.signalEncodeTypes[encodeKey]\r\n          // 直接使用所有编码类型进行转换\r\n          const { numVal, strVal, usedEncode } = getPhysicalValue(\r\n            tempValue,\r\n            encodeInfo.encodingTypes,\r\n            db\r\n          )\r\n\r\n          if (usedEncode) {\r\n            signalDef.physValueEnum = strVal\r\n            if (numVal !== undefined) {\r\n              signalDef.physValue = numVal\r\n            }\r\n          }\r\n          break\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import type { DBC, Message, Signal } from './dbcVisitor'\r\n\r\n// Convert two's complement to signed value\r\nfunction fromTwosComplement(value: number, bits: number): number {\r\n  if (value & (1 << (bits - 1))) {\r\n    return -((~value + 1) & ((1 << bits) - 1))\r\n  }\r\n  return value\r\n}\r\n\r\n// Calculate max raw value based on signal length\r\nexport function getMaxRawValue(length: number): number {\r\n  return Math.pow(2, length) - 1\r\n}\r\n\r\n// Convert physical value to raw value\r\nfunction physToRaw(phys: number, row: Signal): number {\r\n  let rawValue = Math.round((phys - (row.offset || 0)) / (row.factor || 1))\r\n\r\n  // Get max value based on length\r\n  const maxRaw = getMaxRawValue(row.length)\r\n\r\n  if (row.isSigned) {\r\n    // For signed values, handle negative numbers with two's complement\r\n    if (rawValue < 0) {\r\n      rawValue = toTwosComplement(rawValue, row.length)\r\n    } else if (rawValue > maxRaw / 2) {\r\n      // Limit positive values to max signed value\r\n      rawValue = Math.floor(maxRaw / 2)\r\n    }\r\n  } else {\r\n    // For unsigned values, simply clamp between 0 and max\r\n    rawValue = Math.min(Math.max(rawValue, 0), maxRaw)\r\n  }\r\n\r\n  return rawValue\r\n}\r\n// Convert signed value to two's complement\r\nfunction toTwosComplement(value: number, bits: number): number {\r\n  if (value >= 0) return value\r\n  const mask = (1 << bits) - 1\r\n  return (~-value + 1) & mask\r\n}\r\n\r\n// Convert raw value to physical value\r\nexport function rawToPhys(raw: number, row: Signal): number {\r\n  let actualValue = raw\r\n\r\n  if (row.isSigned) {\r\n    // Only convert from two's complement if it's a signed value\r\n    const maxRaw = getMaxRawValue(row.length)\r\n    if (raw > maxRaw / 2) {\r\n      // If the value is in the negative range of two's complement\r\n      actualValue = fromTwosComplement(raw, row.length)\r\n    }\r\n  }\r\n\r\n  return actualValue * (row.factor || 1) + (row.offset || 0)\r\n}\r\n\r\nexport function updateSignalRaw(signal: Signal) {\r\n  if (signal.value === undefined) return\r\n  const maxRaw = getMaxRawValue(signal.length)\r\n  signal.value = Math.min(Math.max(0, signal.value), maxRaw)\r\n\r\n  if (signal.values || signal.valueTable) {\r\n    // For enum values, directly set the raw value as phys value\r\n    signal.physValue = signal.value\r\n  } else {\r\n    // Handle float value types\r\n    if (signal.valueType === 1) {\r\n      // IEEE Float (single precision)\r\n      // Create a buffer and view for the float value\r\n      const buffer = new ArrayBuffer(4)\r\n      const view = new DataView(buffer)\r\n      view.setUint32(0, signal.value, true) // true for little-endian\r\n      signal.physValue = view.getFloat32(0, true)\r\n    } else if (signal.valueType === 2) {\r\n      // IEEE Double (double precision)\r\n      const buffer = new ArrayBuffer(8)\r\n      const view = new DataView(buffer)\r\n      // For simplicity assuming the 64-bit value fits in 53 bits of JS number\r\n      view.setUint32(0, signal.value & 0xffffffff, true) // Lower 32 bits\r\n      view.setUint32(4, signal.value >> 32, true) // Upper 32 bits (might be 0 in JS)\r\n      signal.physValue = view.getFloat64(0, true)\r\n    } else {\r\n      // Calculate new physical value for regular integer signals\r\n      const newPhysValue = rawToPhys(signal.value!, signal)\r\n\r\n      // Check if this physical value would exceed limits\r\n      if (signal.minimum !== undefined && newPhysValue < signal.minimum) {\r\n        // Adjust raw value based on minimum physical value\r\n        signal.value = physToRaw(signal.minimum, signal)\r\n        signal.physValue = signal.minimum\r\n      } else if (signal.maximum !== undefined && newPhysValue > signal.maximum) {\r\n        // Adjust raw value based on maximum physical value\r\n        signal.value = physToRaw(signal.maximum, signal)\r\n        signal.physValue = signal.maximum\r\n      } else {\r\n        signal.physValue = newPhysValue\r\n      }\r\n    }\r\n  }\r\n}\r\nexport function updateSignalPhys(row: Signal) {\r\n  if (row.physValue === undefined) return\r\n\r\n  if (row.values || row.valueTable) {\r\n    // For enum values, directly set the phys value as raw value\r\n    row.value = typeof row.physValue === 'number' ? row.physValue : 0\r\n  } else {\r\n    const physValue = typeof row.physValue === 'number' ? row.physValue : 0\r\n    // Handle float value types\r\n    if (row.valueType === 1) {\r\n      // IEEE Float (single precision)\r\n      const buffer = new ArrayBuffer(4)\r\n      const view = new DataView(buffer)\r\n      view.setFloat32(0, physValue, row.isLittleEndian) // true for little-endian\r\n      row.value = view.getUint32(0, row.isLittleEndian)\r\n    } else if (row.valueType === 2) {\r\n      // IEEE Double (double precision)\r\n      const buffer = new ArrayBuffer(8)\r\n      const view = new DataView(buffer)\r\n      view.setFloat64(0, physValue, row.isLittleEndian)\r\n      // For simplicity, we're only using the lower 32 bits\r\n      // This is a limitation as JavaScript numbers can't fully represent 64-bit integers\r\n      row.value = view.getUint32(0, row.isLittleEndian)\r\n    } else {\r\n      // Clamp physical value to min/max if defined\r\n      let clampedPhysValue = physValue\r\n      if (row.minimum !== undefined && physValue < row.minimum) {\r\n        clampedPhysValue = row.minimum\r\n      } else if (row.maximum !== undefined && physValue > row.maximum) {\r\n        clampedPhysValue = row.maximum\r\n      }\r\n\r\n      // Update physical value if it was clamped\r\n      if (clampedPhysValue !== physValue) {\r\n        row.physValue = clampedPhysValue\r\n      }\r\n\r\n      // Calculate and set raw value\r\n      row.value = physToRaw(clampedPhysValue, row)\r\n    }\r\n  }\r\n}\r\n\r\nexport function writeMessageData(message: Message, data: Buffer, db: DBC) {\r\n  // 首先找到多路复用器信号(如果存在)并更新其值\r\n  let multiplexer: Signal | undefined\r\n  let multiplexerValue: number | undefined\r\n\r\n  Object.values(message.signals).forEach((signal) => {\r\n    if (signal.multiplexerIndicator === 'M') {\r\n      multiplexer = signal\r\n      readSignalFromBuffer(signal, data, db)\r\n      multiplexerValue = signal.value\r\n    }\r\n  })\r\n\r\n  // 更新所有信号的值\r\n  Object.values(message.signals).forEach((signal) => {\r\n    // 处理多路复用信号的逻辑\r\n    if (signal.multiplexerIndicator) {\r\n      // 跳过已处理的多路复用器信号\r\n      if (signal.multiplexerIndicator === 'M') {\r\n        return\r\n      }\r\n      // 如果是被多路复用的信号，需要检查条件\r\n      if (multiplexer && multiplexerValue !== undefined) {\r\n        if (signal.multiplexerRange) {\r\n          // 处理范围多路复用\r\n          const isInRange = signal.multiplexerRange.range.some((val) => val === multiplexerValue)\r\n          if (isInRange) {\r\n            readSignalFromBuffer(signal, data, db)\r\n          }\r\n        } else {\r\n          // 处理单值多路复用\r\n          const val = Number(signal.multiplexerIndicator.slice(1))\r\n          if (val === multiplexerValue) {\r\n            readSignalFromBuffer(signal, data, db)\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      // 非多路复用信号，直接处理\r\n      readSignalFromBuffer(signal, data, db)\r\n    }\r\n  })\r\n}\r\n\r\n// 从缓冲区读取信号值的辅助函数\r\nfunction readSignalFromBuffer(signal: Signal, data: Buffer, db: DBC) {\r\n  let rawValue = 0\r\n\r\n  if (signal.isLittleEndian) {\r\n    // Intel格式 (Little Endian)\r\n    let startByte = Math.floor(signal.startBit / 8)\r\n    let startBitInByte = signal.startBit % 8\r\n    let remainingBits = signal.length\r\n    let valueIndex = 0\r\n\r\n    while (remainingBits > 0 && startByte < data.length) {\r\n      const bitsInThisByte = Math.min(8 - startBitInByte, remainingBits)\r\n      const mask = (1 << bitsInThisByte) - 1\r\n      const value = (data[startByte] >> startBitInByte) & mask\r\n\r\n      rawValue |= value << valueIndex\r\n\r\n      remainingBits -= bitsInThisByte\r\n      valueIndex += bitsInThisByte\r\n      startByte += 1\r\n      startBitInByte = 0\r\n    }\r\n  } else {\r\n    // Motorola格式 (Big Endian) - 修改后的版本\r\n    let currentBit = signal.startBit // 从startBit开始，这是LSB的位置\r\n    let remainingBits = signal.length\r\n    let valueShift = 0 // 用于组装value的位偏移量\r\n\r\n    while (remainingBits > 0) {\r\n      const currentByte = Math.floor(currentBit / 8)\r\n      const bitInByte = currentBit % 8\r\n\r\n      if (currentByte < 0 || currentByte >= data.length) break\r\n\r\n      // 从buffer中提取当前bit\r\n      const bitValue = (data[currentByte] >> bitInByte) & 1\r\n\r\n      // 将bit添加到rawValue中\r\n      rawValue |= bitValue << valueShift\r\n\r\n      remainingBits--\r\n      valueShift++\r\n\r\n      // Motorola格式的bit遍历规则（与写入相同）\r\n      if (bitInByte === 7) {\r\n        // 当前在byte的最高位，跳转到前一个byte的最低位\r\n        currentBit -= 15 // 从bit 39跳转到bit 24\r\n      } else {\r\n        // 在byte内向高位移动\r\n        currentBit++\r\n      }\r\n    }\r\n  }\r\n\r\n  let physValue = rawValue\r\n\r\n  // 检查原始值是否合法\r\n  const maxValue = Math.pow(2, signal.length) - 1\r\n  if (rawValue > maxValue) {\r\n    return // 如果值超出信号长度允许的范围，不更新信号\r\n  }\r\n\r\n  // 对于枚举值，检查值是否在有效范围内\r\n  // if (signal.values) {\r\n  //   const validValues = Object.values(signal.values).map((v) => v.value)\r\n  //   if (!validValues.includes(rawValue)) {\r\n  //     return // 如果值不在枚举列表中，不更新信号\r\n  //   }\r\n  // } else if (signal.valueTable) {\r\n  //   // 如果有值表，检查值是否在值表范围内\r\n\r\n  //   const vt = Object.values(db.valueTables).find((vt) => vt.name === signal.valueTable)\r\n  //   if (vt) {\r\n  //     const validValues = vt.values.map((v) => v.value)\r\n  //     if (!validValues.includes(rawValue)) {\r\n  //       return // 如果值不在值表中，不更新信号\r\n  //     }\r\n  //   }\r\n  // } else\r\n\r\n  {\r\n    // 对于数值类型信号，检查是否在最小值和最大值范围内\r\n\r\n    if (signal.valueType == 1) {\r\n      //convert to IEEE Float\r\n      physValue = new Float32Array(new Uint32Array([physValue]).buffer)[0]\r\n    } else if (signal.valueType == 2) {\r\n      //convert to IEEE Double\r\n      physValue = new Float64Array(new Uint32Array([physValue]).buffer)[0]\r\n    } else if (signal.isSigned) {\r\n      // 检查最高位是否为1（负数）\r\n      const isNegative = (rawValue & (1 << (signal.length - 1))) !== 0\r\n      if (isNegative) {\r\n        // 转换为有符号值\r\n        const signBit = 1 << (signal.length - 1)\r\n        const valueMask = signBit - 1\r\n        physValue = -((~rawValue & valueMask) + 1)\r\n      }\r\n    }\r\n    // 计算物理值\r\n    physValue = physValue * (signal.factor || 1) + (signal.offset || 0)\r\n\r\n    // if (signal.minimum != signal.maximum) {\r\n    //   // 检查物理值是否在有效范围内\r\n    //   if (signal.minimum !== undefined && physValue < signal.minimum) {\r\n    //     console.log('physValue', physValue,signal.minimum,signal.attributes,signal.maximum)\r\n    //     return // 如果物理值小于最小值，不更新信号\r\n    //   }\r\n    //   if (signal.maximum !== undefined && physValue > signal.maximum) {\r\n    //     console.log('physValue', physValue,signal.minimum,signal.attributes,signal.maximum)\r\n    //     return // 如果物理值大于最大值，不更新信号\r\n    //   }\r\n    // }\r\n  }\r\n\r\n  // 所有检查都通过后，更新信号值\r\n  signal.value = rawValue\r\n\r\n  // 更新物理值\r\n  if (signal.values || signal.valueTable) {\r\n    signal.physValue = rawValue\r\n    if (signal.values) {\r\n      signal.physValueEnum = signal.values?.find((v) => v.value === signal.value)?.label\r\n    } else if (signal.valueTable) {\r\n      const vt = Object.values(db.valueTables).find((vt) => vt.name === signal.valueTable)\r\n      if (vt) {\r\n        signal.physValueEnum = vt.values?.find((v) => v.value === signal.value)?.label\r\n      }\r\n    }\r\n  } else {\r\n    // 应用因子和偏移计算物理值\r\n    signal.physValue = physValue\r\n  }\r\n}\r\n\r\nexport function getMessageData(message: Message): Buffer {\r\n  const data = Buffer.alloc(message.length)\r\n\r\n  // 首先找到多路复用器信号(如果存在)\r\n  let multiplexer: Signal | undefined\r\n  let multiplexerValue: number | undefined\r\n\r\n  Object.values(message.signals).forEach((signal) => {\r\n    if (signal.multiplexerIndicator === 'M') {\r\n      multiplexer = signal\r\n      multiplexerValue = signal.value\r\n    }\r\n  })\r\n\r\n  // 处理所有信号\r\n  Object.values(message.signals).forEach((signal) => {\r\n    // 跳过未定义值的信号\r\n    if (signal.value === undefined) return\r\n\r\n    // 处理多路复用信号的逻辑\r\n    if (signal.multiplexerIndicator) {\r\n      // 如果是多路复用器本身，正常处理\r\n      if (signal.multiplexerIndicator === 'M') {\r\n        writeSignalToBuffer(signal, data)\r\n      }\r\n      // 如果是被多路复用的信号，需要检查条件\r\n      else if (multiplexer && multiplexerValue !== undefined) {\r\n        if (signal.multiplexerRange) {\r\n          // 处理范围多路复用\r\n          const isInRange = signal.multiplexerRange.range.some((val) => val === multiplexerValue)\r\n          if (isInRange) {\r\n            writeSignalToBuffer(signal, data)\r\n          }\r\n        } else {\r\n          // 处理单值多路复用\r\n          const val = Number(signal.multiplexerIndicator.slice(1))\r\n          if (val === multiplexerValue) {\r\n            writeSignalToBuffer(signal, data)\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      // 非多路复用信号，直接处理\r\n      writeSignalToBuffer(signal, data)\r\n    }\r\n  })\r\n\r\n  return data\r\n}\r\n\r\n// 将信号写入缓冲区的辅助函数\r\nfunction writeSignalToBuffer(signal: Signal, data: Buffer) {\r\n  let rawValue = signal.value\r\n  if (rawValue === undefined) return\r\n\r\n  const maxValue = Math.pow(2, signal.length) - 1\r\n  rawValue = Math.min(rawValue, maxValue)\r\n\r\n  if (signal.isLittleEndian) {\r\n    // Intel格式 (Little Endian)\r\n    let startByte = Math.floor(signal.startBit / 8)\r\n    let startBitInByte = signal.startBit % 8\r\n    let remainingBits = signal.length\r\n    let valueIndex = 0\r\n\r\n    while (remainingBits > 0) {\r\n      if (startByte >= data.length) break\r\n\r\n      const bitsInThisByte = Math.min(8 - startBitInByte, remainingBits)\r\n      const mask = (1 << bitsInThisByte) - 1\r\n      const value = (rawValue >> valueIndex) & mask\r\n\r\n      data[startByte] &= ~(mask << startBitInByte)\r\n      data[startByte] |= value << startBitInByte\r\n\r\n      remainingBits -= bitsInThisByte\r\n      valueIndex += bitsInThisByte\r\n      startByte += 1\r\n      startBitInByte = 0\r\n    }\r\n  } else {\r\n    // Motorola格式 (Big Endian) - 根据实际测试数据修正\r\n    let currentBit = signal.startBit // 从startBit开始，这是LSB的位置\r\n    let remainingBits = signal.length\r\n    let valueShift = 0 // 用于从value中提取bit的偏移量\r\n\r\n    while (remainingBits > 0) {\r\n      const currentByte = Math.floor(currentBit / 8)\r\n      const bitInByte = currentBit % 8\r\n\r\n      if (currentByte < 0 || currentByte >= data.length) break\r\n\r\n      // 从value中提取当前bit\r\n      const bitValue = (rawValue >> valueShift) & 1\r\n\r\n      // 清除目标bit并设置新值\r\n      const bitMask = 1 << bitInByte\r\n      data[currentByte] &= ~bitMask\r\n      if (bitValue) {\r\n        data[currentByte] |= bitMask\r\n      }\r\n\r\n      remainingBits--\r\n      valueShift++\r\n\r\n      // Motorola格式的bit遍历规则\r\n      if (bitInByte === 7) {\r\n        // 当前在byte的最高位，跳转到前一个byte的最低位\r\n        currentBit -= 15 // 从bit 39跳转到bit 24\r\n      } else {\r\n        // 在byte内向高位移动\r\n        currentBit++\r\n      }\r\n    }\r\n  }\r\n}\r\n","import path from 'path'\r\nimport type { Signal } from 'src/renderer/src/database/dbc/dbcVisitor'\r\nimport { updateSignalPhys, updateSignalRaw } from 'src/renderer/src/database/dbc/calc'\r\nimport type { LDF } from 'src/renderer/src/database/ldfParse'\r\nimport { isEqual } from 'lodash'\r\n\r\nexport function updateLinSignalVal(db: LDF, signalName: string, value: number | number[] | string) {\r\n  const signal = db.signals[signalName]\r\n  if (signal) {\r\n    //compare value\r\n    const lastValue = signal.value != undefined ? signal.value : signal.initValue\r\n    if (!isEqual(lastValue, value)) {\r\n      signal.update = true\r\n    }\r\n    if (typeof value === 'string') {\r\n      //find in encode\r\n      //TODO:\r\n    } else {\r\n      signal.value = value\r\n    }\r\n  }\r\n}\r\n\r\nexport function getJsPath(tsPath: string, projectPath: string) {\r\n  const outDir = path.join(projectPath, '.ScriptBuild')\r\n  const scriptNameNoExt = path.basename(tsPath, '.ts')\r\n  const jsPath = path.join(outDir, scriptNameNoExt + '.js')\r\n  return jsPath\r\n}\r\n\r\nexport function setSignal(data: { signal: string; value: number | number[] | string }) {\r\n  const s = data.signal.split('.')\r\n  // 验证数据库是否存在\r\n  const db = Object.values(global.dataSet.database.can).find((db) => db.name == s[0])\r\n  if (db) {\r\n    const signalName = s[1]\r\n    let ss: Signal | undefined\r\n    for (const msg of Object.values(db.messages)) {\r\n      for (const signal of Object.values(msg.signals)) {\r\n        if (signal.name == signalName) {\r\n          ss = signal\r\n          break\r\n        }\r\n      }\r\n      if (ss) {\r\n        break\r\n      }\r\n    }\r\n    if (!ss) {\r\n      throw new Error(`Signal ${signalName} not found`)\r\n    }\r\n    if (typeof data.value === 'string') {\r\n      updateSignalPhys(ss)\r\n    } else {\r\n      if (Array.isArray(data.value)) {\r\n        throw new Error('Can not set array value')\r\n      }\r\n      ss.value = data.value\r\n      updateSignalRaw(ss)\r\n    }\r\n  } else {\r\n    const linDb = Object.values(global.dataSet.database.lin).find((db) => db.name == s[0])\r\n    if (linDb) {\r\n      const signalName = s[1]\r\n\r\n      const signal = linDb.signals[signalName]\r\n      if (!signal) {\r\n        throw new Error(`Signal ${signalName} not found`)\r\n      }\r\n      // 更新信号值\r\n      updateLinSignalVal(linDb, signalName, data.value)\r\n    }\r\n  }\r\n}\r\n","import precisionTimer from './build/Release/precision_timer.node'\r\n\r\n/**\r\n * Timer task information interface\r\n *\r\n * @category Util\r\n */\r\nexport interface TimerTask {\r\n  /** Task ID */\r\n  taskId: number\r\n  /** Trigger time in microseconds */\r\n  triggerTime: number\r\n}\r\n\r\n/**\r\n * High-precision timer class providing microsecond-level timing functionality.\r\n * This class wraps native precision timer functionality for accurate task scheduling.\r\n *\r\n * @category Util\r\n *\r\n * @example\r\n * 1. *Basic single-shot timer*\r\n *     ```ts\r\n *     const timer = new PrecisionTimer('my-timer')\r\n *     timer.create()\r\n *\r\n *     // Add a task that runs once after 1000000 microseconds (1 second)\r\n *     const taskId = timer.addTask(1000000, 0, () => {\r\n *       console.log('Timer fired after 1 second!')\r\n *     })\r\n *     ```\r\n *\r\n * 2. *Recurring timer*\r\n *     ```ts\r\n *     // Add a task that runs every 500000 microseconds (500ms)\r\n *     const taskId = timer.addTask(500000, 500000, () => {\r\n *       console.log('This runs every 500ms')\r\n *     })\r\n *\r\n *     // Later, cancel the recurring task\r\n *     timer.cancelTask(taskId)\r\n *     ```\r\n *\r\n * 3. *High-precision timing measurement*\r\n *     ```ts\r\n *     // Get current high-precision timestamp\r\n *     const startTime = PrecisionTimer.getCurrentTimestamp()\r\n *\r\n *     // Add a task with microsecond precision (100 microseconds delay)\r\n *     timer.addTask(100, 0, () => {\r\n *       const endTime = PrecisionTimer.getCurrentTimestamp()\r\n *       console.log(`Elapsed: ${endTime - startTime} microseconds`)\r\n *     })\r\n *     ```\r\n */\r\nexport class PrecisionTimer {\r\n  private timerName: string\r\n\r\n  private isCreated: boolean = false\r\n  private timerMap: Map<number, () => void> = new Map()\r\n\r\n  /**\r\n   * Creates a new PrecisionTimer instance\r\n   * @param name - Unique name identifier for this timer instance\r\n   */\r\n  constructor(name: string) {\r\n    this.timerName = name\r\n  }\r\n\r\n  /**\r\n   * Internal callback handler for timer tasks\r\n   * @param task - Timer task information containing taskId and triggerTime\r\n   * @internal\r\n   */\r\n  callCallback(tasks: TimerTask[]) {\r\n    console.log(tasks.length)\r\n    for (const task of tasks) {\r\n      const callback = this.timerMap.get(task.taskId)\r\n      if (callback) {\r\n        try {\r\n          callback()\r\n        } catch (error) {\r\n          null\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates and initializes the precision timer.\r\n   * Must be called before adding any tasks.\r\n   *\r\n   * @throws {Error} If timer creation fails\r\n   */\r\n  create() {\r\n    if (this.isCreated) {\r\n      return\r\n    }\r\n\r\n    precisionTimer.createPrecisionTimer(this.timerName, this.callCallback.bind(this))\r\n    this.isCreated = true\r\n  }\r\n\r\n  /**\r\n   * Adds a new timer task with microsecond precision.\r\n   *\r\n   * @param delayMicrosec - Initial delay before first execution in microseconds\r\n   * @param intervalMicrosec - Interval between recurring executions in microseconds (0 for single execution)\r\n   * @param callback - Function to execute when timer fires\r\n   * @returns Task ID that can be used to cancel the task\r\n   * @throws {Error} If timer is not created\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * // Single execution after 1 second\r\n   * const taskId = timer.addTask(1000000, 0, () => console.log('Done!'))\r\n   *\r\n   * // Recurring execution every 500ms\r\n   * const intervalId = timer.addTask(500000, 500000, () => console.log('Tick'))\r\n   * ```\r\n   */\r\n  addTask(delayMicrosec: number, intervalMicrosec: number = 0, callback: () => void): number {\r\n    if (!this.isCreated) {\r\n      throw new Error('Timer not created')\r\n    }\r\n\r\n    const id = precisionTimer.addTimerTask(this.timerName, delayMicrosec, intervalMicrosec)\r\n\r\n    this.timerMap.set(id, callback)\r\n\r\n    return id\r\n  }\r\n\r\n  /**\r\n   * Cancels a previously scheduled timer task.\r\n   *\r\n   * @param taskId - The task ID returned by addTask()\r\n   * @returns True if task was successfully cancelled, false if task was not found\r\n   * @throws {Error} If timer is not created\r\n   */\r\n  cancelTask(taskId: number): boolean {\r\n    if (!this.isCreated) {\r\n      throw new Error('Timer not created')\r\n    }\r\n\r\n    return precisionTimer.cancelTimerTask(this.timerName, taskId)\r\n  }\r\n\r\n  /**\r\n   * Destroys the timer and cancels all pending tasks.\r\n   * After calling this method, the timer cannot be used until create() is called again.\r\n   *\r\n   * @note\r\n   * must call this method before the process exits,\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * Util.End(()=>{\r\n   *   timer.destroy()\r\n   * })\r\n   * ```\r\n   *\r\n   */\r\n  destroy(): void {\r\n    if (!this.isCreated) {\r\n      return\r\n    }\r\n\r\n    precisionTimer.destroyPrecisionTimer(this.timerName)\r\n    this.isCreated = false\r\n  }\r\n}\r\n\r\n/**\r\n * Default export containing all timer-related classes and interfaces\r\n *\r\n * @category Util\r\n */\r\nexport default {\r\n  PrecisionTimer\r\n}\r\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"node:test\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"node:worker_threads\");","/**\r\n * vSomeIP Configuration Interfaces\r\n *\r\n * This module contains comprehensive TypeScript interfaces for vSomeIP 3.5.5 configuration.\r\n * The main interface is split into multiple sub-interfaces for better organization and maintainability.\r\n *\r\n * @see {@link https://github.com/GENIVI/vsomeip/wiki/vsomeip-in-10-minutes#configuration}\r\n */\r\n\r\n// Import all sub-interfaces\r\nimport type {\r\n  GlobalPayloadConfig,\r\n  GlobalQueueConfig,\r\n  TcpRestartConfig,\r\n  FilePermissionsConfig\r\n} from './payload-config'\r\n\r\nimport type { SecurityConfig } from './security-config'\r\n\r\nimport type { ServiceDiscoveryConfig, TracingConfig } from './service-discovery-config'\r\n\r\nimport type { ServiceConfig, InternalServiceConfig, ClientConfig } from './service-config'\r\n\r\nimport type {\r\n  WatchdogConfig,\r\n  LocalClientsKeepaliveConfig,\r\n  SelectiveBroadcastsConfig,\r\n  E2EConfig,\r\n  DebounceConfig,\r\n  AcceptanceConfig,\r\n  SecureServiceConfig,\r\n  PartitionConfig,\r\n  SuppressMissingEventLogConfig,\r\n  NpduDefaultTimingsConfig\r\n} from './other-config'\r\n\r\n/**\r\n * Logging configuration for vSomeIP\r\n * Used to configure the log messages of vSomeIP\r\n */\r\nexport interface LoggingConfig {\r\n  /**\r\n   * Specifies whether logging via console is enabled\r\n   * @default true\r\n   */\r\n  console?: boolean\r\n\r\n  /**\r\n   * File logging configuration\r\n   */\r\n  file?: {\r\n    /**\r\n     * Specifies whether a log file should be created\r\n     * @default false\r\n     */\r\n    enable?: boolean\r\n\r\n    /**\r\n     * The absolute path of the log file\r\n     * @default \"/tmp/vsomeip.log\"\r\n     */\r\n    path?: string\r\n  }\r\n\r\n  /**\r\n   * Specifies whether Diagnostic Log and Trace (DLT) is enabled\r\n   * @default false\r\n   */\r\n  dlt?: boolean\r\n\r\n  /**\r\n   * Specifies the log level\r\n   * @default \"info\"\r\n   */\r\n  level?: 'trace' | 'debug' | 'info' | 'warning' | 'error' | 'fatal'\r\n\r\n  /**\r\n   * Configures logging of the vsomeip version\r\n   */\r\n  version?: {\r\n    /**\r\n     * Enable or disable cyclic logging of vsomeip version\r\n     * @default true\r\n     */\r\n    enable?: boolean\r\n\r\n    /**\r\n     * Configures interval in seconds to log the vsomeip version\r\n     * @default 10\r\n     */\r\n    interval?: number\r\n  }\r\n\r\n  /**\r\n   * Configures interval in seconds in which the routing manager logs its used memory.\r\n   * Setting a value greater than zero enables the logging.\r\n   * @default 0\r\n   */\r\n  memory_log_interval?: number\r\n\r\n  /**\r\n   * Configures interval in seconds in which the routing manager logs its internal status.\r\n   * Setting a value greater than zero enables the logging.\r\n   * @default 0\r\n   */\r\n  status_log_interval?: number\r\n\r\n  /**\r\n   * Statistics logging configuration\r\n   */\r\n  statistics?: {\r\n    /**\r\n     * How often to report statistics data (received messages/events) in ms.\r\n     * The minimum possible interval is 1000, for configured values below, 1000 will be used.\r\n     * @default 10000\r\n     */\r\n    interval?: number\r\n\r\n    /**\r\n     * Minimum frequency of reported events\r\n     * @default 50\r\n     */\r\n    'min-frequency'?: number\r\n\r\n    /**\r\n     * Maximum number of different messages that are reported\r\n     * @default 50\r\n     */\r\n    'max-messages'?: number\r\n  }\r\n}\r\n\r\n/**\r\n * Routing host configuration\r\n */\r\nexport interface RoutingHost {\r\n  /**\r\n   * Name of the application that hosts the routing component\r\n   */\r\n  name: string\r\n\r\n  /**\r\n   * User identifier of the process that runs the routing component.\r\n   * Must be specified if credential checks are enabled by check_credentials set to true.\r\n   */\r\n  uid?: number\r\n\r\n  /**\r\n   * Group identifier of the process that runs the routing component.\r\n   * Must be specified if credential checks are enabled by check_credentials set to true.\r\n   */\r\n  gid?: number\r\n\r\n  /**\r\n   * The unicast address that shall be used by the routing manager,\r\n   * if the internal communication shall be done by using TCP connections.\r\n   */\r\n  unicast?: string\r\n\r\n  /**\r\n   * The port that shall be used by the routing manager,\r\n   * if the internal communication shall be done by using TCP connections.\r\n   */\r\n  port?: number\r\n}\r\n\r\n/**\r\n * Routing guest configuration\r\n */\r\nexport interface RoutingGuest {\r\n  /**\r\n   * The unicast address that shall be used by the applications to connect to the routing manager.\r\n   * If not set, the unicast address of the host entry is used.\r\n   */\r\n  unicast?: string\r\n\r\n  /**\r\n   * A set of port ranges that shall be used to connect to the routing manager per user identifier/group identifier.\r\n   * Either specify uid, gid and ranges, or only a set of port ranges.\r\n   * If uid and gid are not explicitly specified, they default to any.\r\n   * Each client application requires two ports, one for receiving messages from other applications\r\n   * and one to send messages to other applications.\r\n   */\r\n  ports?: Array<{\r\n    /**\r\n     * User identifier\r\n     */\r\n    uid?: number\r\n\r\n    /**\r\n     * Group identifier\r\n     */\r\n    gid?: number\r\n\r\n    /**\r\n     * Set of port ranges. Each entry consists of a first, last pair that determines\r\n     * the first and the last port of a port range.\r\n     */\r\n    ranges?: Array<{\r\n      /**\r\n       * First port of a port range\r\n       */\r\n      first: number\r\n\r\n      /**\r\n       * Last port of a port range\r\n       */\r\n      last: number\r\n    }>\r\n\r\n    /**\r\n     * First port of a port range (legacy format)\r\n     */\r\n    first?: number\r\n\r\n    /**\r\n     * Last port of a port range (legacy format)\r\n     */\r\n    last?: number\r\n  }>\r\n}\r\n\r\n/**\r\n * Routing configuration\r\n * Specifies the properties of the routing. Either a string that specifies the application\r\n * that hosts the routing component or a structure that specifies all properties of the routing.\r\n * If the routing is not specified, the first started application will host the routing component.\r\n */\r\nexport interface RoutingConfig {\r\n  /**\r\n   * Properties of the routing manager\r\n   */\r\n  host?: RoutingHost\r\n\r\n  /**\r\n   * Properties of all applications that do not host the routing component,\r\n   * if the internal communication shall be done using TCP connections.\r\n   */\r\n  guests?: RoutingGuest\r\n}\r\n\r\n/**\r\n * The UID / GID of the application acting as routing manager.\r\n * @deprecated Use routing.host.uid and routing.host.gid instead\r\n * Must be specified if credentials checks are enabled using check_credentials set to true\r\n * in order to successfully check the routing managers credentials passed on connect\r\n */\r\nexport interface RoutingCredentials {\r\n  /**\r\n   * The routing managers UID\r\n   */\r\n  uid: number\r\n\r\n  /**\r\n   * The routing managers GID\r\n   */\r\n  gid: number\r\n}\r\n\r\n/**\r\n * Application plugin configuration\r\n */\r\nexport interface ApplicationPlugin {\r\n  /**\r\n   * The name of the plug-in\r\n   */\r\n  name: string\r\n\r\n  /**\r\n   * The plug-in type. An application plug-in extends the functionality on application level.\r\n   * It gets informed by vsomeip over the basic application states (INIT/START/STOP) and can,\r\n   * based on these notifications, access the standard \"application\"-API via the runtime.\r\n   */\r\n  type: 'application_plugin'\r\n\r\n  /**\r\n   * Generic way to define configuration data for plugins\r\n   */\r\n  additional?: Record<string, any>\r\n}\r\n\r\n/**\r\n * Application configuration\r\n */\r\nexport interface ApplicationConfig {\r\n  /**\r\n   * The id of the application. Usually its high byte is equal to the diagnosis address.\r\n   * In this case the low byte must be different from zero. Thus, if the diagnosis address is 0x63,\r\n   * valid values range from 0x6301 until 0x63FF. It is also possible to use id values with\r\n   * a high byte different from the diagnosis address.\r\n   */\r\n  id: string\r\n\r\n  /**\r\n   * The maximum number of threads that shall be used to execute the application callbacks\r\n   * @default 10\r\n   */\r\n  max_dispatchers?: number\r\n\r\n  /**\r\n   * The maximum time in ms that an application callback may consume before the callback\r\n   * is considered to be blocked (and an additional thread is used to execute pending callbacks\r\n   * if max_dispatchers is configured greater than 0)\r\n   * @default 100\r\n   */\r\n  max_dispatch_time?: number\r\n\r\n  /**\r\n   * The maximum time in seconds that an application will wait for a detached dispatcher\r\n   * thread to finish executing\r\n   * @default 5\r\n   */\r\n  max_detached_thread_wait_time?: number\r\n\r\n  /**\r\n   * The number of internal threads to process messages and events within an application.\r\n   * Valid values are 1-255\r\n   * @default 2\r\n   */\r\n  threads?: number\r\n\r\n  /**\r\n   * The nice level for internal threads processing messages and events. POSIX/Linux only.\r\n   * For actual values refer to nice() documentation\r\n   * @default 0\r\n   */\r\n  io_thread_nice?: number\r\n\r\n  /**\r\n   * Specifies a debounce-time interval in ms in which request-service messages are sent\r\n   * to the routing manager. If an application requests many services in short same time\r\n   * the load of sent messages to the routing manager and furthermore the replies from\r\n   * the routing manager (which contains the routing info for the requested service if available)\r\n   * can be heavily reduced\r\n   */\r\n  request_debounce_time?: number\r\n\r\n  /**\r\n   * Contains the plug-ins that should be loaded to extend the functionality of vsomeip\r\n   */\r\n  plugins?: ApplicationPlugin[]\r\n\r\n  /**\r\n   * Client/Application specific configuration of debouncing\r\n   */\r\n  debounce?: any\r\n\r\n  /**\r\n   * Configures the session handling. Mostly used for E2E use cases when the application\r\n   * handles the CRC calculation over the SOME/IP header by themself, and need the ability\r\n   * to switch off the session handling as otherwise their calculated checksum does not\r\n   * match reality after vsomeip inserts the session identifier\r\n   * @default true\r\n   */\r\n  has_session_handling?: boolean\r\n\r\n  /**\r\n   * If set to a positive value, it enables the io_context object's event processing\r\n   * run_for implementation to run the loop based on duration instead of running it\r\n   * until the work queue has work to be done\r\n   * @default 0\r\n   */\r\n  event_loop_periodicity?: number\r\n}\r\n\r\n/**\r\n * Network configuration\r\n */\r\nexport interface NetworkConfig {\r\n  /**\r\n   * Network identifier used to support multiple routing managers on one host.\r\n   * This setting changes the name of the unix domain sockets in /tmp/.\r\n   * @default \"vsomeip\"\r\n   */\r\n  network?: string\r\n\r\n  /**\r\n   * The diagnosis address (byte) that will be used to build client identifiers.\r\n   * The diagnosis address is assigned to the most significant byte in all client identifiers\r\n   * if not specified otherwise (for example through a predefined client ID)\r\n   * @default 0x01\r\n   */\r\n  diagnosis?: string\r\n\r\n  /**\r\n   * The diagnosis mask (2 byte) is used to control the maximum amount of allowed\r\n   * concurrent vsomeip clients on an ECU and the start value of the client IDs.\r\n   * @default 0xFF00\r\n   */\r\n  diagnosis_mask?: string\r\n\r\n  /**\r\n   * The IP address of the host system\r\n   */\r\n  unicast?: string\r\n\r\n  /**\r\n   * The netmask to specify the subnet of the host system\r\n   */\r\n  netmask?: string\r\n\r\n  /**\r\n   * If specified, IP endpoints will be bound to this device\r\n   */\r\n  device?: string\r\n}\r\n\r\n/**\r\n * Dispatching configuration\r\n * Define default settings for the maximum number of (additional) dispatchers\r\n * and the maximum dispatch time. These default values are overwritten by\r\n * application specific definitions.\r\n */\r\nexport interface DispatchingConfig {\r\n  /**\r\n   * The maximum number of threads that shall be used to execute the application callbacks\r\n   * @default 10\r\n   */\r\n  max_dispatchers?: number\r\n\r\n  /**\r\n   * The maximum time in ms that an application callback may consume before the callback\r\n   * is considered to be blocked (and an additional thread is used to execute pending\r\n   * callbacks if max_dispatchers is configured greater than 0)\r\n   * @default 100\r\n   */\r\n  max_dispatch_time?: number\r\n}\r\n\r\n/**\r\n * Main vSomeIP Configuration Interface\r\n *\r\n * This interface represents the complete configuration structure for vSomeIP 3.5.5.\r\n * It combines all sub-interfaces to provide a comprehensive type-safe configuration.\r\n *\r\n * @see {@link https://github.com/GENIVI/vsomeip/wiki/vsomeip-in-10-minutes#configuration}\r\n */\r\nexport interface SomeipConfig\r\n  extends GlobalPayloadConfig,\r\n    GlobalQueueConfig,\r\n    TcpRestartConfig,\r\n    FilePermissionsConfig {\r\n  /**\r\n   * Logging configuration for vSomeIP\r\n   * Used to configure the log messages of vSomeIP\r\n   */\r\n  logging?: LoggingConfig\r\n\r\n  /**\r\n   * Routing configuration\r\n   * Specifies the properties of the routing. Either a string that specifies the application\r\n   * that hosts the routing component or a structure that specifies all properties of the routing.\r\n   * If the routing is not specified, the first started application will host the routing component.\r\n   */\r\n  routing?: string | RoutingConfig\r\n\r\n  /**\r\n   * The UID / GID of the application acting as routing manager.\r\n   * @deprecated Use routing.host.uid and routing.host.gid instead\r\n   * Must be specified if credentials checks are enabled using check_credentials set to true\r\n   * in order to successfully check the routing managers credentials passed on connect\r\n   */\r\n  'routing-credentials'?: RoutingCredentials\r\n\r\n  /**\r\n   * Contains the applications of the host system that use this config file\r\n   */\r\n  applications?: ApplicationConfig[]\r\n\r\n  /**\r\n   * Network configuration\r\n   */\r\n  network?: NetworkConfig\r\n\r\n  /**\r\n   * Configures the time in milliseconds local clients wait for acknowledgement\r\n   * of their deregistration from the routing manager during shutdown\r\n   * @default 5000\r\n   */\r\n  shutdown_timeout?: number\r\n\r\n  /**\r\n   * Define default settings for the maximum number of (additional) dispatchers\r\n   * and the maximum dispatch time. These default values are overwritten by\r\n   * application specific definitions.\r\n   */\r\n  dispatching?: DispatchingConfig\r\n\r\n  /**\r\n   * Security configuration based on UNIX credentials.\r\n   * If activated every local connection is authenticated during connect using\r\n   * the standard UNIX credential passing mechanism.\r\n   */\r\n  security?: SecurityConfig\r\n\r\n  /**\r\n   * Tracing configuration for the Trace Connector\r\n   * Used to forward the internal messages that are sent over the Unix Domain Sockets (UDS) to DLT.\r\n   */\r\n  tracing?: TracingConfig\r\n\r\n  /**\r\n   * Specifies the size of the socket receive buffer (SO_RCVBUF) used for UDP client\r\n   * and server endpoints in bytes. Requires CAP_NET_ADMIN to be successful.\r\n   * @default 1703936\r\n   */\r\n  'udp-receive-buffer-size'?: number\r\n\r\n  /**\r\n   * Contains settings related to the Service Discovery of the host application\r\n   */\r\n  'service-discovery'?: ServiceDiscoveryConfig\r\n\r\n  /**\r\n   * Global nPDU default timings configuration\r\n   * The nPDU feature can be used to reduce network load as it enables the vsomeip stack\r\n   * to combine multiple vsomeip messages in one single ethernet frame.\r\n   */\r\n  'npdu-default-timings'?: NpduDefaultTimingsConfig\r\n\r\n  /**\r\n   * Contains the services of the service provider\r\n   */\r\n  services?: ServiceConfig[]\r\n\r\n  /**\r\n   * Specifies service/instance ranges for pure internal service-instances.\r\n   * This information is used by vsomeip to avoid sending Find-Service messages\r\n   * via the Service-Discovery when a client is requesting a not available service-instance.\r\n   * Its can either be done on service/instance level or on service level only which\r\n   * then includes all instance from 0x0000-0xffff.\r\n   */\r\n  internal_services?: InternalServiceConfig[]\r\n\r\n  /**\r\n   * The client-side ports that shall be used to connect to a specific service.\r\n   * For each service, an array of ports to be used for reliable/unreliable communication\r\n   * can be specified. vsomeip will take the first free port of the list. If no free port\r\n   * can be found, the connection will fail. If vsomeip is asked to connect to a service\r\n   * instance without specified port(s), the port will be selected by the system. This\r\n   * implies that the user has to ensure that the ports configured here do not overlap\r\n   * with the ports automatically selected by the IP stack.\r\n   */\r\n  clients?: ClientConfig[]\r\n\r\n  /**\r\n   * The Watchdog sends periodically pings to all known local clients. If a client\r\n   * isn't responding within a configured time/amount of pongs the watchdog deregisters\r\n   * this application/client. If not configured the watchdog isn't activated.\r\n   */\r\n  watchdog?: WatchdogConfig\r\n\r\n  /**\r\n   * The Local Clients Keepalive option activates the sending of periodic ping messages\r\n   * from the routing manager clients to the routing host. The routing manager host shall\r\n   * reply to the ping with a pong. The idea is to have a simpler alternetive to the\r\n   * TCP_KEEPALIVE, particularly for systems where this option can not be configured.\r\n   */\r\n  'local-clients-keepalive'?: LocalClientsKeepaliveConfig\r\n\r\n  /**\r\n   * This nodes allow to add a list of IP addresses on which CAPI-Selective-Broadcasts\r\n   * feature is supported. If not specified the feature can't be used and the subscription\r\n   * behavior of the stack is same as with normal events.\r\n   */\r\n  supports_selective_broadcasts?: SelectiveBroadcastsConfig[]\r\n\r\n  /**\r\n   * Used to configure the E2E protection for the specified events\r\n   */\r\n  e2e?: E2EConfig\r\n\r\n  /**\r\n   * Events/fields sent by external devices will be forwarded to the applications\r\n   * only if a configurable function evaluates to true. The function checks whether\r\n   * the event/field payload has changed and whether a specified interval has been\r\n   * elapsed since the last forwarding.\r\n   */\r\n  debounce?: DebounceConfig[]\r\n\r\n  /**\r\n   * Service requests done by an application can be debounced to be more efficient\r\n   * if many services are requested simultaneously (e.g. at startup). This configuration\r\n   * variable specified the maximum request debounce time in milliseconds.\r\n   * @default 10\r\n   */\r\n  request_debounce_time?: number\r\n\r\n  /**\r\n   * Can be used to modify the assignment of ports to the unsecure, optional and secure ranges.\r\n   */\r\n  acceptances?: AcceptanceConfig[]\r\n\r\n  /**\r\n   * List of service instances that are only accepted, if being offered on a secure port.\r\n   */\r\n  'secure-services'?: SecureServiceConfig[]\r\n\r\n  /**\r\n   * Allows to group service instances that are offered on the same port into partitions.\r\n   * For each partition, a separate client port will be used. The goal is to enable faster\r\n   * processing of specific events if a single server port is used to offer many services\r\n   * that send many messages, especially at startup.\r\n   */\r\n  partitions?: PartitionConfig[][]\r\n\r\n  /**\r\n   * Used to filter the log message \"deliver_notification: Event [1234.5678.80f3]\r\n   * is not registered. The message is dropped.\" that occurs whenever vSomeIP\r\n   * receives an event without having a corresponding object being registered.\r\n   */\r\n  suppress_missing_event_logs?: SuppressMissingEventLogConfig[]\r\n}\r\n\r\nexport interface SomeipInfo {\r\n  id: string\r\n  name: string\r\n  services: ServiceConfig[]\r\n  device: string\r\n  application: ApplicationConfig\r\n  serviceDiscovery: ServiceDiscoveryConfig\r\n}\r\n\r\nexport enum SomeipMessageType {\r\n  REQUEST = 0,\r\n  REQUEST_NO_RETURN = 1,\r\n  NOTIFICATION = 2,\r\n  RESPONSE = 0x80,\r\n  REQUEST_ACK = 0x40,\r\n  NOTIFICATION_ACK = 0x42,\r\n  ERROR = 0x81,\r\n  RESPONSE_ACK = 0xc0,\r\n  ERROR_ACK = 0xc1,\r\n  UNKNOWN = 255\r\n}\r\n\r\nexport interface SomeipMessage {\r\n  uuid?: string\r\n  service: number\r\n  instance: number\r\n  method: number\r\n  client: number\r\n  session: number\r\n  payload: Buffer\r\n  messageType: SomeipMessageType\r\n  returnCode: number\r\n  protocolVersion: number\r\n  interfaceVersion: number\r\n  ts: number\r\n  reliable?: boolean\r\n  sending: boolean\r\n  protocol?: string\r\n  ip?: string\r\n  port?: number\r\n  database?: string\r\n  device?: string\r\n}\r\n\r\nexport interface VsomeipAvailabilityInfo {\r\n  service: number\r\n  instance: number\r\n  available: boolean\r\n}\r\n\r\nexport interface VsomeipSubscriptionInfo {\r\n  client: number\r\n  uid: number\r\n  gid: number\r\n  subscribed: boolean\r\n}\r\n\r\nexport interface VsomeipSubscriptionStatusInfo {\r\n  service: number\r\n  instance: number\r\n  eventgroup: number\r\n  event: number\r\n  status: number\r\n}\r\n\r\nexport const SomeipMessageTypeMap: Record<SomeipMessageType, string> = {\r\n  [SomeipMessageType.REQUEST]: 'Request',\r\n  [SomeipMessageType.REQUEST_NO_RETURN]: 'Request No Return',\r\n  [SomeipMessageType.NOTIFICATION]: 'Notification',\r\n  [SomeipMessageType.RESPONSE]: 'Response',\r\n  [SomeipMessageType.REQUEST_ACK]: 'Request Ack',\r\n  [SomeipMessageType.NOTIFICATION_ACK]: 'Notification Ack',\r\n  [SomeipMessageType.ERROR]: 'Error',\r\n  [SomeipMessageType.RESPONSE_ACK]: 'Response Ack',\r\n  [SomeipMessageType.ERROR_ACK]: 'Error Ack',\r\n  [SomeipMessageType.UNKNOWN]: 'Unknown'\r\n}\r\n\r\n// Re-export imported sub-interfaces for convenience\r\nexport type {\r\n  GlobalPayloadConfig,\r\n  GlobalQueueConfig,\r\n  TcpRestartConfig,\r\n  FilePermissionsConfig,\r\n  SecurityConfig,\r\n  ServiceDiscoveryConfig,\r\n  TracingConfig,\r\n  ServiceConfig,\r\n  InternalServiceConfig,\r\n  ClientConfig,\r\n  WatchdogConfig,\r\n  LocalClientsKeepaliveConfig,\r\n  SelectiveBroadcastsConfig,\r\n  E2EConfig,\r\n  DebounceConfig,\r\n  AcceptanceConfig,\r\n  SecureServiceConfig,\r\n  PartitionConfig,\r\n  SuppressMissingEventLogConfig,\r\n  NpduDefaultTimingsConfig\r\n}\r\n","/**\r\n * SOME/IP Worker Module\r\n *\r\n * This module provides SOME/IP (Scalable service-Oriented MiddlewarE over IP) message handling classes.\r\n * SOME/IP is an automotive communication protocol used for service-oriented communication in vehicles.\r\n *\r\n * Catalog: SOME/IP - Handles SOME/IP protocol message types and operations\r\n */\r\n\r\nimport { SomeipMessage, SomeipMessageType } from '../share/someip'\r\n\r\n/**\r\n * @catalog SOME/IP\r\n * Base class for SOME/IP messages\r\n * This class provides the foundation for all SOME/IP message types.\r\n * It encapsulates the basic SOME/IP message structure and common functionality.\r\n */\r\nclass SomeipMessageBase {\r\n  /**\r\n   * Creates a new SOME/IP message base instance\r\n   * @param msg - The SOME/IP message data\r\n   */\r\n  constructor(public msg: SomeipMessage) {}\r\n\r\n  setPayload(payload: Buffer) {\r\n    this.msg.payload = payload\r\n  }\r\n}\r\n\r\n/**\r\n * SOME/IP Request Message Handler\r\n *\r\n * @catalog SOME/IP\r\n * This class handles SOME/IP request messages specifically.\r\n * It validates that the message type is REQUEST and provides request-specific functionality.\r\n */\r\nclass SomeipMessageRequest extends SomeipMessageBase {\r\n  /**\r\n   * Creates a new SOME/IP request message instance\r\n   * @param msg - The SOME/IP message data (must be of type REQUEST)\r\n   * @throws {Error} If the message type is not REQUEST\r\n   */\r\n  constructor(public msg: SomeipMessage) {\r\n    if (msg.messageType != SomeipMessageType.REQUEST) {\r\n      throw new Error('SomeipMessageRequest must be SomeipMessageType.REQUEST')\r\n    }\r\n    super(msg)\r\n  }\r\n}\r\n\r\n/**\r\n * SOME/IP Response Message Handler\r\n * @catalog SOME/IP\r\n * This class handles SOME/IP response messages specifically.\r\n * It validates that the message type is RESPONSE and provides response-specific functionality,\r\n * including the ability to create responses from requests.\r\n */\r\nclass SomeipMessageResponse extends SomeipMessageBase {\r\n  /**\r\n   * Creates a new SOME/IP response message instance\r\n   * @param msg - The SOME/IP message data (must be of type RESPONSE)\r\n   * @throws {Error} If the message type is not RESPONSE\r\n   */\r\n  constructor(public msg: SomeipMessage) {\r\n    if (msg.messageType != SomeipMessageType.RESPONSE) {\r\n      throw new Error('SomeipMessageResponse must be SomeipMessageType.RESPONSE')\r\n    }\r\n    super(msg)\r\n  }\r\n\r\n  /**\r\n   * Creates a SOME/IP response message from a request message\r\n   *\r\n   * This static method takes a request message and creates a corresponding response message\r\n   * by copying the request data and changing the message type to RESPONSE.\r\n   *\r\n   * @param request - The SOME/IP request message to create a response from\r\n   * @returns A new SomeipMessageResponse instance based on the request\r\n   */\r\n  static fromSomeipRequest(request: SomeipMessageRequest, payload: Buffer = Buffer.from([])) {\r\n    const response = new SomeipMessageResponse({\r\n      ...request.msg,\r\n      messageType: SomeipMessageType.RESPONSE\r\n    })\r\n    response.setPayload(payload)\r\n    return response\r\n  }\r\n}\r\n\r\n// Export all SOME/IP message classes for use in other modules\r\nexport { SomeipMessageBase, SomeipMessageRequest, SomeipMessageResponse }\r\n","import { VarItem } from 'src/preload/data'\r\nimport { UdsDevice } from './uds'\r\nimport { TesterInfo } from './tester'\r\n\r\nexport const MonitorVar: VarItem[] = [\r\n  {\r\n    type: 'system',\r\n    id: 'EventLoopDelay.min',\r\n    name: `EventLoopDelayMin`,\r\n    parentId: 'EventLoopDelay',\r\n    desc: 'Minimum event loop delay - lower values indicate better performance',\r\n    value: {\r\n      type: 'number',\r\n      initValue: 0,\r\n      unit: 'ms'\r\n    }\r\n  },\r\n  {\r\n    type: 'system',\r\n    id: 'EventLoopDelay.max',\r\n    name: `EventLoopDelayMax`,\r\n    desc: 'Maximum event loop delay - higher values indicate potential performance issues',\r\n    parentId: 'EventLoopDelay',\r\n    value: {\r\n      type: 'number',\r\n      initValue: 0,\r\n      unit: 'ms'\r\n    }\r\n  },\r\n  {\r\n    type: 'system',\r\n    id: 'EventLoopDelay.avg',\r\n    name: `EventLoopDelayAvg`,\r\n    desc: 'Average event loop delay - a good balance between performance and stability',\r\n    parentId: 'EventLoopDelay',\r\n    value: {\r\n      type: 'number',\r\n      initValue: 0,\r\n      unit: 'ms'\r\n    }\r\n  }\r\n]\r\n\r\nexport function getAllSysVar(\r\n  devices: Record<string, UdsDevice>,\r\n  testers: Record<string, TesterInfo>\r\n): Record<string, VarItem> {\r\n  const list: Record<string, VarItem> = {\r\n    Statistics: {\r\n      type: 'system',\r\n      id: 'Statistics',\r\n      name: `Statistics`\r\n    }\r\n  }\r\n\r\n  for (const device of Object.values(devices)) {\r\n    const buslist: Record<string, { min: number; max?: number; unit?: string }> = {\r\n      BusLoad: {\r\n        min: 0,\r\n        max: 100,\r\n        unit: '%'\r\n      },\r\n      BusLoadMin: {\r\n        min: 0,\r\n        max: 100,\r\n        unit: '%'\r\n      },\r\n      BusLoadMax: {\r\n        min: 0,\r\n        max: 100,\r\n        unit: '%'\r\n      },\r\n      BusLoadAvg: {\r\n        min: 0,\r\n        max: 100,\r\n        unit: '%'\r\n      },\r\n      FrameSentFreq: {\r\n        min: 0,\r\n        max: 100,\r\n        unit: 'f/s'\r\n      },\r\n      FrameRecvFreq: {\r\n        min: 0,\r\n        max: 100,\r\n        unit: 'f/s'\r\n      },\r\n      FrameFreq: {\r\n        min: 0,\r\n        max: 100,\r\n        unit: 'f/s'\r\n      },\r\n      SentCnt: {\r\n        min: 0\r\n      },\r\n      RecvCnt: {\r\n        min: 0\r\n      }\r\n    }\r\n\r\n    if (device.type === 'can' && device.canDevice) {\r\n      list[`Statistics.${device.canDevice.id}`] = {\r\n        type: 'system',\r\n        id: `Statistics.${device.canDevice.id}`,\r\n        name: device.canDevice.name,\r\n        parentId: 'Statistics'\r\n      }\r\n      for (const key of Object.keys(buslist)) {\r\n        const item = buslist[key as keyof typeof buslist]\r\n\r\n        list[`Statistics.${device.canDevice.id}.${key}`] = {\r\n          type: 'system',\r\n          id: `Statistics.${device.canDevice.id}.${key}`,\r\n          name: `${key}`,\r\n          parentId: `Statistics.${device.canDevice.id}`,\r\n          value: {\r\n            type: 'number',\r\n            initValue: 0,\r\n            min: item.min,\r\n            max: item.max,\r\n            unit: item.unit\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  for (const tester of Object.values(testers)) {\r\n    list[`Statistics.${tester.id}`] = {\r\n      type: 'system',\r\n      id: `Statistics.${tester.id}`,\r\n      name: tester.name,\r\n      parentId: 'Statistics',\r\n      desc: 'UDS Tester'\r\n    }\r\n    if (tester.seqList.length > 0) {\r\n      for (const [index, seq] of tester.seqList.entries()) {\r\n        list[`Statistics.${tester.id}.${index}`] = {\r\n          type: 'system',\r\n          id: `Statistics.${tester.id}.${index}`,\r\n          name: `Seq #${index}`,\r\n          parentId: `Statistics.${tester.id}`,\r\n          value: {\r\n            type: 'number',\r\n            initValue: 0,\r\n            min: 0,\r\n            max: 100,\r\n            unit: '%'\r\n          },\r\n          desc: `UDS sequence download progress`\r\n        }\r\n      }\r\n    }\r\n  }\r\n  //monitor var\r\n  list[`EventLoopDelay`] = {\r\n    type: 'system',\r\n    id: 'EventLoopDelay',\r\n    name: `EventLoopDelay`\r\n  }\r\n  for (const item of MonitorVar) {\r\n    list[item.id] = item\r\n  }\r\n  return list\r\n}\r\n","/**\r\n * @module Util\r\n */\r\nimport Emittery from 'emittery'\r\nimport {\r\n  getRxPdu,\r\n  getTxPdu,\r\n  Param,\r\n  paramSetVal,\r\n  paramSetSize,\r\n  paramSetValRaw,\r\n  Sequence,\r\n  ServiceItem,\r\n  applyBuffer,\r\n  UdsAddress\r\n} from '../share/uds'\r\nexport { CAN_ID_TYPE, CAN_ADDR_TYPE, CAN_ADDR_FORMAT } from '../share/can'\r\nexport type { ServiceItem }\r\nexport type { TesterInfo } from '../share/tester'\r\nexport type { ServiceId }\r\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n//@ts-ignore\r\nimport workerpool, { worker } from 'workerpool'\r\nimport { cloneDeep } from 'lodash'\r\nimport { v4 } from 'uuid'\r\nimport { checkServiceId, ServiceId } from './../share/uds'\r\nimport { CAN_ID_TYPE, CanMessage } from '../share/can'\r\nimport SecureAccessDll from './secureAccess'\r\nimport { EntityAddr, VinInfo } from '../share/doip'\r\nimport {\r\n  LinMsg,\r\n  LinCableErrorInject,\r\n  LinDirection,\r\n  LinChecksumType,\r\n  getFrameData\r\n} from '../share/lin'\r\nexport { LinDirection, LinChecksumType, LinMode } from '../share/lin'\r\nexport { SecureAccessDll }\r\nexport type { CanMessage }\r\nexport type { EntityAddr }\r\nexport type { LinMsg, LinCableErrorInject }\r\nexport type { CanAddr } from '../share/can'\r\nexport type { EthAddr } from '../share/doip'\r\nexport type { LinAddr } from '../share/lin'\r\nexport type { CanMsgType } from '../share/can'\r\nexport type { UdsAddress }\r\nimport { dot } from 'node:test/reporters'\r\nimport assert, { AssertionError } from 'node:assert'\r\nimport { writeMessageData as writeLinMessageData } from 'src/renderer/src/database/ldf/calc'\r\nimport { setSignal as setSignalNode } from '../util'\r\nexport { PrecisionTimer } from '../timer/timer'\r\nexport type { TimerTask } from '../timer/timer'\r\nimport { setVar as setVarMain, getVar as getVarMain } from '../var'\r\n/**\r\n * Node.js built-in assertion library for testing.\r\n * Provides various assertion methods to validate test expectations.\r\n * Throws AssertionError when assertions fail, causing the test to fail.\r\n *\r\n * @category TEST\r\n *\r\n * @example\r\n * ```ts\r\n * import { assert } from './worker/uds';\r\n *\r\n * // Basic equality assertions\r\n * assert.equal(actual, expected);\r\n * assert.strictEqual(actual, expected);\r\n * assert.notEqual(actual, unexpected);\r\n *\r\n * // Boolean assertions\r\n * assert.ok(value); // truthy check\r\n * assert.equal(value, true);\r\n *\r\n * // Array and object assertions\r\n * assert.deepEqual(actualObject, expectedObject);\r\n * assert.deepStrictEqual(actualArray, expectedArray);\r\n *\r\n * // Error assertions\r\n * assert.throws(() => {\r\n *   throw new Error('Expected error');\r\n * });\r\n *\r\n * // CAN message validation example\r\n * test('should validate CAN message structure', () => {\r\n *   const canMsg = { id: 0x123, data: [0x01, 0x02] };\r\n *   assert.ok(canMsg.id);\r\n *   assert.equal(typeof canMsg.id, 'number');\r\n *   assert.ok(Array.isArray(canMsg.data));\r\n *   assert.equal(canMsg.data.length, 2);\r\n * });\r\n *\r\n * // UDS response validation example\r\n * test('should validate UDS positive response', () => {\r\n *   const response = [0x50, 0x01]; // Positive response to service 0x10\r\n *   assert.equal(response.length, 2);\r\n *   assert.equal(response[0], 0x50);\r\n *   assert.equal(response[1], 0x01);\r\n * });\r\n * ```\r\n */\r\nexport { assert }\r\n\r\nimport { test as nodeTest, TestContext } from 'node:test'\r\n\r\nexport { getCheckSum as getLinCheckSum } from '../share/lin'\r\n\r\nlet init = process.env.ONLY == 'true' ? true : false\r\nlet initPromiseResolve: () => void = () => {}\r\nlet initPromiseReject: (e: any) => void = () => {}\r\nconst initPromise = new Promise<void>((resolve, reject) => {\r\n  initPromiseResolve = resolve\r\n  initPromiseReject = reject\r\n})\r\n\r\nlet testCnt = 0\r\nconst testEnableControl: Record<number, boolean> = {}\r\n\r\n/**\r\n * 辅助函数：保留原始错误的堆栈信息\r\n * @param fn 要执行的函数\r\n * @returns 执行结果\r\n */\r\nasync function preserveErrorStack<T>(fn: () => T | Promise<T>): Promise<T> {\r\n  try {\r\n    return await fn()\r\n  } catch (error) {\r\n    // 保留原始错误的堆栈信息，但过滤掉 uds.ts 相关的帧\r\n    if (error instanceof Error) {\r\n      const stack = error.stack?.split('\\n')\r\n      //fisrt at line\r\n      const atLine = stack?.find((line) => /\\d+:\\d+/.test(line))\r\n\r\n      const newError = new Error(`${error.message}, pos: ${atLine}`)\r\n\r\n      throw newError\r\n    }\r\n    throw error\r\n  }\r\n}\r\n\r\n/**\r\n * Test function for writing test cases with conditional execution based on enable control.\r\n * Provides test context, automatic logging, and supports both synchronous and asynchronous operations.\r\n * Test execution is controlled by the testEnableControl configuration.\r\n *\r\n * @category TEST\r\n * @param {string} name - The name of the test case\r\n * @param {Function} fn - The test function to execute (can be sync or async)\r\n * @property {Function} skip - Skip a test case, marking it as pending. The test will be reported as skipped and not executed.\r\n *\r\n * @example\r\n * ```ts\r\n * // Basic synchronous test case\r\n * test('should validate CAN message format', () => {\r\n *   const canMsg = { id: 0x123, data: [0x01, 0x02] };\r\n *   assert.equal(canMsg.id, 0x123);\r\n *   assert.equal(canMsg.data.length, 2);\r\n * });\r\n *\r\n * // Asynchronous test case for UDS communication\r\n * test('should perform UDS diagnostic session', async () => {\r\n *   await uds.service(0x10, 0x01); // DiagnosticSessionControl\r\n *   const response = await uds.getResponse();\r\n *   assert.equal(response[0], 0x50); // Positive response\r\n * });\r\n *\r\n * // Test with CAN bus operations\r\n * test('should send and receive CAN messages', async () => {\r\n *   await can.send({ id: 0x7E0, data: [0x02, 0x10, 0x01] });\r\n *   const msg = await can.recv(1000);\r\n *   assert.notEqual(msg, null);\r\n * });\r\n *\r\n * // Skip a test case when feature is not ready\r\n * test.skip('LIN transport protocol test', () => {\r\n *   // Test code that will be skipped\r\n *   lin.sendMessage(0x3C, [0x01, 0x02, 0x03]);\r\n * });\r\n * ```\r\n */\r\n\r\nexport function test(name: string, fn: () => void | Promise<void>) {\r\n  selfTest(name, async (t) => {\r\n    if (!init) {\r\n      try {\r\n        await initPromise\r\n      } catch (e: any) {\r\n        console.error(`Util.Init function failed: ${e}`)\r\n        process.exit(-1)\r\n      }\r\n      init = true\r\n    }\r\n\r\n    t.before(async () => {\r\n      if (testEnableControl[testCnt] != true) {\r\n        t.skip()\r\n        return\r\n      }\r\n      console.log(`<<< TEST START ${name}>>>`)\r\n    })\r\n    t.after(() => {\r\n      console.log(`<<< TEST END ${name}>>>`)\r\n      testCnt++\r\n    })\r\n\r\n    if (testEnableControl[testCnt] != true) {\r\n      t.skip()\r\n    } else {\r\n      return preserveErrorStack(fn)\r\n    }\r\n  })\r\n}\r\n\r\ntest.skip = function (name: string, fn: () => void | Promise<void>) {\r\n  selfTest(name, (t) => {\r\n    t.before(() => {\r\n      console.log(`<<< TEST START ${name}>>>`)\r\n    })\r\n    t.after(() => {\r\n      console.log(`<<< TEST END ${name}>>>`)\r\n      testCnt++\r\n    })\r\n    t.skip()\r\n  })\r\n}\r\n\r\n/**\r\n * Node.js built-in test hook functions.\r\n * These are aliased and re-exported as custom functions with conditional execution.\r\n *\r\n * @category TEST\r\n */\r\nimport {\r\n  beforeEach as nodeBeforeEach,\r\n  afterEach as nodeAfterEach,\r\n  before as nodeBefore,\r\n  after as nodeAfter\r\n} from 'node:test'\r\n\r\n/**\r\n * Run setup code before each test in the current suite.\r\n * **MUST be used within a describe block.** Only executes if the corresponding test is enabled through testEnableControl.\r\n * Useful for initializing test data, establishing connections, or setting up mock objects.\r\n *\r\n * @category TEST\r\n * @param {Function} fn - Function to run before each test (can be sync or async)\r\n *\r\n * @example\r\n * ```ts\r\n * describe('CAN Communication Tests', () => {\r\n *   // ✅ Correct: beforeEach inside describe block\r\n *   beforeEach(async () => {\r\n *     await can.open('kvaser', 0);\r\n *     await can.setBitrate(500000);\r\n *   });\r\n *\r\n *   beforeEach(() => {\r\n *     uds.setTesterPresent(true);\r\n *     uds.setTimeout(5000);\r\n *   });\r\n *\r\n *   test('should send CAN message', () => {\r\n *     // Test implementation\r\n *   });\r\n * });\r\n *\r\n * // ❌ Wrong: beforeEach outside describe block\r\n * // beforeEach(() => { // This will not work properly });\r\n * ```\r\n */\r\nexport function beforeEach(fn: () => void | Promise<void>) {\r\n  nodeBeforeEach(async () => {\r\n    // Use current testCnt to determine if this hook should run\r\n    if (testEnableControl[testCnt] === true) {\r\n      return preserveErrorStack(fn)\r\n    }\r\n  })\r\n}\r\n\r\n/**\r\n * Run cleanup code after each test in the current suite.\r\n * **MUST be used within a describe block.** Only executes if the corresponding test is enabled through testEnableControl.\r\n * Used for cleaning up resources, closing connections, or resetting state after each test.\r\n *\r\n * @category TEST\r\n * @param {Function} fn - Function to run after each test (can be sync or async)\r\n *\r\n * @example\r\n * ```ts\r\n * describe('UDS Diagnostic Tests', () => {\r\n *   // ✅ Correct: afterEach inside describe block\r\n *   afterEach(async () => {\r\n *     await can.close();\r\n *   });\r\n *\r\n *   afterEach(() => {\r\n *     uds.setTesterPresent(false);\r\n *     uds.clearDtc();\r\n *     testData = null;\r\n *   });\r\n *\r\n *   test('should perform diagnostics', () => {\r\n *     // Test implementation\r\n *   });\r\n * });\r\n *\r\n * // ❌ Wrong: afterEach outside describe block\r\n * // afterEach(() => { // This will not work properly });\r\n * ```\r\n */\r\nexport function afterEach(fn: () => void | Promise<void>) {\r\n  nodeAfterEach(async () => {\r\n    // Use current testCnt to determine if this hook should run\r\n    if (testEnableControl[testCnt] === true) {\r\n      return preserveErrorStack(fn)\r\n    }\r\n  })\r\n}\r\n\r\n/**\r\n * Run setup code before all tests in the current suite.\r\n * **MUST be used within a describe block.** Only executes if any test in the suite is enabled through testEnableControl.\r\n * Used for one-time setup operations like initializing hardware, loading configuration, or establishing database connections.\r\n *\r\n * @category TEST\r\n * @param {Function} fn - Function to run before all tests (can be sync or async)\r\n *\r\n * @example\r\n * ```ts\r\n * describe('Hardware Integration Tests', () => {\r\n *   // ✅ Correct: before inside describe block\r\n *   before(async () => {\r\n *     await hardware.initialize();\r\n *     await hardware.selfTest();\r\n *   });\r\n *\r\n *   before(() => {\r\n *     config = loadTestConfig('test-settings.json');\r\n *     process.env.TEST_MODE = 'true';\r\n *   });\r\n *\r\n *   test('should connect to ECU', () => {\r\n *     // Test implementation\r\n *   });\r\n * });\r\n *\r\n * // ❌ Wrong: before outside describe block\r\n * // before(() => { // This will not work properly });\r\n * ```\r\n */\r\nexport function before(fn: () => void | Promise<void>) {\r\n  nodeBefore(async () => {\r\n    // Check if any test is enabled - if so, run the before hook\r\n    const hasEnabledTests = Object.values(testEnableControl).some((enabled) => enabled === true)\r\n    if (hasEnabledTests) {\r\n      return preserveErrorStack(fn)\r\n    }\r\n  })\r\n}\r\n\r\n/**\r\n * Run cleanup code after all tests in the current suite.\r\n * **MUST be used within a describe block.** Only executes if any test in the suite was enabled through testEnableControl.\r\n * Used for final cleanup operations like closing hardware connections, saving test reports, or cleaning up temporary files.\r\n *\r\n * @category TEST\r\n * @param {Function} fn - Function to run after all tests (can be sync or async)\r\n *\r\n * @example\r\n * ```ts\r\n * describe('System Integration Tests', () => {\r\n *   // ✅ Correct: after inside describe block\r\n *   after(async () => {\r\n *     await hardware.shutdown();\r\n *     await hardware.disconnect();\r\n *   });\r\n *\r\n *   after(() => {\r\n *     saveTestReport(testResults);\r\n *     delete process.env.TEST_MODE;\r\n *     console.log('All tests completed');\r\n *   });\r\n *\r\n *   test('should perform system check', () => {\r\n *     // Test implementation\r\n *   });\r\n * });\r\n *\r\n * // ❌ Wrong: after outside describe block\r\n * // after(() => { // This will not work properly });\r\n * ```\r\n */\r\nexport function after(fn: () => void | Promise<void>) {\r\n  nodeAfter(async () => {\r\n    // Check if any test was enabled - if so, run the after hook\r\n    const hasEnabledTests = Object.values(testEnableControl).some((enabled) => enabled === true)\r\n    if (hasEnabledTests) {\r\n      return preserveErrorStack(fn)\r\n    }\r\n  })\r\n}\r\n\r\n/**\r\n * Node.js built-in describe function for creating test groups.\r\n * Aliased to support conditional execution based on environment variables.\r\n *\r\n * @category TEST\r\n */\r\nimport { describe as nodeDescribe } from 'node:test'\r\nimport { VarUpdateItem } from '../global'\r\nimport { DataSet, VarItem } from 'src/preload/data'\r\nimport { workerData } from 'node:worker_threads'\r\nimport { getMessageData, writeMessageData } from 'src/renderer/src/database/dbc/calc'\r\nimport type { Signal } from 'src/renderer/src/database/dbc/dbcVisitor'\r\nimport { SomeipMessageBase, SomeipMessageRequest, SomeipMessageResponse } from './someip'\r\nimport { SomeipMessage, SomeipMessageType } from '../share/someip'\r\nimport { getAllSysVar } from '../share/sysVar'\r\nglobal.dataSet = workerData as DataSet\r\nconst selfDescribe = process.env.ONLY == 'true' ? nodeDescribe.only : nodeDescribe\r\nconst selfTest = process.env.ONLY == 'true' ? nodeTest.only : nodeTest\r\n// export { selfDescribe as describe }\r\n\r\n/**\r\n * Create a test group to organize related test cases.\r\n * **Required container for all test hook functions** (before, after, beforeEach, afterEach).\r\n * Groups tests logically and provides a scope for shared setup/teardown operations.\r\n * Automatically increments test counter for proper test enable control tracking.\r\n *\r\n * @category TEST\r\n * @param {string} name - Test group name that describes the functionality being tested\r\n * @param {Function} fn - Test group function containing test cases and hooks\r\n *\r\n * @example\r\n * ```ts\r\n * // ✅ Correct: All hooks must be inside describe blocks\r\n * describe('CAN Communication Tests', () => {\r\n *   before(async () => {\r\n *     // One-time setup for the entire test suite\r\n *     await hardware.initialize();\r\n *   });\r\n *\r\n *   beforeEach(async () => {\r\n *     // Setup before each test\r\n *     await can.open('kvaser', 0);\r\n *   });\r\n *\r\n *   test('should send CAN message', () => {\r\n *     const result = can.send({ id: 0x123, data: [0x01, 0x02] });\r\n *     assert.equal(result, true);\r\n *   });\r\n *\r\n *   test('should receive CAN message', async () => {\r\n *     const msg = await can.recv(1000);\r\n *     assert.notEqual(msg, null);\r\n *   });\r\n *\r\n *   afterEach(async () => {\r\n *     // Cleanup after each test\r\n *     await can.close();\r\n *   });\r\n *\r\n *   after(() => {\r\n *     // Final cleanup for the entire test suite\r\n *     console.log('All CAN tests completed');\r\n *   });\r\n * });\r\n *\r\n * // ❌ Wrong: Hooks outside describe blocks will not work\r\n * // before(() => { // This is invalid });\r\n * // beforeEach(() => { // This is invalid });\r\n * // test('standalone test', () => { // This works but hooks don't apply });\r\n * ```\r\n */\r\nexport function describe(name: string, fn: () => void | Promise<void>) {\r\n  selfDescribe(name, async (t) => {\r\n    before(() => {\r\n      testCnt++\r\n    })\r\n\r\n    return preserveErrorStack(fn)\r\n  })\r\n}\r\n\r\nconst testerList = ['{{{testerName}}}'] as const\r\nconst serviceList = ['{{{serviceName}}}'] as const\r\nconst allServicesSend = ['{{{serviceName}}}.send'] as const\r\nconst allServicesRecv = ['{{{serviceName}}}.recv'] as const\r\nconst allSignal = ['{{{signalName}}}'] as const\r\nconst allUdsSeq = ['{{{udsSeqName}}}'] as const\r\n\r\ninterface Jobs {\r\n  string: (data: Buffer) => string\r\n}\r\n/**\r\n * All services name config in Diagnostic Service.\r\n * @category UDS\r\n */\r\nexport type ServiceName = (typeof serviceList)[number]\r\n/**\r\n * All testers name config in Diagnostic Service.\r\n * @category UDS\r\n */\r\nexport type TesterName = (typeof testerList)[number]\r\n/**\r\n * All services name(.send) config in Diagnostic Service.\r\n * @category UDS\r\n */\r\nexport type ServiceNameSend = (typeof allServicesSend)[number]\r\n/**\r\n * All services name(.recv) config in Diagnostic Service.\r\n * @category UDS\r\n */\r\nexport type ServiceNameRecv = (typeof allServicesRecv)[number]\r\n\r\n/**\r\n * All UDS sequence names configured in Diagnostic Service.\r\n * @category UDS\r\n */\r\nexport type UdsSeqName = (typeof allUdsSeq)[number]\r\n\r\n/**\r\n * All signals name config in Diagnostic Service.\r\n * @category LIN\r\n * @category CAN\r\n */\r\nexport type SignalName = (typeof allSignal)[number]\r\n\r\n/**\r\n * All variables name config in Diagnostic Service.\r\n * @category UDS\r\n */\r\nexport type VariableMap = {\r\n  stub: number\r\n}\r\n\r\n/**\r\n * All jobs name config in Diagnostic Service.\r\n * @category UDS\r\n */\r\nexport type JobName = keyof Jobs\r\ntype ServiceNameAll = ServiceNameSend | ServiceNameRecv\r\n\r\ntype EventMapSend = {\r\n  [key in ServiceNameSend]: DiagRequest\r\n}\r\n\r\ntype EventMapRecv = {\r\n  [key in ServiceNameRecv]: DiagResponse\r\n}\r\n\r\ntype EventMap = EventMapSend & EventMapRecv\r\n\r\nconst emitMap = new Map<number, { resolve: any; reject: any }>()\r\nconst serviceMap = new Map<string, ServiceItem>()\r\n\r\nlet id = 0\r\n/**\r\n * @category UDS\r\n */\r\nexport type ServiceEvent = {\r\n  send: DiagRequest\r\n  recv: DiagResponse\r\n}\r\n/**\r\n * @category UDS\r\n */\r\nclass Service {\r\n  service: ServiceItem\r\n  private params: Param[]\r\n  private isRequest: boolean\r\n  testerName: string\r\n  constructor(testerName: string, service: ServiceItem, isRequest: boolean) {\r\n    this.testerName = testerName\r\n    this.service = service\r\n    this.isRequest = isRequest\r\n    if (isRequest) {\r\n      this.params = this.service.params\r\n    } else {\r\n      this.params = this.service.respParams\r\n    }\r\n  }\r\n  valueOf() {\r\n    return this.isRequest\r\n      ? getTxPdu(this.service).toString('hex')\r\n      : getRxPdu(this.service).toString('hex')\r\n  }\r\n  /**\r\n   * Sync service params to tester sequence, after change, the sequence params will be updated.\r\n   *\r\n   * @returns {Promise<void>} A promise that resolves when the event has been emitted.\r\n   *\r\n   * @example\r\n   *\r\n   * ```ts\r\n   * Util.Init(async () => {\r\n   *    const testService0 = DiagRequest.from('Can.testService')\r\n   *    testService.diagSetParameter('key', 0x01)\r\n   *    const testService1 = DiagRequest.from('Can.testService')\r\n   *    console.log(testService0 == testService1) // false\r\n   *    await testService0.syncService()\r\n   *    const testService2 = DiagRequest.from('Can.testService')\r\n   *    console.log(testService0 == testService2) // true\r\n   *\r\n   * })\r\n   * ```\r\n   */\r\n  async changeService() {\r\n    await this.asyncEmit('set', {\r\n      service: this.service,\r\n      isRequest: this.isRequest,\r\n      testerName: this.testerName\r\n    })\r\n    serviceMap.set(this.getServiceName(), this.service)\r\n  }\r\n  /**\r\n   * Subscribe to an event. When the event occurs, the listener function will be invoked.\r\n   *\r\n   * The valid event name should be:\r\n   * - `'send'`: will be happen before the msg is send\r\n   * - `'recv'`: will be happen when the response msg is recv\r\n   *\r\n   * @param event The event to be listened.\r\n   * @param listener the function when event\r\n   *\r\n   * @example\r\n   *\r\n   * ```ts\r\n   * Util.Init(()=>{\r\n   *     const testService = DiagRequest.from('Can.testService')\r\n   *     testService.On('send', ()=>{\r\n   *         console.log('send event happened.')\r\n   *     })\r\n   *\r\n   *     testService.On('recv', ()=>{\r\n   *         console.log('recv event happened.')\r\n   *     })\r\n   * })\r\n   * ```\r\n   */\r\n  On<T extends keyof ServiceEvent>(\r\n    event: T,\r\n    listener: (data: ServiceEvent[T]) => void | Promise<void>\r\n  ) {\r\n    Util.On(`${this.getServiceName()}.${event}` as any, listener)\r\n  }\r\n  /**\r\n   * Subscribe to an event, only once.\r\n   *\r\n   * @param event - The event type.\r\n   * @param listener - The function to subscribe.\r\n   */\r\n  Once<T extends keyof ServiceEvent>(\r\n    event: T,\r\n    listener: (data: ServiceEvent[T]) => void | Promise<void>\r\n  ) {\r\n    Util.OnOnce(`${this.getServiceName()}.${event}` as any, listener)\r\n  }\r\n  /**\r\n   * Unsubscribe from an event.\r\n   * \r\n   * @param event - The event type.\r\n   * @param listener - The function to unsubscribe.\r\n   * \r\n   * @example\r\n   * \r\n   * ```ts\r\n   * Util.Init(() => {\r\n   *     const testService = DiagRequest.from('Can.testService');\r\n   *     testService.On('send', () => {\r\n   *         console.log('send event happened.');\r\n   *     });\r\n   \r\n   *     // The following code will not work\r\n   *     testService.Off('send', () => {\r\n   *         console.log('send event happened.');\r\n   *     });\r\n   * });\r\n   * ```\r\n   * \r\n   * > **Note**: To unsubscribe from an event, you must provide a non-anonymous function.\r\n   */\r\n  Off<T extends keyof ServiceEvent>(\r\n    event: T,\r\n    listener: (data: ServiceEvent[T]) => void | Promise<void>\r\n  ) {\r\n    Util.Off(`${this.getServiceName()}.${event}` as any, listener)\r\n  }\r\n  private async asyncEmit(event: string, data: any): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      workerpool.workerEmit({\r\n        id: id,\r\n        event: event,\r\n        data: data\r\n      })\r\n      emitMap.set(id, { resolve, reject })\r\n      id++\r\n    })\r\n  }\r\n  /**\r\n   * This function will return the service name\r\n   *\r\n   * @example\r\n   *\r\n   * ```ts\r\n   * Util.Init(()=>{\r\n   *     const testService = DiagRequest.from('Can.testService');\r\n   *     console.log('ServiceName:', testService.getServiceName())\r\n   * })\r\n   * ```\r\n   */\r\n  getServiceName() {\r\n    return `${this.testerName}.${this.service.name}`\r\n  }\r\n\r\n  /**\r\n   * This function will return the service describe setting in Service.\r\n   * @returns service describe.\r\n   *\r\n   * @example\r\n   *\r\n   * ```ts\r\n   * Util.Init(()=>{\r\n   *     const testService = DiagRequest.from('Can.testService');\r\n   *     console.log('Desc:', testService.getServiceDesc())\r\n   * })\r\n   * ```\r\n   */\r\n  getServiceDesc() {\r\n    return this.service.desc\r\n  }\r\n\r\n  /**\r\n   * This function will return the value of the provided parameter.\r\n   * @param paramName param name\r\n   * @returns param value\r\n   *\r\n   * @example\r\n   *\r\n   * ```ts\r\n   * Util.Init(()=>{\r\n   *     const testService = DiagRequest.from('Can.testService');\r\n   *     console.log('SERVICE-ID Buffer:', testService.diagGetParameter('SERVICE-ID'))\r\n   * })\r\n   * ```\r\n   */\r\n  diagGetParameter(paramName: string): string | number {\r\n    const param = this.params.find((item) => item.name === paramName)\r\n    if (param) {\r\n      return param.phyValue\r\n    } else {\r\n      throw new Error(\r\n        `param ${paramName} not found in ${this.isRequest ? 'DiagRequest' : 'DiagResponse'} ${this.service.name}`\r\n      )\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This function will return the `Buffer` of the provided parameter.\r\n   * @param paramName param name\r\n   * @returns `Buffer` value of provided parameter.\r\n   *\r\n   * @example\r\n   *\r\n   * ```ts\r\n   * Util.Init(()=>{\r\n   *     const testService = DiagRequest.from('Can.testService');\r\n   *     console.log('SERVICE-ID:', testService.diagGetParameterRaw('SERVICE-ID'))\r\n   * })\r\n   * ```\r\n   */\r\n  diagGetParameterRaw(paramName: string): Buffer {\r\n    const param = this.params.find((item) => item.name === paramName)\r\n    if (param) {\r\n      return Buffer.from(param.value)\r\n    } else {\r\n      throw new Error(\r\n        `param ${paramName} not found in ${this.isRequest ? 'DiagRequest' : 'DiagResponse'} ${this.service.name}`\r\n      )\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This function will return the bit size of the provided parameter.\r\n   * @param paramName param name\r\n   * @returns param bit size\r\n   *\r\n   * @example\r\n   *\r\n   * ```ts\r\n   * Util.Init(()=>{\r\n   *     const testService = DiagRequest.from('Can.testService');\r\n   *     console.log('SERVICE-ID Size:', testService.diagGetParameterSize('SERVICE-ID'))\r\n   * })\r\n   */\r\n  diagGetParameterSize(paramName: string): number {\r\n    const param = this.params.find((item) => item.name === paramName)\r\n    if (param) {\r\n      return param.bitLen\r\n    } else {\r\n      throw new Error(`param ${paramName} not found in DiagRequest ${this.service.name}`)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This function returns the names of all parameters associated with the given diag.\r\n   *\r\n   * @returns {string[]} An array of strings storing the names of all parameters.\r\n   *\r\n   * @example\r\n   *\r\n   * Util.Init(()=>{\r\n   *     const testService = DiagRequest.from('Can.testService');\r\n   *     console.log('parameter names:', testService.diagGetParameterNames())\r\n   * })\r\n   */\r\n  diagGetParameterNames(): string[] {\r\n    return this.params.map((item) => item.name)\r\n  }\r\n\r\n  /**\r\n   * This function will change the parameter's bit size.\r\n   * @param paramName parameter name\r\n   * @param bitLen new bit size of the provided parameter.\r\n   *\r\n   * @example\r\n   *\r\n   * > It is only advisable to specify the size of num and array parameters.\r\n   *\r\n   * ```ts\r\n   * Util.Init(()=>{\r\n   *     const testService = DiagRequest.from('Can.testService')\r\n   *\r\n   *     // array parameter\r\n   *     console.log('arrayParam bit size:', testService.diagGetParameterSize('arrayParam'))\r\n   *     testService.diagSetParameterSize('arrayParam', 64)\r\n   *     console.log('arrayParam bit size:', testService.diagGetParameterSize('arrayParam'))\r\n   *\r\n   *     // num parameter\r\n   *     console.log('numParam bit size:', testService.diagGetParameterSize('numParam'))\r\n   *     testService.diagSetParameterSize('numParam', 16)\r\n   *     console.log('numParam bit size:', testService.diagGetParameterSize('numParam'))\r\n   *\r\n   *     console.log('ascii bit size:', testService.diagGetParameterSize('asciiParam'))\r\n   *     testService.diagSetParameterSize('asciiParam', 16)\r\n   *     console.log('ascii bit size:', testService.diagGetParameterSize('asciiParam'))\r\n   * })\r\n   * ```\r\n   *\r\n   */\r\n  diagSetParameterSize(paramName: string, bitLen: number) {\r\n    const param = this.params.find((item) => item.name === paramName)\r\n    if (param) {\r\n      paramSetSize(param, bitLen)\r\n    } else {\r\n      throw new Error(`param ${paramName} not found in DiagRequest ${this.service.name}`)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This function will change the provided parameter's value.\r\n   * @param paramName parameter's name need to be changed.\r\n   * @param value new value of the provided parameter.\r\n   *\r\n   * @example\r\n   *\r\n   * > Add relative param in Service.\r\n   *\r\n   * 1. **array parameter**\r\n   *\r\n   *     ```ts\r\n   *     Util.Init(()=>{\r\n   *         // add param arrayParam in Service.\r\n   *         const testService = DiagRequest.from('Can.testService')\r\n   *\r\n   *         console.log('arrayParam:', testService.diagGetParameter('arrayParam'))\r\n   *         testService.diagSetParameter('arrayParam', '12 34 56 78')\r\n   *         console.log('arrayParam:', testService.diagGetParameter('arrayParam'))\r\n   *     })\r\n   *     ```\r\n   *\r\n   * 2. **num parameter**\r\n   *\r\n   *     ```ts\r\n   *     Util.Init(()=>{\r\n   *         // add param arrayParam in Service.\r\n   *         const testService = DiagRequest.from('Can.testService')\r\n   *\r\n   *         // 8 bit number\r\n   *         console.log('8 bits num:', testService.diagGetParameter('numParam'))\r\n   *         testService.diagSetParameter('numParam', '12')\r\n   *         console.log('set parameter with str:', testService.diagGetParameter('numParam'))\r\n   *         testService.diagSetParameter('numParam', 99)\r\n   *         console.log('set parameter with number:', testService.diagGetParameter('numParam'))\r\n   *\r\n   *         // 16 bit number\r\n   *         console.log('8 bits num:', testService.diagGetParameterRaw('numParam'))\r\n   *         testService.diagSetParameterSize('numParam', 16)\r\n   *         console.log('change size to 16 bits:', testService.diagGetParameterRaw('numParam'))\r\n   *         testService.diagSetParameter('numParam', '257')\r\n   *         console.log('set parameter with str', testService.diagGetParameterRaw('numParam'))\r\n   *         testService.diagSetParameter('numParam', 65534)\r\n   *         console.log('set parameter with number', testService.diagGetParameterRaw('numParam'))\r\n   *     })\r\n   *     ```\r\n   * 3. **ascii parameter**\r\n   *\r\n   *     > The ascii parameter formats the input value into a string. It is advisable to avoid using numbers as input.\r\n   *\r\n   *     ```ts\r\n   *     Util.Init(()=>{\r\n   *         // add param arrayParam in Service.\r\n   *         const testService = DiagRequest.from('Can.testService')\r\n   *\r\n   *         // 8 bit number\r\n   *         console.log('8 bits num:', testService.diagGetParameterRaw('asciiParam'))\r\n   *         testService.diagSetParameter('asciiParam', 'A')\r\n   *         console.log('set parameter with str:', testService.diagGetParameterRaw('asciiParam'))\r\n   *\r\n   *         // 16 bit number\r\n   *         console.log('8 bits num:', testService.diagGetParameterRaw('asciiParam'))\r\n   *         await testService.diagSetParameterSize('asciiParam', 16)\r\n   *         console.log('change size to 16 bits:', testService.diagGetParameterRaw('asciiParam'))\r\n   *         await testService.diagSetParameter('asciiParam', 'AB')\r\n   *         console.log('set parameter with str', testService.diagGetParameterRaw('asciiParam'))\r\n   *     })\r\n   *     ```\r\n   * 4. **unicode parameter**\r\n   *\r\n   *     ```ts\r\n   *     Util.Init(()=>{\r\n   *         // add param arrayParam in Service.\r\n   *         const testService = DiagRequest.from('Can.testService')\r\n   *\r\n   *         // 8 bit number\r\n   *         console.log('24 bits num:', testService.diagGetParameter('unicodeParam'))\r\n   *         testService.diagSetParameter('unicodeParam', '❤')\r\n   *         console.log('set parameter with str:', testService.diagGetParameter('unicodeParam'))\r\n   *\r\n   *         // 16 bit number\r\n   *         console.log('48 bits num:', testService.diagGetParameter('unicodeParam'))\r\n   *         testService.diagSetParameterSize('unicodeParam', 48)\r\n   *         console.log('change size to 16 bits:', testService.diagGetParameter('unicodeParam'))\r\n   *         testService.diagSetParameter('unicodeParam', '❤️')\r\n   *         console.log('set parameter with str', testService.diagGetParameter('unicodeParam'))\r\n   *     })\r\n   *     ```\r\n   *\r\n   * 5. **float parameter**\r\n   *\r\n   *     ```ts\r\n   *     Util.Init(()=>{\r\n   *         // add param arrayParam in Service.\r\n   *         const testService = DiagRequest.from('Can.testService')\r\n   *\r\n   *         // 8 bit number\r\n   *         console.log('32 bits num:', testService.diagGetParameter('floatParam'))\r\n   *         testService.diagSetParameter('floatParam', 0.12345)\r\n   *         console.log('set parameter with float:', testService.diagGetParameter('floatParam'))\r\n   *     })\r\n   *     ```\r\n   */\r\n  diagSetParameter(paramName: string, value: string | number) {\r\n    const param = this.params.find((item) => item.name === paramName)\r\n    if (param) {\r\n      paramSetVal(param, value)\r\n    } else {\r\n      throw new Error(`param ${paramName} not found in DiagRequest ${this.service.name}`)\r\n    }\r\n  }\r\n  /**\r\n   * This function will change the provided parameter's value with provided `Buffer` value.\r\n   * \r\n   * @param paramName parameter's name need to be changed.\r\n   * @param {Buffer} value new `Buffer` value of the provided parameter.\r\n   * \r\n   * @example\r\n   * \r\n   * > Add relative param in Service.\r\n   * \r\n   * This function modifies the value of a parameter using a Buffer. The Buffer's value will be transferred at the TP layer.\r\n   * You can generate a Buffer using the following methods:\r\n   * \r\n   * ```ts\r\n   * const newValue1 = Buffer.from([0x12, 0x34, 0x56, 0x78]);\r\n   * \r\n   * const newValue2 = Buffer.alloc(4);\r\n   * newValue2.writeUInt8(0x01, 0);\r\n   * newValue2.writeUInt8(0x02, 1);\r\n   * newValue2.writeUInt8(0x03, 2);\r\n   * newValue2.writeUInt8(0x04, 3);\r\n   * \r\n   * const newValue3 = Buffer.from('11223344', 'hex');\r\n   * ```\r\n   * \r\n   * To modify an array parameter, you can use the following example:\r\n   * \r\n   * ```ts\r\n   * Util.Init(() => {\r\n  \r\n   *     const testService = DiagRequest.from('Can.testService');\r\n   *     \r\n   *     console.log('arrayParam:', testService.diagGetParameter('arrayParam'));\r\n   *     const newValue1 = Buffer.from([0x12, 0x34, 0x56, 0x78]);\r\n   * \r\n   *     testService.diagSetParameterRaw('arrayParam', newValue1);\r\n   *     console.log('arrayParam:', testService.diagGetParameter('arrayParam'));\r\n   * });\r\n   * ```\r\n   * \r\n   * > For more examples on changing different parameter types, please refer to the {@link diagSetParameter | `diagSetParameter`} function.\r\n   * \r\n   */\r\n  diagSetParameterRaw(paramName: string, value: Buffer) {\r\n    const param = this.params.find((item) => item.name === paramName)\r\n    if (param) {\r\n      paramSetValRaw(param, value)\r\n    } else {\r\n      throw new Error(`param ${paramName} not found in DiagRequest ${this.service.name}`)\r\n    }\r\n  }\r\n  /**\r\n   * Sends a diagnostic output command to the specified device.\r\n   *\r\n   * @param deviceName - The name of the device to send the diagnostic command to.\r\n   * @param addressName - The address name associated with the device.\r\n   * @returns The diagnostic output timestamp.\r\n   */\r\n  async outputDiag(deviceName?: string, addressName?: string): Promise<number> {\r\n    const ts = await this.asyncEmit('sendDiag', {\r\n      device: deviceName,\r\n      address: addressName,\r\n      service: this.service,\r\n      isReq: this.isRequest,\r\n      testerName: this.testerName\r\n    })\r\n    return ts\r\n  }\r\n\r\n  /**\r\n   * This function modifies all values of a service.\r\n   * \r\n   * @param data - The new data's buffer value.\r\n   * \r\n   * @example\r\n   * \r\n   * This function is typically used by a job to modify all data of a service. The following code demonstrates how to generate a new service and set its raw data:\r\n   * \r\n   * ```ts\r\n   * Util.Register('Can.testJob', async (v) => {\r\n   *     //create a new DiagRequest in Can tester\r\n   *     const testService = new DiagRequest('Can');\r\n   *     const newData = Buffer.from([0x10, 0x01, 0x00, 0x01, 0x02]);\r\n   *     await testService.diagSetRaw(newData);\r\n   *     return [testService];\r\n   * });\r\n   * ```\r\n   * \r\n   * > - Ensure that the job `Can.testJob` is already configured in Service.\r\n   * > - The return type of a job should be a array.\r\n   * \r\n   * You can also modify the raw data of an existing service with the following code:\r\n   * \r\n   * ```ts\r\n   * Util.Init(() => {\r\n  \r\n   *     const testService = DiagRequest.from('Can.testService');\r\n   *     const newData = Buffer.from([0x10, 0x02]);\r\n   *     await testService.diagSetRaw(newData);\r\n   * });\r\n   * ```\r\n   * \r\n   *\r\n   * > - Ensure that the service `Can.testService` is already configured in Service.\r\n   * > - The new raw data size should be equal to the old raw data size.\r\n   */\r\n  diagSetRaw(data: Buffer) {\r\n    applyBuffer(this.service, data, this.isRequest)\r\n  }\r\n\r\n  /**\r\n   * This function will return a raw data of one service.\r\n   * @returns raw data of one service.\r\n   * \r\n   * @example\r\n   * \r\n   * ```ts\r\n   * Util.Init(()=>{\r\n  \r\n   *     const testService = DiagRequest.from('Can.testService')\r\n   *     console.log('get raw data:', testService.diagGetRaw())\r\n   * })\r\n   * ```\r\n   */\r\n  diagGetRaw() {\r\n    if (this.isRequest) {\r\n      return getTxPdu(this.service)\r\n    } else {\r\n      return getRxPdu(this.service)\r\n    }\r\n  }\r\n}\r\n/**\r\n * @category UDS\r\n */\r\nexport class DiagJob extends Service {\r\n  constructor(testerName: string, service: ServiceItem) {\r\n    super(testerName, cloneDeep(service), true)\r\n  }\r\n  from(jobName: keyof Jobs) {\r\n    const testerName = jobName.split('.')[0]\r\n    const service = serviceMap.get(jobName)\r\n    if (service && checkServiceId(service.serviceId, ['job'])) {\r\n      return new DiagJob(testerName, service)\r\n    } else {\r\n      throw new Error(`job ${jobName} not found`)\r\n    }\r\n  }\r\n}\r\n/**\r\n * @category UDS\r\n */\r\nexport class DiagResponse extends Service {\r\n  private addr?: UdsAddress\r\n  constructor(testerName: string, service: ServiceItem, addr?: UdsAddress) {\r\n    super(testerName, cloneDeep(service), false)\r\n    this.addr = addr\r\n  }\r\n  /**\r\n   * Get the UDS address of the response. The address may be undefined if not set.\r\n   * @returns {UdsAddress | undefined} The UDS address if set, undefined otherwise\r\n   */\r\n  getUdsAddress() {\r\n    return this.addr\r\n  }\r\n  /**\r\n   * @param {string} serviceName\r\n   *\r\n   * > serviceName's type '{{{serviceName}}}' is the string configured by Service.\r\n   *\r\n   * @example\r\n   *\r\n   *     ```ts\r\n   *     Util.Init(async ()=>{\r\n   *         // add param arrayParam in Service.\r\n   *         const testService = DiagRequest.from('Can.testService')\r\n   *         testService.On('send', ()=>{\r\n   *             console.log('send event happened.')\r\n   *         })\r\n   *     }\r\n   *     ```\r\n   */\r\n  static from(serviceName: ServiceName) {\r\n    const testerName = serviceName.split('.')[0]\r\n    const service = serviceMap.get(serviceName)\r\n    if (service && checkServiceId(service.serviceId, ['uds'])) {\r\n      return new DiagResponse(testerName, service)\r\n    } else {\r\n      throw new Error(`service ${serviceName} not found`)\r\n    }\r\n  }\r\n  /**\r\n   * @param {DiagRequest} req\r\n   * @returns {DiagResponse}\r\n   *\r\n   * > req's type '{{{DiagRequest}}}' is the DiagRequest object.\r\n   *\r\n   * @example\r\n   *\r\n   * ```ts\r\n   * Util.On('Can.testService.send', (v)=>{\r\n   *     const response = DiagResponse.fromDiagRequest(v)\r\n   * })\r\n   * ```\r\n   */\r\n  static fromDiagRequest(req: DiagRequest) {\r\n    return new DiagResponse(req.testerName, req.service)\r\n  }\r\n  /**\r\n   * This function will return whether the response is a positive response or not.\r\n   * @returns bool\r\n   *\r\n   * @example\r\n   *\r\n   * ```ts\r\n   * Util.On('Can.testService.recv', (v)=>{\r\n   *     console.log('response is positive:', v.diagIsPositiveResponse())\r\n   * })\r\n   * ```\r\n   *\r\n   */\r\n  diagIsPositiveResponse() {\r\n    return !this.service.isNegativeResponse\r\n  }\r\n  /**\r\n   * This function will return the response code of one response.\r\n   *\r\n   * > **NOTE**: Positive response does not have response code.\r\n   *\r\n   * @returns response code.\r\n   *\r\n   * @example\r\n   *\r\n   * // here testService2 is a RequestDownload(0x34) service\r\n   * Util.On('Can.testService2.recv', (v)=>{\r\n   *     console.log('response code', v.diagGetResponseCode())\r\n   * })\r\n   *\r\n   */\r\n  diagGetResponseCode() {\r\n    if (!this.diagIsPositiveResponse()) {\r\n      return this.service.nrc\r\n    } else {\r\n      return undefined\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @category UDS\r\n */\r\nexport class DiagRequest extends Service {\r\n  private addr?: UdsAddress\r\n  constructor(testerName: string, service: ServiceItem, addr?: UdsAddress) {\r\n    super(testerName, cloneDeep(service), true)\r\n    this.addr = addr\r\n  }\r\n  /**\r\n   * Get the UDS address of the request.\r\n   * @returns {UdsAddress | undefined} The UDS address if set, undefined otherwise\r\n   */\r\n  getUdsAddress() {\r\n    return this.addr\r\n  }\r\n  /**\r\n   * @param {string} serviceName\r\n   *\r\n   * > serviceName's type '{{{serviceName}}}' is the string configured by Service.\r\n   *\r\n   * @example\r\n   *\r\n   *     ```ts\r\n   *     Util.Init(async ()=>{\r\n   *         // add param arrayParam in Service.\r\n   *         const testService = DiagRequest.from('Can.testService')\r\n   *         testService.On('send', ()=>{\r\n   *             console.log('send event happened.')\r\n   *         })\r\n   *     }\r\n   *     ```\r\n   */\r\n  static from(serviceName: ServiceName) {\r\n    const testerName = serviceName.split('.')[0]\r\n    const service = serviceMap.get(serviceName)\r\n    //request can accept job\r\n    if (service) {\r\n      return new DiagRequest(testerName, service)\r\n    } else {\r\n      throw new Error(`service ${serviceName} not found`)\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @category Util\r\n */\r\nexport class UtilClass {\r\n  private isMain = workerpool.isMainThread\r\n  private event = new Emittery<EventMap>()\r\n  private funcMap = new Map<Function, any>()\r\n  private testerName?: string\r\n  /**\r\n   * Register a handler function for a job.\r\n   * @param jobs \r\n   * Job name, valid format is \\<tester name\\>.\\<job name\\>\r\n   * @param func \r\n   * Handler function for the job\r\n   * \r\n   * @example\r\n   * \r\n   * ```ts\r\n   * Util.Register('Can.testJob', async (v) => {\r\n  \r\n   *     const testService = new DiagRequest();\r\n   *     const newData = Buffer.from([0x10, 0x01, 0x00, 0x01, 0x02]);\r\n   *     await testService.diagSetRaw(newData);\r\n   *     return [testService];\r\n   * });\r\n   * ```\r\n   */\r\n  Register(jobs: JobName, func: Jobs[keyof Jobs]) {\r\n    if (!this.isMain) {\r\n      workerpool.worker({\r\n        [jobs]: async (...args: any[]) => {\r\n          const cargs = args.map((item) => {\r\n            if (item instanceof Uint8Array) {\r\n              return Buffer.from(item)\r\n            } else {\r\n              return item\r\n            }\r\n          })\r\n          const v = await (func as any)(...cargs)\r\n          if (Array.isArray(v)) {\r\n            //each item must be DiagRequest\r\n            if (v.every((item) => item instanceof DiagRequest || item instanceof DiagJob)) {\r\n              return v.map((item) => item.service)\r\n            } else {\r\n              throw new Error('return value must be array of DiagRequest')\r\n            }\r\n          } else {\r\n            throw new Error('return value must be array of DiagRequest')\r\n          }\r\n        }\r\n      })\r\n    }\r\n  }\r\n  private async workerOn(event: ServiceNameAll, data: any): Promise<boolean> {\r\n    if (this.event.listenerCount(event) > 0) {\r\n      await this.event.emit(event, data)\r\n      if (event.endsWith('.send') || event.endsWith('.recv')) {\r\n        const eventArray = event.split('.')\r\n        eventArray[1] = '*'\r\n        await this.event.emit(eventArray.join('.') as any, data)\r\n      }\r\n      return true\r\n    } else if (event.endsWith('.send') || event.endsWith('.recv')) {\r\n      const eventArray = event.split('.')\r\n      eventArray[1] = '*'\r\n      if (this.event.listenerCount(eventArray.join('.') as any) > 0) {\r\n        await this.event.emit(eventArray.join('.') as any, data)\r\n        return true\r\n      } else {\r\n        return false\r\n      }\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n  /**\r\n   * Registers an event listener for CAN messages.\r\n   *\r\n   * @param id - The CAN message ID to listen for. If `true`, listens for all CAN messages.\r\n   * @param fc - The callback function to be invoked when a CAN message is received.\r\n   */\r\n  OnCan(id: number | true, fc: (msg: CanMessage) => void | Promise<void>) {\r\n    if (id === true) {\r\n      this.event.on('can' as any, fc)\r\n    } else {\r\n      this.event.on(`can.${id}` as any, fc)\r\n    }\r\n  }\r\n  /**\r\n   * Registers an event listener for signal updates from CAN/LIN databases.\r\n   * The signal will be emitted whenever the specified signal value changes.\r\n   *\r\n   * @param signal - The signal name to listen for (format: \"database.signalName\")\r\n   * @param fc - The callback function invoked when the signal is updated\r\n   * @param fc.rawValue - The raw signal value (number or Buffer)\r\n   * @param fc.physValue - The physical/scaled signal value (could be enum string or scaled number)\r\n   *\r\n   * @example\r\n   * ```typescript\r\n   * // Listen for engine RPM signal updates\r\n   * OnSignal(\"Engine.EngineRPM\", ({ rawValue, physValue }) => {\r\n   *   console.log(`Engine RPM: ${physValue} (raw: ${rawValue})`)\r\n   * })\r\n   *\r\n   * // Listen for gear position signal with enum values\r\n   * OnSignal(\"Transmission.GearPosition\", ({ rawValue, physValue }) => {\r\n   *   console.log(`Gear: ${physValue}`) // Could be \"Park\", \"Drive\", \"Reverse\", etc.\r\n   * })\r\n   *\r\n   * // Async callback example\r\n   * OnSignal(\"Battery.Voltage\", async ({ rawValue, physValue }) => {\r\n   *   if (physValue < 12.0) {\r\n   *     await sendWarning(\"Low battery voltage detected!\")\r\n   *   }\r\n   * })\r\n   * ```\r\n   */\r\n  OnSignal(\r\n    signal: SignalName,\r\n    fc: ({\r\n      rawValue,\r\n      physValue\r\n    }: {\r\n      rawValue: number | Buffer\r\n      physValue: any\r\n    }) => void | Promise<void>\r\n  ) {\r\n    this.event.on(signal as any, fc)\r\n  }\r\n\r\n  /**\r\n   * Registers a one-time event listener for signal updates from CAN/LIN databases.\r\n   * The listener will be automatically removed after the first signal update.\r\n   *\r\n   * @param signal - The signal name to listen for (format: \"database.signalName\")\r\n   * @param fc - The callback function invoked when the signal is updated (only once)\r\n   * @param fc.rawValue - The raw signal value (number or Buffer)\r\n   * @param fc.physValue - The physical/scaled signal value (could be enum string or scaled number)\r\n   *\r\n   * @example\r\n   * ```typescript\r\n   * // Wait for the first engine start signal\r\n   * OnSignalOnce(\"Engine.EngineStatus\", ({ rawValue, physValue }) => {\r\n   *   if (physValue === \"Running\") {\r\n   *     console.log(\"Engine started successfully!\")\r\n   *   }\r\n   * })\r\n   *\r\n   * // Wait for initialization complete signal\r\n   * OnSignalOnce(\"System.InitStatus\", async ({ rawValue, physValue }) => {\r\n   *   if (physValue === \"Complete\") {\r\n   *     await startDiagnosticSequence()\r\n   *   }\r\n   * })\r\n   * ```\r\n   */\r\n  OnSignalOnce(\r\n    signal: SignalName,\r\n    fc: ({\r\n      rawValue,\r\n      physValue\r\n    }: {\r\n      rawValue: number | Buffer\r\n      physValue: any\r\n    }) => void | Promise<void>\r\n  ) {\r\n    this.event.once(signal as any).then(fc)\r\n  }\r\n\r\n  /**\r\n   * Removes an event listener for signal updates from CAN/LIN databases.\r\n   * The specified callback function will no longer be invoked for signal updates.\r\n   *\r\n   * @param signal - The signal name to stop listening for (format: \"database.signalName\")\r\n   * @param fc - The exact callback function to remove (must be the same reference)\r\n   *\r\n   * @example\r\n   * ```typescript\r\n   * // Define a callback function\r\n   * const rpmCallback = ({ rawValue, physValue }) => {\r\n   *   console.log(`RPM: ${physValue}`)\r\n   * }\r\n   *\r\n   * // Register the listener\r\n   * OnSignal(\"Engine.EngineRPM\", rpmCallback)\r\n   *\r\n   * // Later, remove the listener\r\n   * OffSignal(\"Engine.EngineRPM\", rpmCallback)\r\n   *\r\n   * // Anonymous functions cannot be removed easily, so use named functions:\r\n   * // ❌ This won't work for removal:\r\n   * // OnSignal(\"Engine.RPM\", ({ physValue }) => console.log(physValue))\r\n   *\r\n   * // ✅ This will work for removal:\r\n   * const callback = ({ physValue }) => console.log(physValue)\r\n   * OnSignal(\"Engine.RPM\", callback)\r\n   * OffSignal(\"Engine.RPM\", callback)\r\n   * ```\r\n   */\r\n  OffSignal(\r\n    signal: SignalName,\r\n    fc: ({\r\n      rawValue,\r\n      physValue\r\n    }: {\r\n      rawValue: number | Buffer\r\n      physValue: any\r\n    }) => void | Promise<void>\r\n  ) {\r\n    this.event.off(signal as any, fc)\r\n  }\r\n  /**\r\n   * Get the tester name, valid in Tester script\r\n   * @returns {string}\r\n   */\r\n  getTesterName() {\r\n    return this.testerName\r\n  }\r\n  /**\r\n   * Registers an event listener for CAN messages that will be invoked once.\r\n   *\r\n   * @param id - The CAN message ID to listen for. If `true`, listens for all CAN messages.\r\n   * @param fc - The callback function to be invoked when a CAN message is received.\r\n   */\r\n  OnCanOnce(id: number | true, fc: (msg: CanMessage) => void | Promise<void>) {\r\n    if (id === true) {\r\n      this.event.once('can' as any).then(fc)\r\n    } else {\r\n      this.event.once(`can.${id}` as any).then(fc)\r\n    }\r\n  }\r\n  /**\r\n   * Unsubscribes from CAN messages.\r\n   *\r\n   * @param id - The identifier of the CAN message to unsubscribe from. If `true`, unsubscribes from all CAN messages.\r\n   * @param fc - The callback function to remove from the event listeners.\r\n   */\r\n  OffCan(id: number | true, fc: (msg: CanMessage) => void | Promise<void>) {\r\n    if (id === true) {\r\n      this.event.off('can' as any, fc)\r\n    } else {\r\n      this.event.off(`can.${id}` as any, fc)\r\n    }\r\n  }\r\n  /**\r\n   * Registers an event listener for LIN messages that will be invoked once.\r\n   *\r\n   * @param id - The LIN message ID or ${databaseName}.${frameName} to listen for. If `true`, listens for all LIN messages.\r\n   * @param fc - The callback function to be invoked when a LIN message is received.\r\n   */\r\n  OnLinOnce(id: number | string | true, fc: (msg: LinMsg) => void | Promise<void>) {\r\n    if (id === true) {\r\n      this.event.once('lin' as any).then(fc)\r\n    } else {\r\n      this.event.once(`lin.${id}` as any).then(fc)\r\n    }\r\n  }\r\n  /**\r\n   * Registers an event listener for LIN messages.\r\n   *\r\n   * @param id - The LIN message ID or ${databaseName}.${frameName} to listen for. If `true`, listens for all LIN messages.\r\n   * @param fc - The callback function to be invoked when a LIN message is received.\r\n   */\r\n  OnLin(id: number | string | true, fc: (msg: LinMsg) => void | Promise<void>) {\r\n    if (id === true) {\r\n      this.event.on('lin' as any, fc)\r\n    } else {\r\n      this.event.on(`lin.${id}` as any, fc)\r\n    }\r\n  }\r\n  /**\r\n   * Unsubscribes from LIN messages.\r\n   *\r\n   * @param id - The identifier of the LIN message to unsubscribe from. If `true`, unsubscribes from all LIN messages.\r\n   * @param fc - The callback function to remove from the event listeners.\r\n   */\r\n  OffLin(id: number | string | true, fc: (msg: LinMsg) => void | Promise<void>) {\r\n    if (id === true) {\r\n      this.event.off('lin' as any, fc)\r\n    } else {\r\n      this.event.off(`lin.${id}` as any, fc)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Registers an event listener for SOMEIP messages.\r\n   *\r\n   * @param id - The SOMEIP message identifier in format \"service.instance.method\" or \"service.instance.*\". If `true`, listens for all SOMEIP messages.\r\n   * @param fc - The callback function to be invoked when a SOMEIP message is received.\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * // Listen for all SOMEIP messages\r\n   * Util.OnSomeipMessage(true, (msg) => {\r\n   *   console.log('Received SOMEIP message:', msg);\r\n   * });\r\n   *\r\n   * // Listen for specific service/instance/method\r\n   * Util.OnSomeipMessage('0034.5678.90ab', (msg) => {\r\n   *   console.log('Received specific SOMEIP message:', msg);\r\n   * });\r\n   *\r\n   * // Listen for specific service/wildcard\r\n   * Util.OnSomeipMessage('0034.*.*', (msg) => {\r\n   *   console.log('Received specific SOMEIP message:', msg);\r\n   * });\r\n   * ```\r\n   */\r\n  OnSomeipMessage(\r\n    id: string | true,\r\n    fc: (msg: SomeipMessageRequest | SomeipMessageResponse) => void | Promise<void>\r\n  ) {\r\n    if (id === true) {\r\n      this.event.on('someip' as any, fc)\r\n    } else {\r\n      this.event.on(`someip.${id}` as any, fc)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Unsubscribes from SOMEIP messages.\r\n   *\r\n   * @param id - The SOMEIP message identifier to unsubscribe from. If `true`, unsubscribes from all SOMEIP messages.\r\n   * @param fc - The callback function to remove from the event listeners.\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * const handler = (msg) => console.log(msg);\r\n   *\r\n   * // Unsubscribe from all SOMEIP messages\r\n   * Util.OffSomeipMessage(true, handler);\r\n   *\r\n   * // Unsubscribe from specific service/instance/method\r\n   * Util.OffSomeipMessage('1234.5678.90ab', handler);\r\n   * ```\r\n   */\r\n  OffSomeipMessage(\r\n    id: string | true,\r\n    fc: (msg: SomeipMessageRequest | SomeipMessageResponse) => void | Promise<void>\r\n  ) {\r\n    if (id === true) {\r\n      this.event.off('someip' as any, fc)\r\n    } else {\r\n      this.event.off(`someip.${id}` as any, fc)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Registers a one-time event listener for SOMEIP messages.\r\n   * The listener will be automatically removed after being invoked once.\r\n   *\r\n   * @param id - The SOMEIP message identifier in format \"service.instance.method\" or \"service.instance.*\". If `true`, listens for all SOMEIP messages.\r\n   * @param fc - The callback function to be invoked once when a SOMEIP message is received.\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * // Listen once for any SOMEIP message\r\n   * Util.OnSomeipMessageOnce(true, (msg) => {\r\n   *   console.log('Received one SOMEIP message:', msg);\r\n   * });\r\n   *\r\n   * // Listen once for specific service/instance/method\r\n   * Util.OnSomeipMessageOnce('1234.5678.90ab', (msg) => {\r\n   *   console.log('Received one specific SOMEIP message:', msg);\r\n   * });\r\n   * ```\r\n   */\r\n  OnSomeipMessageOnce(\r\n    id: string | true,\r\n    fc: (msg: SomeipMessageRequest | SomeipMessageResponse) => void | Promise<void>\r\n  ) {\r\n    if (id === true) {\r\n      this.event.once('someip' as any).then(fc)\r\n    } else {\r\n      this.event.once(`someip.${id}` as any).then(fc)\r\n    }\r\n  }\r\n  /**\r\n   * Registers an event listener for a specific key.\r\n   *\r\n   * @param key - The key to listen for. Only the first character of the key is used, * is a wildcard.\r\n   * @param fc - The callback function to be executed when the event is triggered.\r\n   *             This can be a synchronous function or a function returning a Promise.\r\n   */\r\n  OnKey(key: string, fc: (key: string) => void | Promise<void>) {\r\n    key = key.slice(0, 1)\r\n    if (key) {\r\n      this.event.on(`keyDown${key}` as any, fc)\r\n    }\r\n  }\r\n  /**\r\n   * Registers an event listener for a specific key that will be invoked once.\r\n   *\r\n   * @param key - The key to listen for. Only the first character of the key is used, * is a wildcard.\r\n   * @param fc - The callback function to be executed when the event is triggered.\r\n   *             This can be a synchronous function or a function returning a Promise.\r\n   */\r\n  OnKeyOnce(key: string, fc: (key: string) => void | Promise<void>) {\r\n    key = key.slice(0, 1)\r\n    if (key) {\r\n      this.event.once(`keyDown${key}` as any).then(fc)\r\n    }\r\n  }\r\n  /**\r\n   * Unsubscribes from an event listener for a specific key.\r\n   *\r\n   * @param key - The key to unsubscribe from. Only the first character of the key is used, * is a wildcard.\r\n   * @param fc - The callback function to remove from the event listeners.\r\n   */\r\n  OffKey(key: string, fc: (key: string) => void | Promise<void>) {\r\n    key = key.slice(0, 1)\r\n    if (key) {\r\n      this.event.off(`keyDown${key}` as any, fc)\r\n    }\r\n  }\r\n  /**\r\n   * Registers an event listener for a variable update.\r\n   *\r\n   * @param name - The name of the variable to listen for, * is a wildcard.\r\n   * @param fc - The callback function to be executed when the variable is updated.\r\n   *             This can be a synchronous function or a function returning a Promise.\r\n   *             The callback receives an object with name and value properties.\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * // Listen for updates to a specific variable\r\n   * Util.OnVar('temperature', ({name, value}) => {\r\n   *   console.log(`${name} changed to ${value}`);\r\n   * });\r\n   *\r\n   * // Listen for all variable updates using wildcard\r\n   * Util.OnVar('*', ({name, value}) => {\r\n   *   console.log(`Variable ${name} updated to ${value}`);\r\n   * });\r\n   * ```\r\n   */\r\n  OnVar<Name extends keyof VariableMap>(\r\n    name: Name,\r\n    fc: ({ name, value }: { name: Name; value: VariableMap[Name] }) => void | Promise<void>\r\n  ) {\r\n    if (name) {\r\n      this.event.on(`varUpdate${name}` as any, fc)\r\n    }\r\n  }\r\n  /**\r\n   * Registers an event listener for a variable update that will be invoked once.\r\n   *\r\n   * @param name - The name of the variable to listen for, * is a wildcard.\r\n   * @param fc - The callback function to be executed when the variable is updated.\r\n   *             This can be a synchronous function or a function returning a Promise.\r\n   *             The callback receives an object with name and value properties.\r\n   */\r\n  OnVarOnce<Name extends keyof VariableMap>(\r\n    name: Name,\r\n    fc: ({ name, value }: { name: Name; value: VariableMap[Name] }) => void | Promise<void>\r\n  ) {\r\n    if (name) {\r\n      this.event.once(`varUpdate${name}` as any).then(fc)\r\n    }\r\n  }\r\n  /**\r\n   * Unsubscribes from an event listener for a variable update.\r\n   *\r\n   * @param name - The name of the variable to unsubscribe from, * is a wildcard.\r\n   * @param fc - The callback function to remove from the event listeners.\r\n   */\r\n  OffVar<Name extends keyof VariableMap>(\r\n    name: Name,\r\n    fc: ({ name, value }: { name: Name; value: VariableMap[Name] }) => void | Promise<void>\r\n  ) {\r\n    if (name) {\r\n      this.event.off(`varUpdate${name}` as any, fc)\r\n    }\r\n  }\r\n  /**\r\n   * Subscribe to an event once, invoking the registered function when the event is emitted.\r\n   * @param eventName\r\n   * Service name, formatted as \\<tester name\\>.\\<service name\\>.\\<send|recv\\>\r\n   *\r\n   * @param listener\r\n   * Function to be called when the event is emitted\r\n   *\r\n   * @example\r\n   *\r\n   * ```ts\r\n   * Util.OnOnce('Can.testService.send', async (req) => {\r\n   *    // The req is a `DiagRequest`\r\n   *    console.log(req.getServiceName(), ': send once');\r\n   * });\r\n   * ```\r\n   */\r\n  OnOnce<Name extends keyof EventMap>(\r\n    eventName: Name,\r\n    listener: (eventData: EventMap[Name]) => void | Promise<void>\r\n  ) {\r\n    if (eventName.endsWith('.send')) {\r\n      const warpFunc = async (v: any) => {\r\n        const testerName = eventName.split('.')[0]\r\n        const req = new DiagRequest(testerName, v.service, v.addr)\r\n        await listener(req as any)\r\n      }\r\n      this.event.once(eventName).then(warpFunc)\r\n    } else if (eventName.endsWith('.recv')) {\r\n      const warpFunc = async (v: any) => {\r\n        const testerName = eventName.split('.')[0]\r\n        const resp = new DiagResponse(testerName, v.service, v.addr)\r\n        await listener(resp as any)\r\n      }\r\n      this.event.once(eventName).then(warpFunc)\r\n    } else {\r\n      throw new Error(`event ${eventName} not support`)\r\n    }\r\n  }\r\n  /**\r\n   * Subscribe to an event, invoking the registered function when the event is emitted.\r\n   * @param eventName\r\n   * Service name, formatted as \\<tester name\\>.\\<service name\\>.\\<send|recv\\>\r\n   *\r\n   * @param listener\r\n   * Function to be called when the event is emitted\r\n   *\r\n   * @example\r\n   *\r\n   * > The `UDS` is a UDSClass type and has already been created by Service.\r\n   *\r\n   * 1. *send functions*\r\n   *\r\n   *     ```ts\r\n   *     Util.On('Can.testService.send', async (req) => {\r\n   *        // The req is a `DiagRequest`\r\n   *        console.log(req.getServiceName(), ': send');\r\n   *     });\r\n   *     ```\r\n   * 2. *recv function*\r\n   *\r\n   *     ```ts\r\n   *     Util.On('Can.testService.recv', async (req) => {\r\n   *        // The req is a `DiagResponse`\r\n   *        console.log(req.getServiceName(), ':recv');\r\n   *     });\r\n   *     ```\r\n   *\r\n   */\r\n  On<Name extends keyof EventMap>(\r\n    eventName: Name,\r\n    listener: (eventData: EventMap[Name]) => void | Promise<void>\r\n  ) {\r\n    if (eventName.endsWith('.send')) {\r\n      const warpFunc = async (v: any) => {\r\n        const testerName = eventName.split('.')[0]\r\n        const req = new DiagRequest(testerName, v.service, v.addr)\r\n        await listener(req as any)\r\n      }\r\n      this.event.on(eventName, warpFunc)\r\n      this.funcMap.set(listener, warpFunc)\r\n    } else if (eventName.endsWith('.recv')) {\r\n      const warpFunc = async (v: any) => {\r\n        const testerName = eventName.split('.')[0]\r\n        const resp = new DiagResponse(testerName, v.service, v.addr)\r\n        await listener(resp as any)\r\n      }\r\n      this.event.on(eventName, warpFunc)\r\n      this.funcMap.set(listener, warpFunc)\r\n    } else {\r\n      throw new Error(`event ${eventName} not support`)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Unsubscribe from an event.\r\n   *\r\n   * > Only non-anonymous functions can be unsubscribed.\r\n   *\r\n   * @param eventName\r\n   * Service name, formatted as \\<tester name\\>.\\<service name\\>.\\<send|recv\\>\r\n   *\r\n   * @param listener\r\n   * Function to be unsubscribed\r\n   *\r\n   * @example\r\n   *\r\n   * ```ts\r\n   * Util.On('Can.testService.send', ()=>{\r\n   *     console.log('this function will not be Off')\r\n   * })\r\n   *\r\n   * Util.Off('Can.testService.send', ()=>{\r\n   *     console.log('this function will not be Off')\r\n   * })\r\n   *\r\n   * ```\r\n   *\r\n   */\r\n  Off<Name extends keyof EventMap>(\r\n    eventName: Name,\r\n    listener: (eventData: EventMap[Name]) => void | Promise<void>\r\n  ) {\r\n    const func = this.funcMap.get(listener)\r\n    if (func) {\r\n      this.event.off(eventName, func)\r\n    }\r\n  }\r\n  private start(\r\n    val: Record<string, ServiceItem>,\r\n    testerName?: string,\r\n    testControl?: Record<number, boolean>\r\n  ) {\r\n    // process.chdir(projectPath)\r\n    this.testerName = testerName\r\n    global.vars = {}\r\n    if (global.dataSet) {\r\n      const vars: Record<string, VarItem> = cloneDeep(global.dataSet.vars)\r\n      const sysVars = getAllSysVar(global.dataSet.devices, global.dataSet.tester)\r\n      for (const v of Object.values(sysVars)) {\r\n        vars[v.id] = cloneDeep(v)\r\n      }\r\n      for (const key of Object.keys(vars)) {\r\n        const v = vars[key]\r\n\r\n        if (v.value) {\r\n          const parentName: string[] = []\r\n\r\n          // 递归查找所有父级名称\r\n          let currentVar = v\r\n          while (currentVar.parentId) {\r\n            const parent = vars[currentVar.parentId]\r\n            if (parent) {\r\n              parentName.unshift(parent.name) // 将父级名称添加到数组开头\r\n              currentVar = parent\r\n            } else {\r\n              break\r\n            }\r\n          }\r\n\r\n          parentName.push(v.name)\r\n          v.name = parentName.join('.')\r\n        }\r\n        global.vars[key] = v\r\n      }\r\n    }\r\n    for (const key of Object.keys(val)) {\r\n      //convert all param.value to buffer\r\n      const service = val[key]\r\n      for (const param of service.params) {\r\n        param.value = Buffer.from(param.value)\r\n      }\r\n      for (const param of service.respParams) {\r\n        param.value = Buffer.from(param.value)\r\n      }\r\n      serviceMap.set(key, service)\r\n    }\r\n    if (testControl) {\r\n      Object.assign(testEnableControl, testControl)\r\n    }\r\n    //check __varFc\r\n    if(this.event.listenerCount('__varFc' as any)==0){\r\n      initPromiseResolve()\r\n    }\r\n  }\r\n  private async canMsg(msg: CanMessage) {\r\n    await this.event.emit(`can.${msg.id}` as any, msg)\r\n    await this.event.emit('can' as any, msg)\r\n    //signal emit\r\n\r\n    if (msg.device) {\r\n      const device = Object.values(global.dataSet.devices).find(\r\n        (device) => device.canDevice && device.canDevice.name == msg.device\r\n      )\r\n      if (device && device.canDevice!.database) {\r\n        const db = global.dataSet.database.can[device.canDevice!.database]\r\n        if (db) {\r\n          const message = db.messages[msg.id]\r\n          if (message) {\r\n            //apply message to signal\r\n            writeMessageData(message, msg.data, db)\r\n            //emit signal\r\n            for (const signal of Object.values(message.signals)) {\r\n              await this.event.emit(`${db.name}.${signal.name}` as any, {\r\n                rawValue: signal.value,\r\n                physValue: signal.physValueEnum || signal.physValue\r\n              })\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  private async linMsg(msg: LinMsg) {\r\n    await this.event.emit(`lin.${msg.frameId}` as any, msg)\r\n    if (msg.database && msg.name) {\r\n      await this.event.emit(`lin.${msg.database}.${msg.name}` as any, msg)\r\n    }\r\n    await this.event.emit('lin' as any, msg)\r\n    //signal emit\r\n    if (msg.device) {\r\n      const device = Object.values(global.dataSet.devices).find(\r\n        (device) => device.linDevice && device.linDevice.name == msg.device\r\n      )\r\n      if (device && device.linDevice!.database) {\r\n        const db = global.dataSet.database.lin[device.linDevice!.database]\r\n\r\n        if (db) {\r\n          if (!msg.name) {\r\n            for (const frame of Object.values(db.frames)) {\r\n              if (frame.id === msg.frameId) {\r\n                msg.name = frame.name\r\n                break\r\n              }\r\n            }\r\n          }\r\n          if (msg.name) {\r\n            //find frame by frameId\r\n            const frame = db.frames[msg.name]\r\n            if (frame && frame.signals) {\r\n              //apply message to signal\r\n              writeLinMessageData(frame, msg.data, db)\r\n              //emit signal\r\n              for (const signal of Object.values(frame.signals)) {\r\n                const signalDef = db.signals[signal.name]\r\n                if (signalDef) {\r\n                  await this.event.emit(`${db.name}.${signal.name}` as any, {\r\n                    rawValue: signalDef.value,\r\n                    physValue: signalDef.physValueEnum || signalDef.physValue\r\n                  })\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  private async someipMsg(data: SomeipMessage) {\r\n    let someipMsg: SomeipMessageBase\r\n    if (data.messageType == SomeipMessageType.REQUEST) {\r\n      someipMsg = new SomeipMessageRequest(data)\r\n    } else if (data.messageType == SomeipMessageType.RESPONSE) {\r\n      someipMsg = new SomeipMessageResponse(data)\r\n    } else {\r\n      throw new Error(`someip message type not supported: ${data.messageType}`)\r\n    }\r\n\r\n    const msg = someipMsg.msg\r\n    msg.payload = Buffer.from(msg.payload)\r\n    await this.event.emit(\r\n      `someip.${msg.service.toString(16).padStart(4, '0')}.*.*` as any,\r\n      someipMsg\r\n    )\r\n    await this.event.emit(\r\n      `someip.${msg.service.toString(16).padStart(4, '0')}.${msg.instance.toString(16).padStart(4, '0')}.*` as any,\r\n      someipMsg\r\n    )\r\n    await this.event.emit(\r\n      `someip.${msg.service.toString(16).padStart(4, '0')}.${msg.instance.toString(16).padStart(4, '0')}.${msg.method.toString(16).padStart(4, '0')}` as any,\r\n      someipMsg\r\n    )\r\n    await this.event.emit('someip' as any, someipMsg)\r\n  }\r\n  private async keyDown(key: string) {\r\n    await this.event.emit(`keyDown${key}` as any, key)\r\n    await this.event.emit(`keyDown*` as any, key)\r\n  }\r\n  private async varUpdate(data: VarUpdateItem | VarUpdateItem[]) {\r\n    if (Array.isArray(data)) {\r\n      const promiseList: Promise<void>[] = []\r\n      for (const item of data) {\r\n        promiseList.push(this.event.emit(`varUpdate${item.name}` as any, item))\r\n        promiseList.push(this.event.emit(`varUpdate*` as any, item))\r\n      }\r\n      await Promise.all(promiseList)\r\n    } else {\r\n      await this.event.emit(`varUpdate${data.name}` as any, data)\r\n      await this.event.emit(`varUpdate*` as any, data)\r\n    }\r\n  }\r\n  private evnetDone(\r\n    id: number,\r\n    resp?: {\r\n      err?: string\r\n      data?: any\r\n    }\r\n  ) {\r\n    const item = emitMap.get(id)\r\n    if (item) {\r\n      if (resp) {\r\n        if (resp.err) {\r\n          item.reject(resp.err)\r\n        } else {\r\n          item.resolve(resp.data)\r\n        }\r\n      } else {\r\n        item.resolve()\r\n      }\r\n      emitMap.delete(id)\r\n    }\r\n  }\r\n  constructor() {\r\n    if (!this.isMain) {\r\n      workerpool.worker({\r\n        __on: this.workerOn.bind(this),\r\n        __start: this.start.bind(this),\r\n        __eventDone: this.evnetDone.bind(this)\r\n      })\r\n      this.event.on('__canMsg' as any, this.canMsg.bind(this))\r\n      this.event.on('__linMsg' as any, this.linMsg.bind(this))\r\n      this.event.on('__someipMsg' as any, this.someipMsg.bind(this))\r\n      this.event.on('__keyDown' as any, this.keyDown.bind(this))\r\n      this.event.on('__varUpdate' as any, this.varUpdate.bind(this))\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Register a function, this function will be invoked when UDSClass is initialized.\r\n   * @param fc Non-async or async function\r\n   *\r\n   * @example\r\n   *\r\n   * - Perform actions following UDS initialization using a normal function.\r\n   *     ```ts\r\n   *     Util.Init(()=>{\r\n   *       console.log('Hello UDS!')\r\n   *     })\r\n   *     ```\r\n   *\r\n   * - Perform actions following UDS initialization using an async function.\r\n   *     ```ts\r\n   *     Util.Init(async ()=>{\r\n   *       const file=await fs.readFile(path.join(process.env.PROJECT_ROOT,'file.bin'))\r\n   *       let length=file.length\r\n   *       console.log('Hello UDS file! file length is', length)\r\n   *     })\r\n   *     ```\r\n   *\r\n   * - The last registered function will override the previous ones.\r\n   *     ```ts\r\n   *     // The following code will be ignored\r\n   *     Util.Init(async ()=>{\r\n   *         console.log('1')\r\n   *     })\r\n   *\r\n   *     // The following code will take effect\r\n   *     Util.Init(async ()=>{\r\n   *         console.log('2')\r\n   *     })\r\n   *     ```\r\n   */\r\n  Init(fc: () => void | Promise<void>) {\r\n    this.event.clearListeners('__varFc' as any)\r\n    if (process.env.MODE == 'test') {\r\n      this.event.on('__varFc' as any, async () => {\r\n        try {\r\n          await fc()\r\n          initPromiseResolve()\r\n        } catch (e) {\r\n          initPromiseReject(e)\r\n        }\r\n      })\r\n    } else {\r\n      this.event.on('__varFc' as any, fc)\r\n    }\r\n  }\r\n  /**\r\n   * Register a function, this function will be invoked when UDSClass is terminated.\r\n   * @param fc Non-async or async function\r\n   *\r\n   * @example\r\n   *\r\n   *\r\n   */\r\n  End(fc: () => void | Promise<void>) {\r\n    this.event.clearListeners('__end' as any)\r\n    this.event.on('__end' as any, fc)\r\n  }\r\n}\r\n\r\n/**\r\n * Global instance of UDSClass, providing access to UDS functionality throughout the application.\r\n * Use this instance to interact with UDS features and services.\r\n *\r\n * @category Util\r\n * @type {UDSClass}\r\n *\r\n * @example\r\n * 1. *Init function*\r\n *     - Perform actions following UDS initialization using a normal function.\r\n *         ```ts\r\n *         Util.Init(()=>{\r\n *           console.log('Hello UDS!')\r\n *         })\r\n *         ```\r\n *\r\n *     - Perform actions following UDS initialization using an async function.\r\n *         ```ts\r\n *         Util.Init(async ()=>{\r\n *           const file=await fs.readFile(path.join(process.env.PROJECT_ROOT,'file.bin'))\r\n *           let length=file.length\r\n *           console.log('Hello UDS file! file length is', length)\r\n *         })\r\n *         ```\r\n *\r\n * 2. *send functions*\r\n *     > * This function will be called after the message has been sent.\r\n *     > * Please replace `Can.DiagRequest.send` with your own service item name. The format is `<tester name>.<service item name>.send`\r\n *\r\n *     ```ts\r\n *     Util.On('Can.DiagRequest.send', async (req) => {\r\n *        // The req is a `DiagRequest`\r\n *        console.log(req.getServiceName(), ': send');\r\n *     });\r\n *     ```\r\n *\r\n * 3. *recv function*\r\n *     > * This function will be called after the response message has been received.\r\n *     > * Please replace `Can.DiagRequest.recv` with your own service item name. The format is `<tester name>.<service item name>.recv`\r\n *\r\n *     ```ts\r\n *     Util.On('Can.DiagRequest.recv', async (req) => {\r\n *        // The req is a `DiagResponse`\r\n *        console.log(req.getServiceName(), ':recv');\r\n *     });\r\n *     ```\r\n *\r\n * 4. **More**\r\n *     > For more details, please refer to the {@link UtilClass | `UtilClass`} class.\r\n */\r\nexport const Util = new UtilClass()\r\nglobal.Util = Util\r\n\r\n/**\r\n * Sends a CAN message\r\n *\r\n * @category CAN\r\n * @param {CanMessage} msg - The CAN message to be sent\r\n * @returns {Promise<number>} - Returns a promise that resolves to sent timestamp\r\n * @example\r\n * ```ts\r\n * // Send a standard CAN message with 8 bytes of data\r\n *  const canMsg: CanMessage = {\r\n      id: 0x111, // CAN ID in hex\r\n      data: Buffer.from([0,1,2,3,4,5,6,7]), // 8 bytes of data\r\n      dir: 'OUT', // Output direction\r\n      msgType: {\r\n        idType: CAN_ID_TYPE.STANDARD, // Standard CAN frame\r\n        remote: false, // Not a remote frame\r\n        brs: false, // No bit rate switching\r\n        canfd: false // Not a CAN FD frame\r\n      }\r\n    }\r\n   const timestamp = await output(canMsg) // Send and get timestamp\r\n * ```\r\n */\r\nexport async function output(msg: CanMessage): Promise<number>\r\n/**\r\n * Sends a LIN message\r\n *\r\n * @category LIN\r\n * @param {LinMsg} msg - The LIN message to be sent\r\n * @returns {Promise<number>} - Returns a promise that resolves to sent timestamp\r\n */\r\nexport async function output(msg: LinMsg): Promise<number>\r\n/**\r\n * Sends a SOMEIP message\r\n *\r\n * @category SOMEIP\r\n * @param {SomeipMessage} msg - The SOMEIP message to be sent\r\n * @returns {Promise<number>} - Returns a promise that resolves to sent timestamp\r\n */\r\nexport async function output(msg: SomeipMessageBase): Promise<number>\r\nexport async function output(msg: CanMessage | LinMsg | SomeipMessageBase): Promise<number> {\r\n  const p: Promise<number> = new Promise((resolve, reject) => {\r\n    workerpool.workerEmit({\r\n      id: id,\r\n      event: 'output',\r\n      data: msg instanceof SomeipMessageBase ? msg.msg : msg\r\n    })\r\n    emitMap.set(id, { resolve, reject })\r\n    id++\r\n  })\r\n  return await p\r\n}\r\n\r\nexport { SomeipMessageRequest, SomeipMessageResponse }\r\n\r\n/**\r\n * Set a signal value\r\n *\r\n * @category LIN\r\n * @category CAN\r\n * @param {SignalName} signal - The signal to set, dbName.SignalName\r\n * @param {number|number[]} value - The value to set, can be single number or array\r\n * @returns {Promise<void>} - Returns a promise that resolves when value is set\r\n *\r\n * @example\r\n * ```ts\r\n * // Set single value signal\r\n * await setSignal(lin.xxxx', 123);\r\n *\r\n * // Set array value signal\r\n * await setSignal('lin.xxxx', [1, 2, 3, 4]);\r\n * ```\r\n */\r\nexport async function setSignal(\r\n  signal: SignalName,\r\n  value: number | number[] | string\r\n): Promise<void> {\r\n  const p: Promise<void> = new Promise((resolve, reject) => {\r\n    try {\r\n      setSignalNode({ signal, value })\r\n    } catch (e) {\r\n      reject(e)\r\n      return\r\n    }\r\n    workerpool.workerEmit({\r\n      id: id,\r\n      event: 'setSignal',\r\n      data: {\r\n        signal,\r\n        value\r\n      }\r\n    })\r\n    emitMap.set(id, { resolve, reject })\r\n    id++\r\n  })\r\n\r\n  return await p\r\n}\r\n\r\n/**\r\n * Get a signal's raw value and physical value\r\n *\r\n * @category LIN\r\n * @category CAN\r\n * @param {SignalName} signal - The signal name in format 'dbName.signalName'\r\n * @returns {Object} Object containing raw value and physical value\r\n * @returns {number|number[]|undefined} rawValue - The raw value of the signal\r\n * @returns {any} physValue - The physical value or enum value of the signal\r\n *\r\n * @example\r\n * ```ts\r\n * // Get signal value for CAN signal\r\n * const canSignal = getSignal('can.engineSpeed');\r\n * console.log('Raw value:', canSignal.rawValue); // e.g. 1000\r\n * console.log('Physical value:', canSignal.physValue); // e.g. '1000 rpm'\r\n *\r\n * // Get signal value for LIN signal\r\n * const linSignal = getSignal('lin.temperature');\r\n * console.log('Raw value:', linSignal.rawValue); // e.g. 50\r\n * console.log('Physical value:', linSignal.physValue); // e.g. '25°C'\r\n * ```\r\n */\r\nexport function getSignal(signal: SignalName): {\r\n  rawValue: number | number[] | undefined\r\n  physValue: any\r\n} {\r\n  const s = signal.split('.')\r\n  // 验证数据库是否存在\r\n  const db = Object.values(global.dataSet.database.can).find((db) => db.name == s[0])\r\n  if (db) {\r\n    const signalName = s[1]\r\n    let ss: Signal | undefined\r\n    for (const msg of Object.values(db.messages)) {\r\n      for (const signal of Object.values(msg.signals)) {\r\n        if (signal.name == signalName) {\r\n          ss = signal\r\n          break\r\n        }\r\n      }\r\n      if (ss) {\r\n        break\r\n      }\r\n    }\r\n    if (!ss) {\r\n      throw new Error(`Signal ${signalName} not found`)\r\n    }\r\n    return {\r\n      rawValue: ss.value || ss.initValue,\r\n      physValue: ss.physValueEnum || ss.physValue\r\n    }\r\n  } else {\r\n    const linDb = Object.values(global.dataSet.database.lin).find((db) => db.name == s[0])\r\n    if (linDb) {\r\n      const signalName = s[1]\r\n\r\n      const signal = linDb.signals[signalName]\r\n      if (!signal) {\r\n        throw new Error(`Signal ${signalName} not found`)\r\n      }\r\n      return {\r\n        rawValue: signal.value || signal.initValue,\r\n        physValue: signal.physValueEnum || signal.physValue\r\n      }\r\n    }\r\n  }\r\n\r\n  throw new Error(`Signal ${signal} not found`)\r\n}\r\n\r\n/**\r\n * Set a variable value\r\n *\r\n * @category Variable\r\n * @param {keyof VariableMap} name - The variable name\r\n * @param {number|number[]|string} value - The value to set, can be single number or array\r\n * @returns {Promise<void>} - Returns a promise that resolves when value is set\r\n *\r\n * @example\r\n * ```ts\r\n * // Set single value signal\r\n * await setVar('var2', 123);\r\n *\r\n * // Set array value signal\r\n * await setVar('namespace.var1', [1, 2, 3, 4]);\r\n * ```\r\n */\r\nexport async function setVar<T extends keyof VariableMap>(\r\n  name: T,\r\n  value: VariableMap[T]\r\n): Promise<void> {\r\n  const p: Promise<void> = new Promise((resolve, reject) => {\r\n    const { found, target } = setVarMain(name, value)\r\n    if (found && target) {\r\n      workerpool.workerEmit({\r\n        id: id,\r\n        event: 'varApi',\r\n        data: {\r\n          method: 'setVar',\r\n          name,\r\n          value\r\n        }\r\n      })\r\n      emitMap.set(id, { resolve, reject })\r\n\r\n      id++\r\n    } else {\r\n      reject(new Error(`var ${name} not found`))\r\n    }\r\n  })\r\n\r\n  return await p\r\n}\r\n\r\n/**\r\n * Get a variable value\r\n *\r\n * @category Variable\r\n * @param {string} varName - The name of the variable to get\r\n * @returns {VarItem} - Returns the variable value and metadata\r\n *\r\n * @example\r\n * ```ts\r\n * // Get a variable value\r\n * const var1 = getVar('namespace.var1');\r\n * console.log(var1.value); // Access the value\r\n * console.log(var1.type); // Access the type\r\n * ```\r\n */\r\nexport function getVar<T extends keyof VariableMap>(varName: T): VariableMap[T] {\r\n  return getVarMain(varName) as VariableMap[T]\r\n}\r\n\r\n/**\r\n * Run a UDS sequence\r\n *\r\n * @category UDS\r\n * @param {UdsSeqName} seqName - The name of the UDS sequence to run\r\n * @param {string} [device] - The optional device name to run the sequence on when multiple devices are connected\r\n * @returns {Promise<void>} - Returns a promise that resolves when sequence completes\r\n *\r\n * @example\r\n * ```ts\r\n * // Run a UDS sequence\r\n * await runUdsSeq('MySequence');\r\n *\r\n * // Run sequence on specific device\r\n * await runUdsSeq('MySequence', 'Device1');\r\n * ```\r\n */\r\nexport async function runUdsSeq(seqName: UdsSeqName, device?: string): Promise<void> {\r\n  const p: Promise<void> = new Promise((resolve, reject) => {\r\n    workerpool.workerEmit({\r\n      id: id,\r\n      event: 'runUdsSeq',\r\n      data: {\r\n        device,\r\n        name: seqName\r\n      }\r\n    })\r\n    emitMap.set(id, { resolve, reject })\r\n    id++\r\n  })\r\n\r\n  return await p\r\n}\r\n\r\n/**\r\n * Stop a running UDS sequence\r\n *\r\n * @category UDS\r\n * @param {UdsSeqName} seqName - The name of the UDS sequence to stop\r\n * @param {string} [device] - The optional device name when multiple devices are connected\r\n * @returns {Promise<void>} - Returns a promise that resolves when sequence is stopped\r\n *\r\n * @example\r\n * ```ts\r\n * // Stop a UDS sequence\r\n * await stopUdsSeq('MySequence');\r\n * ```\r\n */\r\nexport async function stopUdsSeq(seqName: UdsSeqName, device?: string): Promise<void> {\r\n  const p: Promise<void> = new Promise((resolve, reject) => {\r\n    workerpool.workerEmit({\r\n      id: id,\r\n      event: 'stopUdsSeq',\r\n      data: {\r\n        device,\r\n        name: seqName\r\n      }\r\n    })\r\n    emitMap.set(id, { resolve, reject })\r\n    id++\r\n  })\r\n\r\n  return await p\r\n}\r\n\r\nlet rightEntity: EntityAddr | undefined\r\n\r\n/**\r\n * Register a virtual entity\r\n *\r\n * @deprecated This API is deprecated and not working, enable it through the simulate_by field in the tester config\r\n *\r\n * @category DOIP\r\n * @param {EntityAddr} entity - The entity to be registered.\r\n * @param {string} ip - The IP address of the entity, if node connected to multiple devices.\r\n * @returns {Promise<void>} - Returns a promise that resolves when the entity is registered.\r\n */\r\nexport async function RegisterEthVirtualEntity(entity: VinInfo, ip?: string) {\r\n  //Don't do anything\r\n}\r\n\r\n//get dot input param type\r\ntype TestEventGenerator = Parameters<typeof dot>[0]\r\n\r\n// eslint-disable-next-line require-yield\r\nexport async function* reporter(source: TestEventGenerator) {\r\n  for await (const event of source) {\r\n    if (\r\n      event.type === 'test:start' ||\r\n      event.type === 'test:pass' ||\r\n      event.type === 'test:fail' ||\r\n      event.type === 'test:dequeue'\r\n    ) {\r\n      workerpool.workerEmit({\r\n        event: 'test',\r\n        id: id,\r\n        data: event\r\n      })\r\n      id++\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Start a LIN scheduler\r\n *\r\n * @category LIN\r\n * @param {string} schName - The name of the scheduler to start\r\n * @returns {Promise<void>} - Returns a promise that resolves when scheduler is started\r\n *\r\n * @example\r\n * ```ts\r\n * // Start scheduler with default settings\r\n * await linStartScheduler('MyScheduler');\r\n * ```\r\n */\r\nexport async function linStartScheduler(schName: string): Promise<void>\r\n/**\r\n * Start a LIN scheduler\r\n *\r\n * @category LIN\r\n * @param {string} schName - The name of the scheduler to start\r\n * @param {number} slot - The slot number for the scheduler\r\n * @returns {Promise<void>} - Returns a promise that resolves when scheduler is started\r\n *\r\n * @example\r\n * ```ts\r\n * // Start scheduler with specific slot\r\n * await linStartScheduler('MyScheduler', 0);\r\n * ```\r\n */\r\nexport async function linStartScheduler(schName: string, slot: number): Promise<void>\r\n/**\r\n * Start a LIN scheduler\r\n *\r\n * @category LIN\r\n * @param {string} schName - The name of the scheduler to start\r\n * @param {number} slot - The slot number for the scheduler\r\n * @param {string} device - The device name to start the scheduler on\r\n * @returns {Promise<void>} - Returns a promise that resolves when scheduler is started\r\n *\r\n * @example\r\n * ```ts\r\n * // Start scheduler with slot and device\r\n * await linStartScheduler('MyScheduler', 0, 'LinDevice1');\r\n * ```\r\n */\r\nexport async function linStartScheduler(\r\n  schName: string,\r\n  slot: number,\r\n  device: string\r\n): Promise<void>\r\n/**\r\n * Start a LIN scheduler\r\n *\r\n * @category LIN\r\n * @param {string} schName - The name of the scheduler to start\r\n * @param {number} slot - The slot number for the scheduler\r\n * @param {string} device - The device name to start the scheduler on\r\n * @param {boolean[]} activeCtrl - The active control array for the scheduler\r\n * @returns {Promise<void>} - Returns a promise that resolves when scheduler is started\r\n *\r\n * @example\r\n * ```ts\r\n * // Start scheduler with all parameters\r\n * await linStartScheduler('MyScheduler', 0, 'LinDevice1', [true, false, true, false]);\r\n * ```\r\n */\r\nexport async function linStartScheduler(\r\n  schName: string,\r\n  slot?: number,\r\n  device?: string,\r\n  activeCtrl?: boolean[]\r\n): Promise<void> {\r\n  const p: Promise<void> = new Promise((resolve, reject) => {\r\n    workerpool.workerEmit({\r\n      id: id,\r\n      event: 'linApi',\r\n      data: {\r\n        method: 'startSch',\r\n        device,\r\n        schName,\r\n        activeCtrl,\r\n        slot\r\n      }\r\n    })\r\n    emitMap.set(id, { resolve, reject })\r\n    id++\r\n  })\r\n  return await p\r\n}\r\n\r\n/**\r\n * Control the power of a LIN device\r\n *\r\n * @category LIN\r\n * @param {boolean} power - The power state to set\r\n * @param {string} [device] - The optional device name when multiple devices are connected\r\n * @returns {Promise<void>} - Returns a promise that resolves when power is set\r\n *\r\n * @note This function is only available on LinCable devices (https://app.whyengineer.com/docs/um/hardware/lincable.html)\r\n *\r\n * @example\r\n * ```ts\r\n * // Set power to true\r\n * await linPowerCtrl(true);\r\n *\r\n * // Set power to false on specific device\r\n * await linPowerCtrl(false, 'Device1');\r\n * ```\r\n */\r\nexport async function linPowerCtrl(power: boolean, device?: string) {\r\n  const p: Promise<void> = new Promise((resolve, reject) => {\r\n    workerpool.workerEmit({\r\n      id: id,\r\n      event: 'linApi',\r\n      data: {\r\n        method: 'powerCtrl',\r\n        device,\r\n        power\r\n      }\r\n    })\r\n    emitMap.set(id, { resolve, reject })\r\n    id++\r\n  })\r\n  return await p\r\n}\r\n\r\n/**\r\n * Stop a LIN scheduler\r\n *\r\n * @category LIN\r\n * @param {string} [device] - The optional device name when multiple devices are connected\r\n * @returns {Promise<void>} - Returns a promise that resolves when scheduler is stopped\r\n *\r\n * @example\r\n * ```ts\r\n * // Stop LIN scheduler\r\n * await linStopScheduler();\r\n *\r\n * // Stop scheduler on specific device\r\n * await linStopScheduler('Device1');\r\n * ```\r\n */\r\nexport async function linStopScheduler(device?: string): Promise<void> {\r\n  const p: Promise<void> = new Promise((resolve, reject) => {\r\n    workerpool.workerEmit({\r\n      id: id,\r\n      event: 'linApi',\r\n      data: {\r\n        method: 'stopSch',\r\n        device\r\n      }\r\n    })\r\n    emitMap.set(id, { resolve, reject })\r\n    id++\r\n  })\r\n  return await p\r\n}\r\n\r\n/**\r\n * Set PWM duty cycle\r\n *\r\n * @category PWM\r\n * @param {Object} value - The PWM configuration object\r\n * @param {number} value.duty - Duty cycle percentage (0-100)\r\n * @param {string} [value.device] - The optional device name when multiple devices are connected\r\n * @returns {Promise<void>} - Returns a promise that resolves when duty cycle is set\r\n *\r\n * @example\r\n * ```ts\r\n * // Set duty cycle to 50%\r\n * await setPwmDuty({duty: 50});\r\n *\r\n * // Set duty cycle on specific device\r\n * await setPwmDuty({duty: 75, device: 'Device1'});\r\n * ```\r\n */\r\nexport async function setPwmDuty(value: { duty: number; device?: string }) {\r\n  const p: Promise<void> = new Promise((resolve, reject) => {\r\n    workerpool.workerEmit({\r\n      id: id,\r\n      event: 'pwmApi',\r\n      data: {\r\n        method: 'setDuty',\r\n        duty: value.duty,\r\n        device: value.device\r\n      }\r\n    })\r\n    emitMap.set(id, { resolve, reject })\r\n    id++\r\n  })\r\n  return await p\r\n}\r\n/**\r\n * Get a frame from database by name\r\n * \r\n * @category LIN\r\n * @param {('lin')} dbType - The type of database\r\n * @param {string} dbName - The name of the database\r\n * @param {string} frameName - The name of the frame to retrieve\r\n * \r\n * @returns {LinMsg} The frame object from the database\r\n * \r\n * @example\r\n * ```ts\r\n * // Get a LIN frame\r\n * const linFrame = getFrameFromDB('lin', 'myLinDb', 'Frame1');\r\n\r\n */\r\nexport function getFrameFromDB(dbType: 'lin', dbName: string, frameName: string): LinMsg\r\n\r\n/**\r\n * Get a frame from database by name\r\n *\r\n * @category CAN\r\n * @param {('can')} dbType - The type of database\r\n * @param {string} dbName - The name of the database\r\n * @param {string} frameName - The name of the frame to retrieve\r\n * @returns {CanMessage} The frame object from the database\r\n *\r\n * @example\r\n * ```ts\r\n * // Get a CAN frame\r\n * const canFrame = getFrameFromDB('can', 'myCanDb', 'Frame2');\r\n * ```\r\n */\r\nexport function getFrameFromDB(dbType: 'can', dbName: string, frameName: string): CanMessage\r\n// Implementation\r\nexport function getFrameFromDB(\r\n  dbType: 'lin' | 'can',\r\n  dbName: string,\r\n  frameName: string\r\n): LinMsg | CanMessage {\r\n  if (dbType == 'lin') {\r\n    const db = Object.values(global.dataSet.database.lin).find((db) => db.name == dbName)\r\n    if (db) {\r\n      const frame = db.frames[frameName]\r\n      if (frame) {\r\n        // 判断方向\r\n        let direction = LinDirection.RECV\r\n        if (frame.publishedBy === db.node.master.nodeName) {\r\n          direction = LinDirection.SEND\r\n        }\r\n\r\n        // 计算校验类型\r\n        const checksumType =\r\n          frame.id === 0x3c || frame.id === 0x3d\r\n            ? LinChecksumType.CLASSIC\r\n            : LinChecksumType.ENHANCED\r\n        const ret: LinMsg = {\r\n          frameId: frame.id,\r\n          data: getFrameData(db, frame),\r\n          direction,\r\n          checksumType,\r\n          database: db.id,\r\n          name: frame.name\r\n        }\r\n        return ret\r\n      } else {\r\n        // is event frame\r\n        const eventFrame = db.eventTriggeredFrames[frameName]\r\n        if (eventFrame) {\r\n          const containsFrame = eventFrame.frameNames[0]\r\n          const frame = db.frames[containsFrame]\r\n          if (frame) {\r\n            const ret: LinMsg = {\r\n              frameId: eventFrame.frameId,\r\n              data: Buffer.alloc(frame.frameSize + 1),\r\n              direction: LinDirection.RECV,\r\n              checksumType: LinChecksumType.CLASSIC,\r\n              database: db.id,\r\n              name: eventFrame.name,\r\n              isEvent: true\r\n            }\r\n            return ret\r\n          }\r\n        }\r\n\r\n        // const a = data.frameName.split('.')\r\n        // const slaveNodeName = a[0]\r\n        // const id = a[1]\r\n\r\n        // //find slave node\r\n        // const slaveNode = db.nodeAttrs[slaveNodeName]\r\n        // if (slaveNode) {\r\n        //   if (id === 'ReadByIdentifier') {\r\n        //     const data = Buffer.alloc(8)\r\n        //     data.writeUInt8(slaveNode.initial_NAD || 0, 0)\r\n        //     data.writeUInt8(0x6, 1)\r\n        //     data.writeUInt8(0xb2, 2)\r\n        //     data.writeUInt16LE(slaveNode.supplier_id, 4)\r\n        //     data.writeUInt16LE(slaveNode.function_id, 6)\r\n        //     const ret: LinMsg = {\r\n        //       frameId: 0x3c,\r\n        //       data,\r\n        //       direction: LinDirection.SEND,\r\n        //       checksumType: LinChecksumType.CLASSIC,\r\n        //       database: db.id,\r\n        //       name: 'ReadByIdentifier',\r\n        //       isEvent: false\r\n        //     }\r\n        //     return ret\r\n        //   } else if (id === 'AssignNAD') {\r\n        //     const data = Buffer.alloc(8)\r\n        //     data.writeUInt8(slaveNode.initial_NAD || 0, 0)\r\n        //     data.writeUInt8(0x6, 1)\r\n        //     data.writeUInt8(0xb0, 2)\r\n        //     data.writeUInt16LE(slaveNode.supplier_id, 3)\r\n        //     data.writeUInt16LE(slaveNode.function_id, 5)\r\n        //     const ret: LinMsg = {\r\n        //       frameId: 0x3c,\r\n        //       data,\r\n        //       direction: LinDirection.SEND,\r\n        //       checksumType: LinChecksumType.CLASSIC,\r\n        //       database: db.id,\r\n        //       name: 'AssignNAD',\r\n        //       isEvent: false\r\n        //     }\r\n        //     return ret\r\n        //   }\r\n        // }\r\n      }\r\n      throw new Error(`frame ${frameName} not found`)\r\n    } else {\r\n      throw new Error(`database ${dbName} not found`)\r\n    }\r\n  } else if (dbType == 'can') {\r\n    let ret: CanMessage | undefined\r\n    // 查找 CAN 数据库\r\n    const db = Object.values(global.dataSet.database.can).find((db) => db.name == dbName)\r\n    if (db) {\r\n      const msg = Object.values(db.messages).find((m) => m.name === frameName)\r\n\r\n      if (msg) {\r\n        // 构造 CanMessage\r\n        return {\r\n          id: msg.id,\r\n          name: msg.name,\r\n          dir: 'OUT',\r\n          data: getMessageData(msg),\r\n          msgType: {\r\n            idType: msg.extId ? CAN_ID_TYPE.EXTENDED : CAN_ID_TYPE.STANDARD,\r\n            brs: false,\r\n            canfd: msg.canfd || false,\r\n            remote: false\r\n          },\r\n          database: db.id\r\n        }\r\n      } else {\r\n        throw new Error(`CAN message ${frameName} not found`)\r\n      }\r\n    } else {\r\n      throw new Error(`CAN database ${dbName} not found`)\r\n    }\r\n  } else {\r\n    throw new Error(`database type ${dbType} not supported`)\r\n  }\r\n}\r\n","export function setVar(name: string, value: number | string | number[]) {\r\n  let found = false\r\n  const a = Object.values(global.vars)\r\n  //\r\n\r\n  //no group\r\n  const target = a.find((v) => v.name == name && v.value != undefined)\r\n  if (target) {\r\n    if (target.value == undefined) {\r\n      return { found: false, target }\r\n    }\r\n    //type check\r\n    if (target.value.type == 'number' && !Number.isNaN(Number(value))) {\r\n      target.value.value = Number(value)\r\n      found = true\r\n    } else if (target.value.type == 'string' && typeof value === 'string') {\r\n      target.value.value = value\r\n      found = true\r\n    } else if (target.value.type == 'array' && Array.isArray(value)) {\r\n      target.value.value = value\r\n      found = true\r\n    }\r\n  }\r\n\r\n  return { found, target }\r\n}\r\nexport function getVar(name: string): number | string | number[] {\r\n  const target = Object.values(global.vars).find((v) => v.name == name)\r\n  if (target && target.value) {\r\n    if (target.value.type == 'number') {\r\n      if (target.value.value == undefined) {\r\n        return Number(target.value.initValue)\r\n      } else {\r\n        return Number(target.value.value)\r\n      }\r\n    } else if (target.value.type == 'string') {\r\n      if (target.value.value == undefined) {\r\n        return target.value.initValue || ''\r\n      } else {\r\n        return target.value.value || ''\r\n      }\r\n    } else if (target.value.type == 'array') {\r\n      if (target.value.value == undefined) {\r\n        return (target.value.initValue || []).map((v) => Number(v))\r\n      } else {\r\n        return (target.value.value || []).map((v) => Number(v))\r\n      }\r\n    }\r\n  }\r\n  throw new Error(`var ${name} not found`)\r\n}\r\n\r\nexport function setVarByKey(key: string, value: number | string | number[]) {\r\n  const target = global.vars[key]\r\n  if (target && target.value) {\r\n    if (target.value.type == 'number' && typeof value === 'number') {\r\n      target.value.value = value\r\n      return { found: true, target }\r\n    } else if (target.value.type == 'string' && typeof value === 'string') {\r\n      target.value.value = value\r\n      return { found: true, target }\r\n    } else if (target.value.type == 'array' && Array.isArray(value)) {\r\n      target.value.value = value\r\n      return { found: true, target }\r\n    }\r\n  }\r\n  return { found: false, target }\r\n}\r\n\r\n"],"names":["undefined","FUNC_ERROR_TEXT","HASH_UNDEFINED","PLACEHOLDER","WRAP_PARTIAL_FLAG","WRAP_ARY_FLAG","INFINITY","MAX_SAFE_INTEGER","NAN","MAX_ARRAY_LENGTH","wrapFlags","argsTag","arrayTag","boolTag","dateTag","errorTag","funcTag","genTag","mapTag","numberTag","objectTag","promiseTag","regexpTag","setTag","stringTag","symbolTag","weakMapTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","reEscapedHtml","reUnescapedHtml","reHasEscapedHtml","RegExp","source","reHasUnescapedHtml","reEscape","reEvaluate","reInterpolate","reIsDeepProp","reIsPlainProp","rePropName","reRegExpChar","reHasRegExpChar","reTrimStart","reWhitespace","reWrapComment","reWrapDetails","reSplitDetails","reAsciiWord","reForbiddenIdentifierChars","reEscapeChar","reEsTemplate","reFlags","reIsBadHex","reIsBinary","reIsHostCtor","reIsOctal","reIsUint","reLatin","reNoMatch","reUnescapedString","rsAstralRange","rsComboRange","rsComboMarksRange","rsDingbatRange","rsLowerRange","rsUpperRange","rsVarRange","rsBreakRange","rsMathOpRange","rsAstral","rsBreak","rsCombo","rsDigits","rsDingbat","rsLower","rsMisc","rsFitz","rsNonAstral","rsRegional","rsSurrPair","rsUpper","rsZWJ","rsMiscLower","rsMiscUpper","rsOptContrLower","rsOptContrUpper","reOptMod","rsModifier","rsOptVar","rsSeq","join","rsEmoji","rsSymbol","reApos","reComboMark","reUnicode","reUnicodeWord","reHasUnicode","reHasUnicodeWord","contextProps","templateCounter","typedArrayTags","cloneableTags","stringEscapes","freeParseFloat","parseFloat","freeParseInt","parseInt","freeGlobal","global","Object","freeSelf","self","root","Function","freeExports","exports","nodeType","freeModule","module","moduleExports","freeProcess","process","nodeUtil","require","types","binding","e","nodeIsArrayBuffer","isArrayBuffer","nodeIsDate","isDate","nodeIsMap","isMap","nodeIsRegExp","isRegExp","nodeIsSet","isSet","nodeIsTypedArray","isTypedArray","apply","func","thisArg","args","length","call","arrayAggregator","array","setter","iteratee","accumulator","index","value","arrayEach","arrayEachRight","arrayEvery","predicate","arrayFilter","resIndex","result","arrayIncludes","baseIndexOf","arrayIncludesWith","comparator","arrayMap","Array","arrayPush","values","offset","arrayReduce","initAccum","arrayReduceRight","arraySome","asciiSize","baseProperty","baseFindKey","collection","eachFunc","key","baseFindIndex","fromIndex","fromRight","strictIndexOf","baseIsNaN","baseIndexOfWith","baseMean","baseSum","object","basePropertyOf","baseReduce","current","baseTimes","n","baseTrim","string","slice","trimmedEndIndex","replace","baseUnary","baseValues","props","cacheHas","cache","has","charsStartIndex","strSymbols","chrSymbols","charsEndIndex","deburrLetter","escapeHtmlChar","escapeStringChar","chr","hasUnicode","test","mapToArray","map","size","forEach","overArg","transform","arg","replaceHolders","placeholder","setToArray","set","setToPairs","stringSize","lastIndex","unicodeSize","stringToArray","match","unicodeToArray","split","asciiToArray","charAt","unescapeHtmlChar","_","runInContext","context","uid","defaults","pick","Date","Error","Math","String","TypeError","arrayProto","prototype","funcProto","objectProto","coreJsData","funcToString","toString","hasOwnProperty","idCounter","maskSrcKey","exec","keys","IE_PROTO","nativeObjectToString","objectCtorString","oldDash","reIsNative","Buffer","Symbol","Uint8Array","allocUnsafe","getPrototype","getPrototypeOf","objectCreate","create","propertyIsEnumerable","splice","spreadableSymbol","isConcatSpreadable","symIterator","iterator","symToStringTag","toStringTag","defineProperty","getNative","ctxClearTimeout","clearTimeout","ctxNow","now","ctxSetTimeout","setTimeout","nativeCeil","ceil","nativeFloor","floor","nativeGetSymbols","getOwnPropertySymbols","nativeIsBuffer","isBuffer","nativeIsFinite","isFinite","nativeJoin","nativeKeys","nativeMax","max","nativeMin","min","nativeNow","nativeParseInt","nativeRandom","random","nativeReverse","reverse","DataView","Map","Promise","Set","WeakMap","nativeCreate","metaMap","realNames","dataViewCtorString","toSource","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","symbolValueOf","valueOf","symbolToString","lodash","isObjectLike","isArray","LazyWrapper","LodashWrapper","wrapperClone","baseCreate","proto","isObject","baseLodash","chainAll","this","__wrapped__","__actions__","__chain__","__index__","__values__","__dir__","__filtered__","__iteratees__","__takeCount__","__views__","Hash","entries","clear","entry","ListCache","MapCache","SetCache","__data__","add","Stack","data","arrayLikeKeys","inherited","isArr","isArg","isArguments","isBuff","isType","skipIndexes","isIndex","push","arraySample","baseRandom","arraySampleSize","shuffleSelf","copyArray","baseClamp","arrayShuffle","assignMergeValue","eq","baseAssignValue","assignValue","objValue","assocIndexOf","baseAggregator","baseEach","baseAssign","copyObject","baseAt","paths","skip","get","number","lower","upper","baseClone","bitmask","customizer","stack","isDeep","isFlat","isFull","constructor","input","initCloneArray","tag","getTag","isFunc","cloneBuffer","initCloneObject","getSymbolsIn","copySymbolsIn","keysIn","baseAssignIn","getSymbols","copySymbols","symbol","Ctor","cloneArrayBuffer","dataView","buffer","byteOffset","byteLength","cloneDataView","cloneTypedArray","regexp","cloneRegExp","initCloneByTag","stacked","subValue","getAllKeysIn","getAllKeys","baseConformsTo","baseDelay","wait","baseDifference","includes","isCommon","valuesLength","outer","computed","valuesIndex","templateSettings","pop","getMapData","pairs","LARGE_ARRAY_SIZE","createBaseEach","baseForOwn","baseEachRight","baseForOwnRight","baseEvery","baseExtremum","isSymbol","baseFilter","baseFlatten","depth","isStrict","isFlattenable","baseFor","createBaseFor","baseForRight","baseFunctions","isFunction","baseGet","path","castPath","toKey","baseGetAllKeys","keysFunc","symbolsFunc","baseGetTag","isOwn","unmasked","getRawTag","objectToString","baseGt","other","baseHas","baseHasIn","baseIntersection","arrays","othLength","othIndex","caches","maxLength","Infinity","seen","baseInvoke","parent","last","baseIsArguments","baseIsEqual","equalFunc","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","equalArrays","name","message","convert","isPartial","equalByTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","objProps","objLength","objStacked","othStacked","skipCtor","othValue","compared","objCtor","othCtor","equalObjects","baseIsEqualDeep","baseIsMatch","matchData","noCustomizer","srcValue","COMPARE_PARTIAL_FLAG","baseIsNative","baseIteratee","identity","baseMatchesProperty","baseMatches","property","baseKeys","isPrototype","baseLt","baseMap","isArrayLike","getMatchData","matchesStrictComparable","isKey","isStrictComparable","hasIn","baseMerge","srcIndex","mergeFunc","safeGet","newValue","isTyped","isArrayLikeObject","isPlainObject","toPlainObject","baseMergeDeep","baseNth","baseOrderBy","iteratees","orders","getIteratee","criteria","sort","objCriteria","othCriteria","ordersLength","compareAscending","compareMultiple","baseSortBy","basePickBy","baseSet","basePullAll","indexOf","basePullAt","indexes","previous","baseUnset","baseRepeat","baseRest","start","setToString","overRest","baseSample","baseSampleSize","nested","baseSetData","baseSetToString","constant","baseShuffle","baseSlice","end","baseSome","baseSortedIndex","retHighest","low","high","mid","baseSortedIndexBy","valIsNaN","valIsNull","valIsSymbol","valIsUndefined","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","setLow","baseSortedUniq","baseToNumber","baseToString","baseUniq","createSet","seenIndex","baseUpdate","updater","baseWhile","isDrop","baseWrapperValue","actions","action","baseXor","baseZipObject","assignFunc","valsLength","castArrayLikeObject","castFunction","stringToPath","castRest","castSlice","id","copy","arrayBuffer","typedArray","valIsDefined","valIsReflexive","composeArgs","partials","holders","isCurried","argsIndex","argsLength","holdersLength","leftIndex","leftLength","rangeLength","isUncurried","composeArgsRight","holdersIndex","rightIndex","rightLength","isNew","createAggregator","initializer","createAssigner","assigner","sources","guard","isIterateeCall","iterable","createCaseFirst","methodName","trailing","createCompounder","callback","words","deburr","createCtor","arguments","thisBinding","createFind","findIndexFunc","createFlow","flatRest","funcs","prereq","thru","wrapper","getFuncName","funcName","getData","isLaziable","plant","createHybrid","partialsRight","holdersRight","argPos","ary","arity","isAry","isBind","isBindKey","isFlip","getHolder","holdersCount","countHolders","newHolders","createRecurry","fn","arrLength","oldArray","reorder","createInverter","toIteratee","baseInverter","createMathOperation","operator","defaultValue","createOver","arrayFunc","createPadding","chars","charsLength","createRange","step","toFinite","baseRange","createRelationalOperation","toNumber","wrapFunc","isCurry","newData","setData","setWrapToString","createRound","precision","toInteger","pair","noop","createToPairs","baseToPairs","createWrap","srcBitmask","newBitmask","isCombo","mergeData","createCurry","createPartial","createBind","customDefaultsAssignIn","customDefaultsMerge","customOmitClone","arrStacked","arrValue","flatten","otherFunc","type","getValue","stubArray","hasPath","hasFunc","isLength","ArrayBuffer","resolve","ctorString","isMaskable","stubFalse","otherArgs","shortOut","reference","details","insertWrapDetails","updateWrapDetails","getWrapDetails","count","lastCalled","stamp","remaining","rand","memoize","charCodeAt","quote","subString","clone","difference","differenceBy","differenceWith","findIndex","findLastIndex","head","intersection","mapped","intersectionBy","intersectionWith","pull","pullAll","pullAt","union","unionBy","unionWith","unzip","group","unzipWith","without","xor","xorBy","xorWith","zip","zipWith","chain","interceptor","wrapperAt","countBy","find","findLast","forEachRight","groupBy","invokeMap","keyBy","partition","sortBy","before","bind","bindKey","WRAP_BIND_FLAG","debounce","options","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","invokeFunc","time","shouldInvoke","timeSinceLastCall","timerExpired","trailingEdge","timeWaiting","remainingWait","debounced","isInvoking","leadingEdge","cancel","flush","defer","delay","resolver","memoized","Cache","negate","overArgs","transforms","funcsLength","partial","partialRight","rearg","gt","gte","isError","isInteger","isNumber","isString","lt","lte","toArray","next","done","iteratorToArray","remainder","toLength","isBinary","assign","assignIn","assignInWith","assignWith","at","propsIndex","propsLength","defaultsDeep","mergeWith","invert","invertBy","invoke","nativeKeysIn","isProto","baseKeysIn","merge","omit","CLONE_DEEP_FLAG","basePick","pickBy","prop","toPairs","toPairsIn","camelCase","word","toLowerCase","capitalize","upperFirst","kebabCase","lowerCase","lowerFirst","snakeCase","startCase","upperCase","toUpperCase","pattern","hasUnicodeWord","unicodeWords","asciiWords","attempt","bindAll","methodNames","flow","flowRight","method","methodOf","mixin","over","overEvery","overSome","basePropertyDeep","range","rangeRight","augend","addend","divide","dividend","divisor","multiply","multiplier","multiplicand","round","subtract","minuend","subtrahend","after","castArray","chunk","compact","concat","cond","conforms","baseConforms","properties","curry","curryRight","drop","dropRight","dropRightWhile","dropWhile","fill","baseFill","filter","flatMap","flatMapDeep","flatMapDepth","flattenDeep","flattenDepth","flip","fromPairs","functions","functionsIn","initial","mapKeys","mapValues","matches","matchesProperty","nthArg","omitBy","once","orderBy","propertyOf","pullAllBy","pullAllWith","reject","remove","rest","sampleSize","setWith","shuffle","sortedUniq","sortedUniqBy","separator","limit","spread","tail","take","takeRight","takeRightWhile","takeWhile","tap","throttle","toPath","isArrLike","unary","uniq","uniqBy","uniqWith","unset","update","updateWith","valuesIn","wrap","zipObject","zipObjectDeep","entriesIn","extend","extendWith","clamp","cloneDeep","cloneDeepWith","cloneWith","conformsTo","defaultTo","endsWith","target","position","escape","escapeRegExp","every","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","inRange","baseInRange","isBoolean","isElement","isEmpty","isEqual","isEqualWith","isMatch","isMatchWith","isNaN","isNative","isNil","isNull","isSafeInteger","isUndefined","isWeakMap","isWeakSet","lastIndexOf","strictLastIndexOf","maxBy","mean","meanBy","minBy","stubObject","stubString","stubTrue","nth","noConflict","pad","strLength","padEnd","padStart","radix","floating","temp","reduce","reduceRight","repeat","sample","some","sortedIndex","sortedIndexBy","sortedIndexOf","sortedLastIndex","sortedLastIndexBy","sortedLastIndexOf","startsWith","sum","sumBy","template","settings","isEscaping","isEvaluating","imports","importsKeys","importsValues","interpolate","reDelimiters","evaluate","sourceURL","escapeValue","interpolateValue","esTemplateValue","evaluateValue","variable","times","toLower","toSafeInteger","toUpper","trim","trimEnd","trimStart","truncate","omission","search","substring","newEnd","unescape","uniqueId","prefix","each","eachRight","first","VERSION","isFilter","takeName","dropName","checkIteratee","isTaker","lodashFunc","retUnwrapped","isLazy","useLazy","isHybrid","isUnwrapped","onlyLazy","chainName","dir","isRight","view","getView","iterLength","takeCount","iterIndex","commit","wrapped","toJSON","dlopen","__dirname","error","WorkerHandler","environment","DEBUG_PORT_ALLOCATOR","Pool","script","workers","tasks","forkArgs","freeze","forkOpts","workerOpts","workerThreadOpts","debugPortStart","nodeWorker","workerType","maxQueueSize","workerTerminateTimeout","onCreateWorker","onTerminateWorker","emitStdStreams","maxWorkers","validateMaxWorkers","cpus","minWorkers","validateMinWorkers","_ensureMinWorkers","_boundNext","_next","ensureWorkerThreads","params","task","timeout","originalTimeout","promise","proxy","pool","then","methods","worker","_getWorker","me","shift","pending","catch","terminated","_removeWorker","i","busy","_createWorkerHandler","releasePort","debugPort","_removeWorkerFromList","terminate","err","force","removeWorker","promises","termPromise","terminateAndNotify","always","all","stats","totalWorkers","busyWorkers","idleWorkers","pendingTasks","activeTasks","overriddenParams","nextAvailableStartingAt","handler","SyntaxError","_onSuccess","_onFail","resolved","rejected","_process","onSuccess","onFail","s","_then","f","_resolve","_reject","CancellationError","timer","TimeoutError","res","results","p","validateOptions","forkOptsNames","workerThreadOptsNames","workerOptsNames","TERMINATE_METHOD_ID","WorkerThreads","tryRequireWorkerThreads","ensureWebWorker","Worker","code","setupBrowserWorker","isBrowserWorker","on","event","addEventListener","send","transfer","postMessage","setupWorkerThreadWorker","stdout","stderr","isWorkerThread","kill","disconnect","emit","setupProcessWorker","child_process","fork","isChildProcess","resolveForkOptions","opts","processExecArgv","execArgv","inspectorActive","debugBrk","stdio","handleEmittedStdPayload","payload","processing","_options","onError","platform","Blob","window","URL","createObjectURL","blob","getDefaultWorker","setupWorker","ready","requestQueue","response","request","dispatchQueuedRequests","isEvent","lastTask","terminating","obj","objectToError","globalOn","exitCode","signalCode","spawnargs","spawnfile","cleaning","terminationHandler","lastId","cleanup","removeAllListeners","killed","cleanExitTimeout","_tryRequireWorkerThreads","_setupProcessWorker","_setupBrowserWorker","_setupWorkerThreadWorker","DebugPortAllocator","ports","starting","port","isNode","nodeProcess","versions","node","worker_threads","isMainThread","connected","Window","navigator","hardwareConcurrency","workerEmit","Transfer","allowedOptionNames","objectName","optionNames","unknownOptionName","optionName","illegalOptionName","allowedOptionName","exit","parentPort","convertError","getOwnPropertyNames","product","enumerable","isPromise","run","cleanupAndExit","_exit","currentRequestId","register","onTerminate","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","loaded","__webpack_modules__","getter","__esModule","d","a","definition","o","r","nmd","children","anyMap","eventsMap","producersMap","anyProducer","resolvedPromise","listenerAdded","listenerRemoved","canEmitMetaEvents","isGlobalDebugEnabled","isEventKeyType","assertEventName","eventName","assertListener","listener","getListeners","instance","events","getEventProducers","producers","eventNames","isFinished","queue","producer","enqueue","item","finish","delete","asyncIterator","defaultMethodNamesOrAssert","allEmitteryMethods","isMetaEvent","emitMetaEvent","emitter","eventData","Emittery","emitteryPropertyName","emitteryMethodCaller","isDebugEnabled","globalThis","env","DEBUG","debug","enabled","logger","debugName","JSON","stringify","currentTime","logTime","getHours","getMinutes","getSeconds","getMilliseconds","console","log","logIfDebugEnabled","signal","off","removeEventListener","aborted","off_","enqueueProducers","listeners","anyListeners","staticListeners","staticAnyListeners","async","emitSerial","onAny","offAny","anyEvent","clearListeners","listenerCount","bindMethods","v","writable","configurable","randomUUID","rnds8Pool","poolPtr","rng","byteToHex","buf","rnds","arr","unsafeStringify","checkServiceId","serviceId","need","maxSIze","reallocBuffer","len","newBuffer","alloc","getParamBuffer","allLen","t","param","from","bitLen","subarray","getTxPdu","service","Number","getRxPdu","isNegativeResponse","nrc","respParams","paramSetValRaw","val","byte","readUInt8","phyValue","str","splitStr2","readFloatBE","readDoubleBE","CAN_ID_TYPE","CAN_ADDR_TYPE","CAN_ADDR_FORMAT","CAN_ERROR_ID","CAN_BUS_ERROR","CAN_READ_TIMEOUT","CAN_BUS_BUSY","CAN_INTERNAL_ERROR","CAN_BUS_CLOSED","CAN_PARAM_ERROR","CAN_DRIVER_SILENT","saNode","SecureAccessDll","_ref","dllPath","SeedKey","loadDll","IsLoaded","GenerateKeyExOpt","ipSeedArray","iSecurityLevel","ipVariant","ipOptions","seedArray","UINT8_ARRAY","setitem","variant","INT8_ARRAY","readInt8","KeyArray","KeySize","UINT32_PTR","ret","cast","retBuf","getitem","GenerateKeyEx","LoadDLL","LinDirection","LinMode","LinChecksumType","LIN_ERROR_ID","LIN_ADDR_TYPE","LIN_SCH_TYPE","getCheckSum","checksumType","pid","checksum","CLASSIC","getFrameData","db","frame","frameSize","signals","signalDef","singleType","initValues","initValue","bytesToCopy","signalSizeBits","startBit","bitOffset","tempValue","targetBit","LIN_BUS_ERROR","LIN_READ_TIMEOUT","LIN_BUS_BUSY","LIN_INTERNAL_ERROR","LIN_BUS_CLOSED","LIN_PARAM_ERROR","getPhysicalValue","rawValue","encodingTypes","numVal","strVal","usedEncode","encodingType","physicalValue","minValue","maxValue","scale","physValue","toFixed","tt","textInfo","logicalValue","signalValue","acc","digit","getMaxRawValue","pow","physToRaw","phys","row","factor","maxRaw","isSigned","bits","readSignalFromBuffer","isLittleEndian","startByte","startBitInByte","remainingBits","valueIndex","bitsInThisByte","mask","currentBit","valueShift","currentByte","bitInByte","valueType","Float32Array","Uint32Array","Float64Array","valueTable","physValueEnum","label","vt","valueTables","getMessageData","multiplexer","multiplexerValue","multiplexerIndicator","writeSignalToBuffer","multiplexerRange","bitValue","bitMask","setSignal","dataSet","database","can","signalName","ss","msg","messages","setFloat32","getUint32","setFloat64","clampedPhysValue","minimum","maximum","updateSignalPhys","setUint32","getFloat32","getFloat64","newPhysValue","raw","actualValue","rawToPhys","updateSignalRaw","linDb","lin","lastValue","updateLinSignalVal","PrecisionTimer","timerName","isCreated","timerMap","callCallback","taskId","addTask","delayMicrosec","intervalMicrosec","cancelTask","destroy","SomeipMessageType","REQUEST","REQUEST_NO_RETURN","NOTIFICATION","RESPONSE","REQUEST_ACK","NOTIFICATION_ACK","ERROR","RESPONSE_ACK","ERROR_ACK","UNKNOWN","SomeipMessageBase","setPayload","SomeipMessageRequest","messageType","super","SomeipMessageResponse","fromSomeipRequest","MonitorVar","parentId","desc","unit","init","ONLY","initPromiseResolve","initPromiseReject","initPromise","testCnt","testEnableControl","preserveErrorStack","atLine","line","selfTest","beforeEach","afterEach","workerData","selfDescribe","only","describe","emitMap","serviceMap","Service","isRequest","testerName","changeService","asyncEmit","getServiceName","On","Util","Once","OnOnce","Off","getServiceDesc","diagGetParameter","paramName","diagGetParameterRaw","diagGetParameterSize","diagGetParameterNames","diagSetParameterSize","bitSize","lastByte","minLen","paramSetSize","diagSetParameter","writeUInt8","tb","b","writeFloatBE","writeDoubleBE","paramSetVal","diagSetParameterRaw","outputDiag","deviceName","addressName","device","address","isReq","diagSetRaw","sid","paramLen","subData","applyBuffer","diagGetRaw","DiagJob","jobName","DiagResponse","addr","getUdsAddress","serviceName","fromDiagRequest","req","diagIsPositiveResponse","diagGetResponseCode","DiagRequest","UtilClass","isMain","funcMap","Register","jobs","cargs","workerOn","eventArray","OnCan","fc","OnSignal","OnSignalOnce","OffSignal","getTesterName","OnCanOnce","OffCan","OnLinOnce","OnLin","OffLin","OnSomeipMessage","OffSomeipMessage","OnSomeipMessageOnce","OnKey","OnKeyOnce","OffKey","OnVar","OnVarOnce","OffVar","warpFunc","resp","testControl","vars","sysVars","devices","testers","list","Statistics","buslist","BusLoad","BusLoadMin","BusLoadMax","BusLoadAvg","FrameSentFreq","FrameRecvFreq","FrameFreq","SentCnt","RecvCnt","canDevice","tester","seqList","seq","getAllSysVar","parentName","currentVar","unshift","canMsg","linMsg","frameId","linDevice","frames","tempBuffer","readUInt16BE","readUInt32BE","nextByte","encodeKey","signalRep","encodeInfo","signalEncodeTypes","someipMsg","keyDown","varUpdate","promiseList","evnetDone","__on","__start","__eventDone","Init","MODE","End","output","getSignal","found","setVar","varName","getVar","runUdsSeq","seqName","stopUdsSeq","RegisterEthVirtualEntity","entity","ip","reporter","linStartScheduler","schName","slot","activeCtrl","linPowerCtrl","power","linStopScheduler","setPwmDuty","duty","getFrameFromDB","dbType","dbName","frameName","direction","RECV","publishedBy","master","nodeName","SEND","ENHANCED","eventFrame","eventTriggeredFrames","containsFrame","frameNames","m","msgType","idType","extId","EXTENDED","STANDARD","brs","canfd","remote"],"sourceRoot":""}